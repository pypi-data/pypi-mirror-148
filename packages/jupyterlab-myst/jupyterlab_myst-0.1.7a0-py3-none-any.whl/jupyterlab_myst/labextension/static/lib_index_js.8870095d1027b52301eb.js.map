{"version":3,"sources":["webpack://jupyterlab-myst/./lib/builtins/amsmath.js","webpack://jupyterlab-myst/./lib/builtins/docutils.js","webpack://jupyterlab-myst/./lib/builtins/front-matter.js","webpack://jupyterlab-myst/./lib/builtins/index.js","webpack://jupyterlab-myst/./lib/builtins/myst-extras.js","webpack://jupyterlab-myst/./lib/index.js","webpack://jupyterlab-myst/./lib/tokens.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAAqE;AAC9B;AACvC;AACA;AACA;AACO,gBAAgB,mFAAsB,CAAC,+CAAU;AACxD;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,6BAA6B,SAAS,eAAe,SAAS;AAC9D,KAAK;AACL;AACA,oCAAoC,kPACwC;AAC5E;AACA;AACA,CAAC;;;;;;;;;;;;;;;;;;;;;ACpBoE;AAC3C;AACa;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,2DAAoB;AACjD;AACA;AACA;AACA,aAAa;AACb,wCAAwC,SAAS;AACjD;AACA;AACA;AACA;AACA;AACA;AACO,iBAAiB,mFAAsB,CAAC,+CAAU;AACzD;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,yBAAyB,KAAK;AAC9B,KAAK;AACL;AACA,qCAAqC,uPACyC;AAC9E;AACA;AACA,CAAC;;;;;;;;;;;;;;;;;;;ACpCoE;AAC9B;AACvC;AACA;AACA;AACO,oBAAoB,mFAAsB,CAAC,+CAAU;AAC5D;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA,wCAAwC,2QAC8C;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;;;;;;;;AC1B4C;AACP;AACF;AACO;AAC3C;AACA;AACA;AACO,kBAAkB,sDAAW,EAAE,+CAAQ,EAAE,6CAAO,EAAE,oDAAU;;;;;;;;;;;;;;;;;;;ACPE;AAC9B;AACvC;AACA;AACA;AACO,mBAAmB,mFAAsB,CAAC,+CAAU;AAC3D;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,wCAAwC,sQAC4C;AACpF;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;;;;;AC3BqC;AACtC,iEAAe,+CAAQ,EAAC;;;;;;;;;;;;;;;;ACDxB;AACA;AACA;AACO","file":"lib_index_js.8870095d1027b52301eb.js","sourcesContent":["import { simpleMarkdownItPlugin } from '@agoose77/jupyterlab-markup';\nimport { PACKAGE_NS } from '../tokens';\n/**\n * Provides amsmath support\n */\nexport const amsmath = simpleMarkdownItPlugin(PACKAGE_NS, {\n    id: 'markdown-it-amsmath',\n    title: 'amsmath',\n    description: 'Plugin for amsmath LaTeX environments',\n    documentationUrls: {\n        Plugin: 'https://github.com/executablebooks/markdown-it-amsmath'\n    },\n    examples: {\n        'Example ': '\\\\begin{equation}\\na = 1\\n\\\\end{equation}'\n    },\n    plugin: async () => {\n        const amsmathPlugin = await import(\n        /* webpackChunkName: \"markdown-it-amsmath\" */ 'markdown-it-amsmath');\n        return [amsmathPlugin.default];\n    }\n});\n","import { simpleMarkdownItPlugin } from '@agoose77/jupyterlab-markup';\nimport katex from 'katex';\nimport { PACKAGE_NS } from '../tokens';\n// FIXME HACK: we should really do proper math rendering\nfunction wrapDocutilsPlugin(docutilsPlugin) {\n    return function (md, options) {\n        docutilsPlugin(md, options);\n        md.renderer.rules[\"math_block\"] = (tokens, idx) => {\n            const content = tokens[idx].content.trim();\n            const rendered = katex.renderToString(content, {\n                displayMode: true,\n                throwOnError: true,\n                output: \"html\"\n            });\n            return `<div class=\"math\">${rendered}</div>`;\n        };\n    };\n}\n/**\n * Provides docutils roles and directives\n */\nexport const docutils = simpleMarkdownItPlugin(PACKAGE_NS, {\n    id: 'markdown-it-docutils',\n    title: 'Docutils',\n    description: 'Plugin for implementing docutils style roles (inline extension point) and directives (block extension point)',\n    documentationUrls: {\n        Plugin: 'https://github.com/executablebooks/markdown-it-docutils'\n    },\n    examples: {\n        'Example ': '```{name} argument\\n:option: value\\n\\ncontent\\n```'\n    },\n    plugin: async () => {\n        const docutilsPlugin = await import(\n        /* webpackChunkName: \"markdown-it-docutils\" */ 'markdown-it-docutils');\n        return [wrapDocutilsPlugin(docutilsPlugin.default)];\n    }\n});\n","import { simpleMarkdownItPlugin } from '@agoose77/jupyterlab-markup';\nimport { PACKAGE_NS } from '../tokens';\n/**\n * Provides front-matter support\n */\nexport const frontMatter = simpleMarkdownItPlugin(PACKAGE_NS, {\n    id: 'markdown-it-front-matter',\n    title: 'Front Matter',\n    description: 'Plugin for processing front matter for markdown-it markdown parser',\n    documentationUrls: {\n        Plugin: 'https://github.com/ParkSB/markdown-it-front-matter'\n    },\n    examples: {\n        'Example ': '---\\nvalid-front-matter: true\\n---'\n    },\n    plugin: async () => {\n        const frontMatterPlugin = await import(\n        /* webpackChunkName: \"markdown-it-front-matter\" */ 'markdown-it-front-matter');\n        function handleMarkup(markup) {\n            // Do nothing for now\n        }\n        function plugin(md, options) {\n            frontMatterPlugin.default(md, handleMarkup);\n        }\n        return [plugin];\n    }\n});\n","import { frontMatter } from './front-matter';\nimport { docutils } from './docutils';\nimport { amsmath } from './amsmath';\nimport { mystExtras } from './myst-extras';\n/**\n * Builtin plugins provided by this labextension\n */\nexport const BUILTINS = [frontMatter, docutils, amsmath, mystExtras];\n","import { simpleMarkdownItPlugin } from '@agoose77/jupyterlab-markup';\nimport { PACKAGE_NS } from '../tokens';\n/**\n * Provides extra MyST support\n */\nexport const mystExtras = simpleMarkdownItPlugin(PACKAGE_NS, {\n    id: 'markdown-it-myst-extras',\n    title: 'MyST Extras',\n    description: 'Additional markdown-it plugins required for the MyST specification',\n    documentationUrls: {\n        Plugin: 'https://github.com/executablebooks/markdown-it-myst-extras'\n    },\n    examples: {\n        Blockquotes: '% comment',\n        'Block Breaks': '+++',\n        'MyST Targets': '(name)=',\n        'Colon Fence': ':::name\\ncontained text\\n :::'\n    },\n    plugin: async () => {\n        const mystExtrasPlugins = await import(\n        /* webpackChunkName: \"markdown-it-myst-extras\" */ 'markdown-it-myst-extras');\n        function plugin(md, options) {\n            mystExtrasPlugins.mystBlockPlugin(md);\n            mystExtrasPlugins.colonFencePlugin(md);\n        }\n        return [plugin];\n    }\n});\n","import { BUILTINS } from './builtins';\nexport default BUILTINS;\n","/**\n * The ID stem for all plugins\n */\nexport const PACKAGE_NS = 'executablebooks/jupyterlab-markup';\n"],"sourceRoot":""}