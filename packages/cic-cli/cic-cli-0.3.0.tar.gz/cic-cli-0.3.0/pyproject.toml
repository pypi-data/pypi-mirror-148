[tool.poetry]
name = "cic-cli"
version = "0.3.0"
description = "Generic cli tooling for the CIC token network"
authors = [
  "Louis Holbrook <dev@holbrook.no>",
  "William Luke <williamluke4@gmail.com>",
]
license = "GPL-3.0-or-later"
readme = "README.md"
repository = "https://git.grassecon.net/cicnet/cic-cli"
classifiers = [
  "Programming Language :: Python :: 3",
  "Operating System :: OS Independent",
  "Development Status :: 3 - Alpha",
  "Environment :: Console",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
  "Topic :: Internet",
]
keywords = ["dlt", "blockchain", "cryptocurrency"]
packages = [
  { include = "cic" },
  { include = "cic/runnable/*.py" },
  { include = "cic/ext/**/*.py" },
  { include = "cic/cmd/**/*.py" },
]

[tool.poetry.scripts]
cic = 'cic.runnable.cic_cmd:main'

[[tool.poetry.source]]
name = "grassroots_"
url = "https://pip.grassrootseconomics.net/"
default = true

[[tool.poetry.source]]
name = "pypi_"
url = "https://pypi.org/simple/"
secondary = true

[tool.poetry.dependencies]
python = "^3.8"
funga-eth = "~0.5.5"
cic-types = "~0.2.1a8"
confini = "~0.5.3"
chainlib = "~0.0.17"
cbor2 = "5.4.1"

chainlib-eth = { version = "~0.0.25", optional = true }
eth-token-index = { version = "~0.2.4", optional = true }
eth-address-index = { version = "~0.2.4", optional = true }
okota = { version = "~0.2.5", optional = true }
cic_eth_registry = { version = "~0.6.6", optional = true }
cic_contracts = { version = "~0.0.5", optional = true }


[tool.poetry.dev-dependencies]
pytest = "6.2.5"
pytest-cov = "2.10.1"
python-semantic-release = "^7.25.2"
pylint = "^2.12.2"
black = { version = "^22.1.0", allow-prereleases = true }
eth-erc20 = ">0.1.2a3,<0.2.0"
eth_tester = "0.5.0b3"
py-evm = "0.3.0a20"
rlp = "2.0.1"

[tool.poetry.extras]
eth = [
  "chainlib-eth",
  "eth-token-index",
  "eth-address-index",
  "okota",
  "cic_eth_registry",
  "cic_contracts",
]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
addopts = "--cov=cic --cov-report term-missing -v"
testpaths = ["tests"]

[tool.semantic_release]
version_variable = ["cic/__init__.py:__version__", "pyproject.toml:version"]
version_source = "commit"
branch = "master"
upload_to_repository = true
upload_to_release = true
build_command = "pip install poetry && poetry build"
hvcs = "gitea"
hvcs_domain = "git.grassecon.net"
check_build_status = false

