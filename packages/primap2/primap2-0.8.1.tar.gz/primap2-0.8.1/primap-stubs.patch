diff -r -u xarray-orig/core/dataarray.pyi xarray/core/dataarray.pyi
--- xarray-orig/core/dataarray.pyi	2021-02-01 17:35:25.202167080 +0100
+++ xarray/core/dataarray.pyi	2021-02-01 17:36:56.462279968 +0100
@@ -1,6 +1,7 @@
 import datetime
 import numpy as np
 import pandas as pd
+import primap2
 from . import computation as computation, dtypes as dtypes, groupby as groupby, indexing as indexing, ops as ops, pdcompat as pdcompat, resample as resample, rolling as rolling, utils as utils, weighted as weighted
 from .accessor_dt import CombinedDatetimelikeAccessor as CombinedDatetimelikeAccessor
 from .accessor_str import StringAccessor as StringAccessor
@@ -34,6 +35,8 @@
     def __init__(self, data: Any=..., coords: Union[Sequence[Tuple], Mapping[Hashable, Any], None]=..., dims: Union[Hashable, Sequence[Hashable], None]=..., name: Hashable=..., attrs: Mapping=..., indexes: Dict[Hashable, pd.Index]=..., fastpath: bool=...) -> None: ...
     def to_dataset(self, dim: Hashable=..., *, name: Hashable=..., promote_attrs: bool=...) -> Dataset: ...
     @property
+    def pr(self) -> primap2.accessors.PRIMAP2DataArrayAccessor: ...
+    @property
     def name(self) -> Optional[Hashable]: ...
     @name.setter
     def name(self, value: Optional[Hashable]) -> None: ...
diff -r -u xarray-orig/core/dataset.pyi xarray/core/dataset.pyi
--- xarray-orig/core/dataset.pyi	2021-02-01 17:35:25.202167080 +0100
+++ xarray/core/dataset.pyi	2021-02-01 17:36:56.482279994 +0100
@@ -1,6 +1,7 @@
 import datetime
 import numpy as np
 import pandas as pd
+import primap2
 from . import alignment as alignment, dtypes as dtypes, duck_array_ops as duck_array_ops, formatting as formatting, formatting_html as formatting_html, groupby as groupby, ops as ops, resample as resample, rolling as rolling, utils as utils, weighted as weighted
 from ..backends import AbstractDataStore as AbstractDataStore, ZarrStore as ZarrStore
 from .alignment import align as align
@@ -44,6 +45,8 @@

 class Dataset(Mapping, ImplementsDatasetReduce, DataWithCoords):
     def __init__(self, data_vars: Mapping[Hashable, Any]=..., coords: Mapping[Hashable, Any]=..., attrs: Mapping[Hashable, Any]=...) -> None: ...
+    @property
+    def pr(self) -> primap2.accessors.PRIMAP2DatasetAccessor: ...
     @classmethod
     def load_store(cls: Any, store: Any, decoder: Any=...) -> Dataset: ...
     @property
