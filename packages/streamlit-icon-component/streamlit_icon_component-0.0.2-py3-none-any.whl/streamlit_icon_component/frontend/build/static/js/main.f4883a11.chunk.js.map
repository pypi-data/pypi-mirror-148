{"version":3,"sources":["IconComponent.tsx","index.tsx"],"names":["IconComponent","buttonClicked","Streamlit","setComponentValue","render","icon_name","props","args","icon_button","disabled","icon_size","component","icon","Icon","fontSize","IconButton","onClick","style","padding","StreamlitComponentBase","withStreamlitConnection","ReactDOM","StrictMode","document","getElementById"],"mappings":"yQAcMA,E,4MAEJC,cAAgB,WACdC,IAAUC,mBAAkB,I,EAEvBC,OAAS,WAId,IAAMC,EAAY,EAAKC,MAAMC,KAAX,UACZC,EAAc,EAAKF,MAAMC,KAAX,YACdE,EAAW,EAAKH,MAAMC,KAAX,SACXG,EAAY,EAAKJ,MAAMC,KAAX,UAIdI,EAAY,KACZC,EAAO,kBAACC,EAAA,EAAD,CAAMC,SAAUJ,GAAYL,GAYvC,OATEM,EADEH,EAEA,kBAACO,EAAA,EAAD,CAAYN,SAAUA,EAAUO,QAAS,kBAAM,EAAKf,kBACjDW,GAIOA,EAIZ,yBAAKK,MAhBO,CAAEC,QAAS,IAiBpBP,I,yBA/BmBQ,KAqCbC,cAAwBpB,GC/CvCqB,IAASjB,OACP,kBAAC,IAAMkB,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.f4883a11.chunk.js","sourcesContent":["import {\n  Streamlit,\n  StreamlitComponentBase,\n  withStreamlitConnection,\n} from \"streamlit-component-lib\"\n\nimport React, { ReactNode } from \"react\";\n// import * as Icons from '@material-ui/icons'\nimport IconButton from '@mui/material/IconButton';\n// import DeleteIcon from '@mui/icons-material/Delete';\n\n// the `render()` function is called when component is re-rendered\nimport Icon from '@mui/material/Icon';\n\nclass IconComponent extends StreamlitComponentBase<any> {\n\n  buttonClicked = () => {\n    Streamlit.setComponentValue(true)\n  }\n  public render = (): ReactNode => {\n    // Arguments that are passed to the plugin in Python are accessible\n    // via `this.props.args`\n\n    const icon_name = this.props.args[\"icon_name\"]\n    const icon_button = this.props.args[\"icon_button\"]\n    const disabled = this.props.args[\"disabled\"]\n    const icon_size = this.props.args[\"icon_size\"]\n\n    const style = { padding: 1 }\n\n    let component = null;\n    let icon = <Icon fontSize={icon_size}>{icon_name}</Icon>\n    \n    if (icon_button) {\n      component = (\n        <IconButton disabled={disabled} onClick={() => this.buttonClicked()}>\n          {icon}\n        </IconButton>\n      )\n    } else {\n      component = icon\n    }\n\n    return (\n      <div style={style}>\n        {component}\n      </div>\n    )\n  }\n}\n\nexport default withStreamlitConnection(IconComponent)","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport IconComponent from \"./IconComponent\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <IconComponent />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}