# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: anki/import_export.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from anki import generic_pb2 as anki_dot_generic__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x18\x61nki/import_export.proto\x12\x12\x61nki.import_export\x1a\x12\x61nki/generic.proto\"]\n\x1eImportCollectionPackageRequest\x12\x10\n\x08\x63ol_path\x18\x01 \x01(\t\x12\x13\n\x0b\x62\x61\x63kup_path\x18\x02 \x01(\t\x12\x14\n\x0cmedia_folder\x18\x03 \x01(\t\"Y\n\x1e\x45xportCollectionPackageRequest\x12\x10\n\x08out_path\x18\x01 \x01(\t\x12\x15\n\rinclude_media\x18\x02 \x01(\x08\x12\x0e\n\x06legacy\x18\x03 \x01(\x08\"\xaf\x01\n\x0fPackageMetadata\x12<\n\x07version\x18\x01 \x01(\x0e\x32+.anki.import_export.PackageMetadata.Version\"^\n\x07Version\x12\x13\n\x0fVERSION_UNKNOWN\x10\x00\x12\x14\n\x10VERSION_LEGACY_1\x10\x01\x12\x14\n\x10VERSION_LEGACY_2\x10\x02\x12\x12\n\x0eVERSION_LATEST\x10\x03\"\xbf\x01\n\x0cMediaEntries\x12<\n\x07\x65ntries\x18\x01 \x03(\x0b\x32+.anki.import_export.MediaEntries.MediaEntry\x1aq\n\nMediaEntry\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x0c\n\x04size\x18\x02 \x01(\r\x12\x0c\n\x04sha1\x18\x03 \x01(\x0c\x12!\n\x13legacy_zip_filename\x18\xff\x01 \x01(\rH\x00\x88\x01\x01\x42\x16\n\x14_legacy_zip_filename2\xdd\x01\n\x13ImportExportService\x12\x62\n\x17ImportCollectionPackage\x12\x32.anki.import_export.ImportCollectionPackageRequest\x1a\x13.anki.generic.Empty\x12\x62\n\x17\x45xportCollectionPackage\x12\x32.anki.import_export.ExportCollectionPackageRequest\x1a\x13.anki.generic.Emptyb\x06proto3')



_IMPORTCOLLECTIONPACKAGEREQUEST = DESCRIPTOR.message_types_by_name['ImportCollectionPackageRequest']
_EXPORTCOLLECTIONPACKAGEREQUEST = DESCRIPTOR.message_types_by_name['ExportCollectionPackageRequest']
_PACKAGEMETADATA = DESCRIPTOR.message_types_by_name['PackageMetadata']
_MEDIAENTRIES = DESCRIPTOR.message_types_by_name['MediaEntries']
_MEDIAENTRIES_MEDIAENTRY = _MEDIAENTRIES.nested_types_by_name['MediaEntry']
_PACKAGEMETADATA_VERSION = _PACKAGEMETADATA.enum_types_by_name['Version']
ImportCollectionPackageRequest = _reflection.GeneratedProtocolMessageType('ImportCollectionPackageRequest', (_message.Message,), {
  'DESCRIPTOR' : _IMPORTCOLLECTIONPACKAGEREQUEST,
  '__module__' : 'anki.import_export_pb2'
  # @@protoc_insertion_point(class_scope:anki.import_export.ImportCollectionPackageRequest)
  })
_sym_db.RegisterMessage(ImportCollectionPackageRequest)

ExportCollectionPackageRequest = _reflection.GeneratedProtocolMessageType('ExportCollectionPackageRequest', (_message.Message,), {
  'DESCRIPTOR' : _EXPORTCOLLECTIONPACKAGEREQUEST,
  '__module__' : 'anki.import_export_pb2'
  # @@protoc_insertion_point(class_scope:anki.import_export.ExportCollectionPackageRequest)
  })
_sym_db.RegisterMessage(ExportCollectionPackageRequest)

PackageMetadata = _reflection.GeneratedProtocolMessageType('PackageMetadata', (_message.Message,), {
  'DESCRIPTOR' : _PACKAGEMETADATA,
  '__module__' : 'anki.import_export_pb2'
  # @@protoc_insertion_point(class_scope:anki.import_export.PackageMetadata)
  })
_sym_db.RegisterMessage(PackageMetadata)

MediaEntries = _reflection.GeneratedProtocolMessageType('MediaEntries', (_message.Message,), {

  'MediaEntry' : _reflection.GeneratedProtocolMessageType('MediaEntry', (_message.Message,), {
    'DESCRIPTOR' : _MEDIAENTRIES_MEDIAENTRY,
    '__module__' : 'anki.import_export_pb2'
    # @@protoc_insertion_point(class_scope:anki.import_export.MediaEntries.MediaEntry)
    })
  ,
  'DESCRIPTOR' : _MEDIAENTRIES,
  '__module__' : 'anki.import_export_pb2'
  # @@protoc_insertion_point(class_scope:anki.import_export.MediaEntries)
  })
_sym_db.RegisterMessage(MediaEntries)
_sym_db.RegisterMessage(MediaEntries.MediaEntry)

_IMPORTEXPORTSERVICE = DESCRIPTOR.services_by_name['ImportExportService']
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _IMPORTCOLLECTIONPACKAGEREQUEST._serialized_start=68
  _IMPORTCOLLECTIONPACKAGEREQUEST._serialized_end=161
  _EXPORTCOLLECTIONPACKAGEREQUEST._serialized_start=163
  _EXPORTCOLLECTIONPACKAGEREQUEST._serialized_end=252
  _PACKAGEMETADATA._serialized_start=255
  _PACKAGEMETADATA._serialized_end=430
  _PACKAGEMETADATA_VERSION._serialized_start=336
  _PACKAGEMETADATA_VERSION._serialized_end=430
  _MEDIAENTRIES._serialized_start=433
  _MEDIAENTRIES._serialized_end=624
  _MEDIAENTRIES_MEDIAENTRY._serialized_start=511
  _MEDIAENTRIES_MEDIAENTRY._serialized_end=624
  _IMPORTEXPORTSERVICE._serialized_start=627
  _IMPORTEXPORTSERVICE._serialized_end=848
# @@protoc_insertion_point(module_scope)
