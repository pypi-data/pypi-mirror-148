Metadata-Version: 2.1
Name: circles-file-iterator
Version: 1.0.0
Summary: Allows to iterate over CyVerse CIRCLES files
Home-page: https://github.com/codingrosquick/circles_file_handler
Author: Noe Carras
Author-email: carras.noe@gmail.com
License: MIT
Platform: UNKNOWN
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3.8
Description-Content-Type: text/markdown
Requires-Dist: DateTime
Requires-Dist: defusedxml
Requires-Dist: importlib-metadata
Requires-Dist: numpy
Requires-Dist: pandas
Requires-Dist: prettytable
Requires-Dist: python-dateutil
Requires-Dist: python-irodsclient
Requires-Dist: pytz
Requires-Dist: six
Requires-Dist: typing-extensions
Requires-Dist: wcwidth
Requires-Dist: zipp
Requires-Dist: zope.interface

# File Iterator and IRODS Utility classes

### Timeline
This repo gives utility classes for handling file interactions with CIRCLES CyVerse.

The package will be published on Pip once stable and tested.


## CONFIGURATION

### Install the packages

To install the required packages, simply run in the terminal:
```
python3 -m venv venv
source venv/bin/activate
pip install requirements.txt
```


### IRODS environment

To connect to CyVerse, you need your profile to be set.To retrieve this profile, the irods client tries:
    1. Using the configuration file located in ~/.irods/irods_environment.json
    2. If not located, the file given by the environment variable IRODS_ENVIRONMENT_FILE

To help in this configuration, a method, create_irods_env() can be used.
Check out the file ```code_examples/example_irods``` for an example of such configuration.

WARNING: If your access to CyVerse through IRODS already works locally, there would be no need to do this step.

Once this has been done one time, there will be no need for using this method on local machines.

If you are working within Docker containers or VMs environment, you may need to call this at the beginning of each task.


### Cache folders

To configure the cache, open the file ```/global_variables/global_variables.py```.

Then set the variable ```local_path``` to the root of the folder you will be working into.
Check out the file ```code_examples/example_irods``` for an example of such configuration.












