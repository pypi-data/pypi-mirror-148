# -*- coding: utf-8 -*-
from setuptools import setup

packages = \
['geoip_network']

package_data = \
{'': ['*']}

install_requires = \
['requests>=2.27.1,<3.0.0']

setup_kwargs = {
    'name': 'geoip-network',
    'version': '0.1.3',
    'description': 'The official python interface to GeoIP.Network',
    'long_description': '# GeoIP.Network Python Library\n![Release Badge](https://gitlab.com/geoip.network/python-library/-/badges/release.svg)\n![Pipeline Badge](https://gitlab.com/geoip.network/python-library/badges/master/pipeline.svg)\n\nThe official python interface to GeoIP.Network\n\n![Screenshot of example code below](https://gitlab.com/geoip.network/python-library/-/raw/031021231b1275e3b015b178a39ed2f7b61c3450/screenshots/screenshot.png)\n\nLocalize IP addresses instantly anywhere in the world.\n\nImprove your customer’s experience and optimize your marketing by using GeoIP.Network to discover your client’s location in real-time.\n\nOur API is free to use for up to 10,000 requests per day (more than most commercial projects offer per month in their paid packages) - or unlimited if you sponsor the project for the cost of a cup of coffee per month.\nDiscover details like ISP, Country, and Location instantly.\nGeoIP.Network is a Not-For-Profit (and open-source) project that aims to provide reliable and accurate IP localization data for free to everyone. Building on research done at world leading universities, we use a blend of information from the Internet Routing Registry (IRR), live BGP streams, and a stochastic-progressive latency measurement algorithm to provide the most up-to-date and accurate data possible.\n\nTLDR; We use science and public data and offer accurate GeoIP data for free.\n\n## Usage (free < 10000 requests / day):\n\n___NOTE: The following IP addresses are Documentation addresses. As such you will need to replace them with valid public IP addresses for these examples to work.___\n\n```python\nimport geoip_network\n# Single IP\nresult = geoip_network.lookup_ip("198.51.100.1")\nprint(result.to_dict())\n# {"allocated_cc": "--", "as-name": "Documentation ASN", "asn": "AS64496", "cidr": "198.51.100.0/24", "geo": {"geometry": {"coordinates": [-112.404207, 45.73643438], "type": "Point"}, "properties": {"radius": 0.0}, "type": "Feature"}, "rir": "IANA", "timestamp": 1643422555},\n\n# IP Range (CIDR)\nresult = geoip_network.lookup_cidr("198.51.100.0/24")\nprint(result.to_dict())\n# {"allocated_cc": "--", "as-name": "Documentation ASN", "asn": "AS64496", "cidr": "198.51.100.0/24", "geo": {"geometry": {"coordinates": [-112.404207, 45.73643438], "type": "Point"}, "properties": {"radius": 0.0}, "type": "Feature"}, "rir": "IANA", "timestamp": 1643422555},\n\n# Bulk lookup\nfor result in geoip_network.lookup_bulk(["2001:db8::/48", "198.51.100.1", "0.0.0.0/24"]):\n    print(result.to_dict())\n# {"allocated_cc": "--", "as-name": "Documentation ASN", "asn": "AS64496", "cidr": "2001:db8::/32", "geo": {"geometry": {"coordinates": [16.72425629, 62.88018421], "type": "Point"}, "properties": {"radius": 0.0}, "type": "Feature"}, "rir": "IANA", "timestamp": 1634593342},\n# {"allocated_cc": "--", "as-name": "Documentation ASN", "asn": "AS64496", "cidr": "198.51.100.0/24", "geo": {"geometry": {"coordinates": [-112.404207, 45.73643438], "type": "Point"}, "properties": {"radius": 0.0}, "type": "Feature"}, "rir": "IANA", "timestamp": 1643422555},\n# {"error": "no covering prefix found"}\n```\n\n## Usage (sponsor):\n___NOTE: The following IP addresses are Documentation addresses. As such you will need to replace them with valid public IP addresses for these examples to work.___\n```python\nimport geoip_network\n# Login\n\ngeoip = geoip_network.GeoIP("api_username", "api_password")\n# Single IP\n\nresult = geoip.lookup_ip("198.51.100.1")\nprint(result.to_dict())\n# {"allocated_cc": "--", "as-name": "Documentation ASN", "asn": "AS64496", "cidr": "198.51.100.0/24", "geo": {"geometry": {"coordinates": [-112.404207, 45.73643438], "type": "Point"}, "properties": {"radius": 0.0}, "type": "Feature"}, "rir": "IANA", "timestamp": 1643422555},\n\n# IP Range (CIDR)\nresult = geoip.lookup_cidr("198.51.100.0/24")\nprint(result.to_dict())\n# {"allocated_cc": "--", "as-name": "Documentation ASN", "asn": "AS64496", "cidr": "198.51.100.0/24", "geo": {"geometry": {"coordinates": [-112.404207, 45.73643438], "type": "Point"}, "properties": {"radius": 0.0}, "type": "Feature"}, "rir": "IANA", "timestamp": 1643422555},\n\n# Bulk lookup\nfor result in geoip.lookup_bulk(["2001:db8::/48", "198.51.100.1", "0.0.0.0/24"]):\n    print(result.to_dict())\n# {"allocated_cc": "--", "as-name": "Documentation ASN", "asn": "AS64496", "cidr": "2001:db8::/32", "geo": {"geometry": {"coordinates": [16.72425629, 62.88018421], "type": "Point"}, "properties": {"radius": 0.0}, "type": "Feature"}, "rir": "IANA", "timestamp": 1634593342},\n# {"allocated_cc": "--", "as-name": "Documentation ASN", "asn": "AS64496", "cidr": "198.51.100.0/24", "geo": {"geometry": {"coordinates": [-112.404207, 45.73643438], "type": "Point"}, "properties": {"radius": 0.0}, "type": "Feature"}, "rir": "IANA", "timestamp": 1643422555},\n# {"error": "no covering prefix found"}\n```\n### Alternatively\n___NOTE: The following IP addresses are Documentation addresses. As such you will need to replace them with valid public IP addresses for these examples to work.___\n```python\nimport geoip_network\n# Single IP\n\nresult = geoip_network.lookup_ip("198.51.100.1", auth="<bearer_token>")\nprint(result.to_dict())\n# {"allocated_cc": "--", "as-name": "Documentation ASN", "asn": "AS64496", "cidr": "198.51.100.0/24", "geo": {"geometry": {"coordinates": [-112.404207, 45.73643438], "type": "Point"}, "properties": {"radius": 0.0}, "type": "Feature"}, "rir": "IANA", "timestamp": 1643422555},\n\n# IP Range (CIDR)\nresult = geoip_network.lookup_cidr("198.51.100.0/24", auth="<bearer_token>")\nprint(result.to_dict())\n# {"allocated_cc": "--", "as-name": "Documentation ASN", "asn": "AS64496", "cidr": "198.51.100.0/24", "geo": {"geometry": {"coordinates": [-112.404207, 45.73643438], "type": "Point"}, "properties": {"radius": 0.0}, "type": "Feature"}, "rir": "IANA", "timestamp": 1643422555},\n\n# Bulk lookup\nfor result in geoip_network.lookup_bulk(["2001:db8::/48", "198.51.100.1", "0.0.0.0/24"], auth="<bearer_token>"):\n    print(result.to_dict())\n# {"allocated_cc": "--", "as-name": "Documentation ASN", "asn": "AS64496", "cidr": "2001:db8::/32", "geo": {"geometry": {"coordinates": [16.72425629, 62.88018421], "type": "Point"}, "properties": {"radius": 0.0}, "type": "Feature"}, "rir": "IANA", "timestamp": 1634593342},\n# {"allocated_cc": "--", "as-name": "Documentation ASN", "asn": "AS64496", "cidr": "198.51.100.0/24", "geo": {"geometry": {"coordinates": [-112.404207, 45.73643438], "type": "Point"}, "properties": {"radius": 0.0}, "type": "Feature"}, "rir": "IANA", "timestamp": 1643422555},\n# {"error": "no covering prefix found"}\n```\n\n## Installation (from pip):\n```shell\npip install geoip_network\n```\n\n## Installation (from source):\n```shell\ngit clone https://gitlab.com/geoip.network/python-library\npoetry install\n```\n',
    'author': 'Tim Armstrong',
    'author_email': 'tim@plaintextnerds.com',
    'maintainer': 'Tim Armstrong',
    'maintainer_email': 'tim@plaintextnerds.com',
    'url': 'https://geoip.network/',
    'packages': packages,
    'package_data': package_data,
    'install_requires': install_requires,
    'python_requires': '>=3.7,<4',
}


setup(**setup_kwargs)
