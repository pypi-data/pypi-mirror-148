#!/usr/bin/env python3

import argparse
import os
import os.path
import sys

sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), "..")))
import entropy  # nopep8

parser = argparse.ArgumentParser(
    description="Ensure a Entropy account exists for the wallet and group."
)
entropy.ContextBuilder.add_command_line_parameters(parser)
entropy.Wallet.add_command_line_parameters(parser)
parser.add_argument(
    "--wait",
    action="store_true",
    default=False,
    help="wait until the transactions are confirmed",
)
args: argparse.Namespace = entropy.parse_args(parser)

with entropy.ContextBuilder.from_command_line_parameters(args) as context:
    wallet = entropy.Wallet.from_command_line_parameters_or_raise(args)
    group = entropy.Group.load(context)
    accounts = entropy.Account.load_all_for_owner(context, wallet.address, group)

    if len(accounts) > 0:
        entropy.output(
            f"At least one account already exists for group {group.address} and wallet {wallet.address}"
        )
        entropy.output(accounts)
    else:
        signers: entropy.CombinableInstructions = (
            entropy.CombinableInstructions.from_wallet(wallet)
        )
        init = entropy.build_entropy_create_account_instructions(context, wallet, group)
        all_instructions = signers + init
        signatures = all_instructions.execute(context)

        if args.wait:
            entropy.output("Waiting on transaction signatures:")
            entropy.output(entropy.indent_collection_as_str(signatures, 1))
            results = entropy.WebSocketTransactionMonitor.wait_for_all(
                context.client.cluster_ws_url, signatures
            )
            entropy.output("Transaction results:")
            entropy.output(entropy.indent_collection_as_str(results, 1))
        else:
            entropy.output("Transaction signatures:")
            entropy.output(entropy.indent_collection_as_str(signatures, 1))

        updated_accounts = entropy.Account.load_all_for_owner(
            context, wallet.address, group
        )
        entropy.output(updated_accounts)
