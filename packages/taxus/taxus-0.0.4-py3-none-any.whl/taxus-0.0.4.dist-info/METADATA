Metadata-Version: 2.1
Name: taxus
Version: 0.0.4
Summary: Gaussian Process models for transcriptome data
Home-page: https://github.com/holmrenser/taxus
License: MIT
Author: Rens Holmer
Requires-Python: >=3.8,<4.0
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved :: MIT License
Classifier: Natural Language :: English
Classifier: Operating System :: MacOS
Classifier: Operating System :: Microsoft :: Windows
Classifier: Operating System :: POSIX
Classifier: Operating System :: Unix
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Topic :: Scientific/Engineering :: Bio-Informatics
Classifier: Topic :: Utilities
Requires-Dist: gpytorch (>=1.6.0,<2.0.0)
Requires-Dist: numpy (>=1.22.3,<2.0.0)
Requires-Dist: pandas (>=1.4.1,<2.0.0)
Requires-Dist: patsy (>=0.5.2,<0.6.0)
Requires-Dist: torch (>=1.11.0,<2.0.0)
Requires-Dist: tqdm (>=4.63.1,<5.0.0)
Project-URL: Repository, https://github.com/holmrenser/taxus
Description-Content-Type: text/markdown

# _taxus_

### Gaussian Process models for transcriptome data

[![PyPI version](https://badge.fury.io/py/taxus.svg)](https://badge.fury.io/py/taxus)
[![CI](https://github.com/holmrenser/taxus/actions/workflows/ci.yml/badge.svg)](https://github.com/holmrenser/taxus/actions/workflows/ci.yml)
[![Coverage Status](https://coveralls.io/repos/github/holmrenser/taxus/badge.svg?branch=main)](https://coveralls.io/github/holmrenser/taxus?branch=main)

```
pip install taxus
```

```python
import taxus as tx

# at the moment importing data has to be handled by the user
covariates, counts = get_mock_data()
gp = tx.GP('~ time + treatment', covariates, counts, kernel='rbf', likelihood='poisson')
elbo = gp.fit()

likelihood_ratio_rbf = tx.LRT(
    full_formula='~ time + treatment',
    reduced_formula='~ time',
    covariates=covariates,
    expression=counts,
    kernel='rbf',
    likelihood='nb'
)

likelihood_ratio_linear = tx.LRT(
    full_formula='~ C(time) + C(treatment) + C(time) : C(treatment)',
    reduced_formula='~ C(time) + C(treatment)',
    covariates=covariates,
    expression=counts,
    kernel='linear',
    likelihood='nb'
)
```

