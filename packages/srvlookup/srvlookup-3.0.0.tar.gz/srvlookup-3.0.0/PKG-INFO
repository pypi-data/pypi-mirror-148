Metadata-Version: 2.1
Name: srvlookup
Version: 3.0.0
Summary: Service lookup using DNS SRV records
Home-page: https://github.com/gmr/srvlookup
Author: Gavin M. Roy
Author-email: gavinr@aweber.com
License: BSD
Project-URL: Bug Tracker, https://github.com/gmr/srvlookup/issues
Project-URL: Documentation, https://srvlookup.readthedocs.io
Project-URL: Source Code, https://github.com/gmr/srvlookup/
Keywords: dns,srv
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: BSD License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: Implementation :: CPython
Classifier: Programming Language :: Python :: Implementation :: PyPy
Classifier: Topic :: Communications
Classifier: Topic :: Internet
Classifier: Topic :: Software Development :: Libraries
Requires-Python: >=3.7
Description-Content-Type: text/x-rst; charset=UTF-8
Provides-Extra: testing
License-File: LICENSE

srvlookup
=========
A small wrapper for dnspython to return SRV records for a given host, protocol,
and domain name as a list of namedtuples.

|Version| |Status| |Coverage| |License|

Installation
------------
srvlookup is available on the `Python Package Index <https://pypi.python.org/pypi/srvlookup>`_. Simply:

.. code:: bash

    pip install srvlookup

Example
-------
.. code:: python

    >>> import srvlookup
    >>> srvlookup.lookup('api', 'memcached')
    [SRV(host='192.169.1.100', port=11211, priority=1, weight=0, host='memcache1.local'),
     SRV(host='192.168.1.102', port=11211, priority=1, weight=0, host='memcache2.local'),
     SRV(host='192.168.1.120', port=11211, priority=1, weight=0, host='memcache3.local'),
     SRV(host='192.168.1.126', port=11211, priority=1, weight=0, host='memcache4.local')]
    >>>

Testing
-------
.. code:: bash

    python setup.py nosetests


Requirements
------------

-  `dnspython <https://pypi.python.org/pypi/dnspython>`_

.. |Version| image:: https://img.shields.io/pypi/v/srvlookup.svg?
   :target: https://pypi.python.org/pypi/srvlookup

.. |Status| image:: https://img.shields.io/travis/gmr/srvlookup.svg?
   :target: https://travis-ci.org/gmr/srvlookup

.. |Coverage| image:: https://img.shields.io/codecov/c/github/gmr/srvlookup.svg?
   :target: https://codecov.io/github/gmr/srvlookup?branch=master

.. |License| image:: https://img.shields.io/pypi/l/pika.svg?
   :target: https://pika.readthedocs.io


