# Part of the ROBOID project - http://hamster.school
# Copyright (C) 2016 Kwang-Hyun Park (akaii@kw.ac.kr)
# 
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2.1 of the License, or (at your option) any later version.
# 
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
# 
# You should have received a copy of the GNU Lesser General
# Public License along with this library; if not, write to the
# Free Software Foundation, Inc., 59 Temple Place, Suite 330,
# Boston, MA  02111-1307  USA

import base64, codecs
magic = 'IyBQYXJ0IG9mIHRoZSBST0JPSUQgcHJvamVjdCAtIGh0dHA6Ly9oYW1zdGVyLnNjaG9vbAojIENvcHlyaWdodCAoQykgMjAxNiBLd2FuZy1IeXVuIFBhcmsgKGFrYWlpQGt3LmFjLmtyKQojIAojIFRoaXMgbGlicmFyeSBpcyBmcmVlIHNvZnR3YXJlOyB5b3UgY2FuIHJlZGlzdHJpYnV0ZSBpdCBhbmQvb3IKIyBtb2RpZnkgaXQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBHTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljCiMgTGljZW5zZSBhcyBwdWJsaXNoZWQgYnkgdGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbjsgZWl0aGVyCiMgdmVyc2lvbiAyLjEgb2YgdGhlIExpY2Vuc2UsIG9yIChhdCB5b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNpb24uCiMgCiMgVGhpcyBsaWJyYXJ5IGlzIGRpc3RyaWJ1dGVkIGluIHRoZSBob3BlIHRoYXQgaXQgd2lsbCBiZSB1c2VmdWwsCiMgYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkgb2YKIyBNRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UuICBTZWUgdGhlIEdOVQojIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvciBtb3JlIGRldGFpbHMuCiMgCiMgWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsCiMgUHVibGljIExpY2Vuc2UgYWxvbmcgd2l0aCB0aGlzIGxpYnJhcnk7IGlmIG5vdCwgd3JpdGUgdG8gdGhlCiMgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLCBJbmMuLCA1OSBUZW1wbGUgUGxhY2UsIFN1aXRlIDMzMCwKIyBCb3N0b24sIE1BICAwMjExMS0xMzA3ICBVU0EKCmltcG9ydCBjdjIKaW1wb3J0IG51bXB5IGFzIG5wCmltcG9ydCBvcwpmcm9tIGRhdGV0aW1lIGltcG9ydCBkYXRldGltZQpmcm9tIHRpbWVpdCBpbXBvcnQgZGVmYXVsdF90aW1lciBhcyB0aW1lcgpmcm9tIHJvYm9pZGFpLl9sYW5nIGltcG9ydCB0cmFuc2xhdGUKCgpfVEVYVFMgPSB7CiAgICAnZW4nOiB7CiAgICAgICAgJ2NhcHR1cmVfY29sb3InOiAnUHJlc3MgU1BBQ0Uga2V5IHRvIGNvbGxlY3QgY29sb3IgZGF0YSBvciBFU0Mga2V5IHRvIHF1aXQuJywKICAgICAgICAnY2FwdHVyZV9pbWFnZSc6ICdQcmVzcyBTUEFDRSBrZXkgdG8gc2F2ZSBpbWFnZSBvciBFU0Mga2V5IHRvIHF1aXQuJywKICAgICAgICAncmVjb3JkX2ltYWdlJzogJ1ByZXNzIEVTQyBrZXkgdG8gcXVpdC4nLAogICAgICAgICdzYXZlZCc6ICdzYXZlZCcKICAgIH0sCiAgICAna28nOiB7CiAgICAgICAgJ2NhcHR1cmVfY29sb3InOiAn7Iqk7Y6Y7J207IqkIO2CpOulvCDriITrpbTrqbQg7IOJ6rmUIOuNsOydtO2EsOulvC'
love = 'QfvWwfc5UgyMwdf6NtEIAQVB2PcBhyiPQevVGecoGedoDt7XXS66BZ7MJc64hV64hxYvpfPvNtVPNtVPNtW2AupUE1pzIsnJ1uM2HaBvNa7Vdx7L6L7W207VdxVB2PcBhyiPQevVGecoGedoDt7WvO7VBOVB2IaPQfadKfaLDt7XPN7W6y7MJL6eBtVRIGDlQgtdGecojt64vR66J066z0VBlvurhwwB2IdrhYvBhYcP4aYNbtVPNtVPNtVPqlMJAipzEsnJ1uM2HaBvNaEIAQVB2PcBhyiPQevVGecoGedoDt7XXS66BZ7MJc64hV64hxYvpfPvNtVPNtVPNtW3AuqzIxWmbtW+lttBlrcrhDdPpXVPNtVU0XsDcsD09ZG1WsH1OOD0IGVQ0trjbtVPNtW2umqvp6VTA2Zv5QG0kCHy9PE1VlFSAJYNbtVPNtW3ywpzAvWmbtL3LlYxACGR9FK0WUHwWMD3WQLtc9PtbXMTIzVTAioTkyL3EsnJ1uM2HbL2SgYPOzo2kxMKVfVTkuozp9W2IhWlx6PvNtVPOjpzyhqPu0pzShp2kuqTHbW2kuLv5snJ1uM2HhL2SjqUIlMI9coJSaMFpfVTkuozpcXDbtVPNtL291oaDtCFNjPvNtVPO3nTyfMFOHpaIyBtbtVPNtVPNtVTygLJqyYPOeMKxtCFOwLJ0hpzIuMS91oaEcoS9eMKxbXDbtVPNtVPNtVTyzVTgyrFN9CFNaMKAwWmbXVPNtVPNtVPNtVPNtLaWyLJfXVPNtVPNtVPOyoTyzVTgyrFN9CFNaVPp6PvNtVPNtVPNtVPNtVTyzXUAuqzIsnJ1uM2HbnJ1uM2HfVTMioTEypvxcBtbtVPNtVPNtVPNtVPNtVPNtL291oaDtXm0tZDbtVPNtVPNtVPNtVPNtVPNtpUWcoaDbqUWuoaAfLKEyXPqfLJVhK2ygLJqyYaAuqzIxWljtoTShMlxfVTAiqJ50XDbXMTIzVUWyL29lMS9coJSaMFuwLJ0fVTMioTEypvjtnJ50MKW2LJksoKAyLm0kZQNfVTMlLJ1ypm0lZPjtL291oaExo3qhCGZfVTkuozp9W2IhWlx6PvNtVPOjpzyhqPu0pzShp2kuqTHbW2kuLv5snJ1uM2HhpzIwo3WxK2ygLJqyWljtoTShMlxcPvNtVPOcMvOwo3IhqTEiq24tCvNjBtbtVPNtVPNtVTAuoF5wo3IhqS9xo3qhXTAiqJ50MT93ovxXVPNtVTAiqJ50VQ0tZNbtVPNtqTygMJ91qPN9VUEcoJIlXPxXVPNtVUqbnJkyVSElqJH6PvNtVPNtVPNtnJLtL291oaDtCw0tMaWuoJImBvOvpzIunjbtVPNtVPNtVTygLJqyVQ0tL2SgYaWyLJDbXDbtVPNtVPNtVTAuoF5mnT93XTygLJqyXDbtVPNtVPNtVTyzVUEcoJIlXPxtCvO0nJ1yo3I0BtbtVPNtVPNtVPNtVPOcMvumLKMyK2ygLJqyXTygLJqyYPOzo2kxMKVcXGbXVPNtVPNtVPNtVPNtVPNtVTAiqJ50VPf9VQRXVPNtVPNtVPNtVPNtVPNtVUOlnJ50XUElLJ5moTS0MFtaoTSvYy9coJSaMF5mLKMyMPpfVTkuozpcYPOwo3IhqPxXVPNtVPNtVPNtVPNtqTygMJ91qPNeCFOcoaEypaMuoS9gp2IwVP8tZGNjZP4jPvNtVPNtVPNtnJLtL2SgYzAbMJAeK2gyrFtcVQ09VPqyp2ZaBtbtVPNtVPNtVPNtVPOvpzIunjbXMTIz'
god = 'IHNhdmVfaW1hZ2UoaW1hZ2UsIGZvbGRlciwgZmlsZW5hbWU9Tm9uZSk6CiAgICBpZiBpbWFnZSBpcyBub3QgTm9uZSBhbmQgZm9sZGVyIGlzIG5vdCBOb25lOgogICAgICAgIGlmIG5vdCBvcy5wYXRoLmlzZGlyKGZvbGRlcik6CiAgICAgICAgICAgIG9zLm1ha2VkaXJzKGZvbGRlcikKICAgICAgICBpZiBmaWxlbmFtZSBpcyBOb25lOgogICAgICAgICAgICBmaWxlbmFtZSA9IGRhdGV0aW1lLm5vdygpLnN0cmZ0aW1lKCIlWSVtJWRfJUglTSVTXyVmIikgKyAnLnBuZycKICAgICAgICBpZiBjdjIuaW13cml0ZShvcy5wYXRoLmpvaW4oZm9sZGVyLCBmaWxlbmFtZSksIGltYWdlKToKICAgICAgICAgICAgcmV0dXJuIFRydWUKICAgICAgICB0cnk6CiAgICAgICAgICAgIGV4dCA9IG9zLnBhdGguc3BsaXRleHQoZmlsZW5hbWUpWzFdCiAgICAgICAgICAgIHJldHZhbCwgYnVmID0gY3YyLmltZW5jb2RlKGV4dCwgaW1hZ2UpCiAgICAgICAgICAgIGlmIHJldHZhbDoKICAgICAgICAgICAgICAgIHdpdGggb3Blbihvcy5wYXRoLmpvaW4oZm9sZGVyLCBmaWxlbmFtZSksIG1vZGU9J3crYicpIGFzIGY6CiAgICAgICAgICAgICAgICAgICAgYnVmLnRvZmlsZShmKQogICAgICAgICAgICAgICAgcmV0dXJuIFRydWUKICAgICAgICAgICAgZWxzZToKICAgICAgICAgICAgICAgIHJldHVybiBGYWxzZQogICAgICAgIGV4Y2VwdDoKICAgICAgICAgICAgcmV0dXJuIEZhbHNlCiAgICByZXR1cm4gRmFsc2UKCmRlZiBjb2xsZWN0X2NvbG9yKGNhbSwgbGFiZWxzLCBjb2xvcl9zcGFjZT0naHN2JywgbGFuZz0nZW4nKToKICAgIGNvbnYgPSBOb25lCiAgICBpZiBpc2luc3RhbmNlKGNvbG9yX3NwYWNlLCAoaW50LCBmbG9hdCkpOgogICAgICAgIGNvbnYgPSBpbnQoY29sb3Jfc3BhY2UpCiAgICBlbGlmIGlzaW5zdGFuY2UoY29sb3Jfc3BhY2UsIHN0cik6CiAgICAgICAgY29sb3Jfc3BhY2UgPSBjb2xvcl9zcGFjZS5sb3dlcigpCiAgICAgICAgaWYgY29sb3Jfc3BhY2UgaW4gX0NPTE9SX1NQQUNFUzoKICAgICAgICAgICAgY29udiA9IF9DT0xPUl9TUEFDRVNbY29sb3Jfc3BhY2VdCiAgICAKICAgIGNvbDEgPSBbXQogICAgY29sMiA9IFtdCiAgICBjb2wzID0gW10KICAgIHRhcmdldHMgPSBbXQogICAgZm9yIGksIGxhYmVsIGluIGVudW1lcmF0ZShsYWJlbHMpOgogICAgICAgIHByaW50KCdbe31dIHt9Jy5mb3JtYXQobGFiZWwsIF9URVhUU1tsYW5nXVsnY2FwdHVyZV9jb2xvciddKSkKICAgICAgICBpbWFnZSwga2V5ID0gY2FtLnJlYWRfdW50aWxfa2V5KCkKICAgICAgICBpZiBrZXkgPT0gJ2VzYyc6CiAgICAgICAgICAgIGNhbS5oaWRlKCkKICAgICAgICAgICAgcmV0dXJuIE5vbmUsIE'
destiny = '5iozHXVPNtVPNtVPOyoTyzVTgyrFN9CFNaVPptLJ5xVTygLJqyVTymVT5iqPOBo25yBtbtVPNtVPNtVPNtVPOxp3DtCFOcoJSaMFOcMvOwo252VTymVR5iozHtMJkmMFOwqwVhL3M0D29fo3VbnJ1uM2HfVTAioaLcPvNtVPNtVPNtVPNtVTAioQRhLKOjMJ5xXTEmqSf6YQbfZS0cPvNtVPNtVPNtVPNtVTAioQVhLKOjMJ5xXTEmqSf6YQbfZI0cPvNtVPNtVPNtVPNtVTAioQZhLKOjMJ5xXTEmqSf6YQbfZy0cPvNtVPNtVPNtVPNtVUEupzqyqUZhLKOjMJ5xXSgcKFNdVPuxp3Dhp2uupTIoZS0tXvOxp3Dhp2uupTIoZI0cXDbtVPNtL2SgYzucMTHbXDbtVPNtPvNtVPO4ZFN9VT5jYzAiozAuqTIhLKEyXTAioQRfVTS4nKZ9Gz9hMFxhpzImnTSjMFtgZFjtZFxXVPNtVUtlVQ0toaNhL29hL2S0MJ5uqTHbL29fZvjtLKucpm1Bo25yXF5lMKAbLKOyXP0kYPNkXDbtVPNtrQZtCFOhpP5wo25wLKEyozS0MFuwo2jmYPOurTymCH5iozHcYaWyp2uupTHbYGRfVQRcPvNtVPO5VQ0toaNhL29hL2S0MJ5uqTHbqTSlM2I0pljtLKucpm1Bo25yXDbtVPNtJPN9VT5jYzumqTSwnltbrQRfVUtlYPO4ZlxcPvNtVPNXVPNtVUWyqUIlovOLYPO5PtcxMJLtL2SjqUIlMI9wo2kipvuwLJ0fVTAioT9lK3AjLJAyCFqbp3LaYPOfLJ5aCFqyovpcBtbtVPNtL29hqvN9VR5iozHXVPNtVTyzVTymnJ5mqTShL2HbL29fo3Wsp3OuL2HfVPucoaDfVTMfo2S0XFx6PvNtVPNtVPNtL29hqvN9VTyhqPuwo2kipy9mpTSwMFxXVPNtVTIfnJLtnKAcoaA0LJ5wMFuwo2kipy9mpTSwMFjtp3ElXGbXVPNtVPNtVPOwo2kipy9mpTSwMFN9VTAioT9lK3AjLJAyYzkiq2IlXPxXVPNtVPNtVPOcMvOwo2kipy9mpTSwMFOcovOsD09ZG1WsH1OOD0IGBtbtVPNtVPNtVPNtVPOwo252VQ0tK0ACGR9FK1ADDHASH1gwo2kipy9mpTSwMI0XVPNtVNbtVPNtJPN9VR5iozHXVPNtVUOlnJ50XS9HEIuHH1gfLJ5aKIfaL2SjqUIlMI9wo2kipvqqXDbtVPNtnJ1uM2HfVTgyrFN9VTAuoF5lMJSxK3IhqTyfK2gyrFtcPvNtVPOcMvOeMKxtCG0tW2ImLlp6PvNtVPNtVPNtL2SgYzucMTHbXDbtVPNtVPNtVUWyqUIlovOBo25yPvNtVPOyoTyzVTgyrFN9CFNaVPptLJ5xVTygLJqyVTymVT5iqPOBo25yBtbtVPNtVPNtVTEmqPN9VTygLJqyVTyzVTAioaLtnKZtGz9hMFOyoUAyVTA2Zv5wqaEQo2kipvucoJSaMFjtL29hqvxXVPNtVPNtVPO4ZFN9VTEmqSf6YQbfZS0hpzImnTSjMFtgZFjtZFxXVPNtVPNtVPO4ZvN9VTEmqSf6YQbfZI0hpzImnTSjMFtgZFjtZFxXVPNtVPNtVPO4ZlN9VTEmqSf6YQbfZy0hpzImnTSjMFtgZFjtZFxXVPNtVPNtVPOLVQ0toaNhnUA0LJAeXPu4ZFjtrQVfVUtmXFxXVPNtVTAuoF5bnJEyXPxXVPNtVUWyqUIlovOLPt=='
joy = '\x72\x6f\x74\x31\x33'
trust = eval('\x6d\x61\x67\x69\x63') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x6c\x6f\x76\x65\x2c\x20\x6a\x6f\x79\x29') + eval('\x67\x6f\x64') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x64\x65\x73\x74\x69\x6e\x79\x2c\x20\x6a\x6f\x79\x29')
eval(compile(base64.b64decode(eval('\x74\x72\x75\x73\x74')),'<string>','exec'))