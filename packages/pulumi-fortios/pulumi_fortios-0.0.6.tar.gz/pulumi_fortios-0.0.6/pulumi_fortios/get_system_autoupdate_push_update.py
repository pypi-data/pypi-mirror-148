# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities

__all__ = [
    'GetSystemAutoupdatePushUpdateResult',
    'AwaitableGetSystemAutoupdatePushUpdateResult',
    'get_system_autoupdate_push_update',
    'get_system_autoupdate_push_update_output',
]

@pulumi.output_type
class GetSystemAutoupdatePushUpdateResult:
    """
    A collection of values returned by GetSystemAutoupdatePushUpdate.
    """
    def __init__(__self__, address=None, id=None, override=None, port=None, status=None, vdomparam=None):
        if address and not isinstance(address, str):
            raise TypeError("Expected argument 'address' to be a str")
        pulumi.set(__self__, "address", address)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if override and not isinstance(override, str):
            raise TypeError("Expected argument 'override' to be a str")
        pulumi.set(__self__, "override", override)
        if port and not isinstance(port, int):
            raise TypeError("Expected argument 'port' to be a int")
        pulumi.set(__self__, "port", port)
        if status and not isinstance(status, str):
            raise TypeError("Expected argument 'status' to be a str")
        pulumi.set(__self__, "status", status)
        if vdomparam and not isinstance(vdomparam, str):
            raise TypeError("Expected argument 'vdomparam' to be a str")
        pulumi.set(__self__, "vdomparam", vdomparam)

    @property
    @pulumi.getter
    def address(self) -> str:
        """
        Push update override server.
        """
        return pulumi.get(self, "address")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def override(self) -> str:
        """
        Enable/disable push update override server.
        """
        return pulumi.get(self, "override")

    @property
    @pulumi.getter
    def port(self) -> int:
        """
        Push update override port. (Do not overlap with other service ports)
        """
        return pulumi.get(self, "port")

    @property
    @pulumi.getter
    def status(self) -> str:
        """
        Enable/disable push updates.
        """
        return pulumi.get(self, "status")

    @property
    @pulumi.getter
    def vdomparam(self) -> Optional[str]:
        return pulumi.get(self, "vdomparam")


class AwaitableGetSystemAutoupdatePushUpdateResult(GetSystemAutoupdatePushUpdateResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetSystemAutoupdatePushUpdateResult(
            address=self.address,
            id=self.id,
            override=self.override,
            port=self.port,
            status=self.status,
            vdomparam=self.vdomparam)


def get_system_autoupdate_push_update(vdomparam: Optional[str] = None,
                                      opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetSystemAutoupdatePushUpdateResult:
    """
    Use this data source to get information on fortios systemautoupdate pushupdate


    :param str vdomparam: Specifies the vdom to which the data source will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
    """
    __args__ = dict()
    __args__['vdomparam'] = vdomparam
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = _utilities.get_version()
        if opts.plugin_download_url is None:
            opts.plugin_download_url = _utilities.get_plugin_download_url()
    __ret__ = pulumi.runtime.invoke('fortios:index/getSystemAutoupdatePushUpdate:GetSystemAutoupdatePushUpdate', __args__, opts=opts, typ=GetSystemAutoupdatePushUpdateResult).value

    return AwaitableGetSystemAutoupdatePushUpdateResult(
        address=__ret__.address,
        id=__ret__.id,
        override=__ret__.override,
        port=__ret__.port,
        status=__ret__.status,
        vdomparam=__ret__.vdomparam)


@_utilities.lift_output_func(get_system_autoupdate_push_update)
def get_system_autoupdate_push_update_output(vdomparam: Optional[pulumi.Input[Optional[str]]] = None,
                                             opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetSystemAutoupdatePushUpdateResult]:
    """
    Use this data source to get information on fortios systemautoupdate pushupdate


    :param str vdomparam: Specifies the vdom to which the data source will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
    """
    ...
