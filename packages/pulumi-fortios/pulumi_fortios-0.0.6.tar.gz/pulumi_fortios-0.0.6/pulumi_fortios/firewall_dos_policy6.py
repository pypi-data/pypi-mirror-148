# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities
from . import outputs
from ._inputs import *

__all__ = ['FirewallDosPolicy6Args', 'FirewallDosPolicy6']

@pulumi.input_type
class FirewallDosPolicy6Args:
    def __init__(__self__, *,
                 dstaddrs: pulumi.Input[Sequence[pulumi.Input['FirewallDosPolicy6DstaddrArgs']]],
                 interface: pulumi.Input[str],
                 srcaddrs: pulumi.Input[Sequence[pulumi.Input['FirewallDosPolicy6SrcaddrArgs']]],
                 anomalies: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallDosPolicy6AnomalyArgs']]]] = None,
                 comments: Optional[pulumi.Input[str]] = None,
                 dynamic_sort_subtable: Optional[pulumi.Input[str]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 policyid: Optional[pulumi.Input[int]] = None,
                 services: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallDosPolicy6ServiceArgs']]]] = None,
                 status: Optional[pulumi.Input[str]] = None,
                 vdomparam: Optional[pulumi.Input[str]] = None):
        """
        The set of arguments for constructing a FirewallDosPolicy6 resource.
        :param pulumi.Input[Sequence[pulumi.Input['FirewallDosPolicy6DstaddrArgs']]] dstaddrs: Destination address name from available addresses. The structure of `dstaddr` block is documented below.
        :param pulumi.Input[str] interface: Incoming interface name from available interfaces.
        :param pulumi.Input[Sequence[pulumi.Input['FirewallDosPolicy6SrcaddrArgs']]] srcaddrs: Source address name from available addresses. The structure of `srcaddr` block is documented below.
        :param pulumi.Input[Sequence[pulumi.Input['FirewallDosPolicy6AnomalyArgs']]] anomalies: Anomaly name. The structure of `anomaly` block is documented below.
        :param pulumi.Input[str] comments: Comment.
        :param pulumi.Input[str] dynamic_sort_subtable: true or false, set this parameter to true when using dynamic for_each + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
        :param pulumi.Input[str] name: Anomaly name.
        :param pulumi.Input[int] policyid: Policy ID.
        :param pulumi.Input[Sequence[pulumi.Input['FirewallDosPolicy6ServiceArgs']]] services: Service object from available options. The structure of `service` block is documented below.
        :param pulumi.Input[str] status: Enable/disable this anomaly. Valid values: `disable`, `enable`.
        :param pulumi.Input[str] vdomparam: Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        pulumi.set(__self__, "dstaddrs", dstaddrs)
        pulumi.set(__self__, "interface", interface)
        pulumi.set(__self__, "srcaddrs", srcaddrs)
        if anomalies is not None:
            pulumi.set(__self__, "anomalies", anomalies)
        if comments is not None:
            pulumi.set(__self__, "comments", comments)
        if dynamic_sort_subtable is not None:
            pulumi.set(__self__, "dynamic_sort_subtable", dynamic_sort_subtable)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if policyid is not None:
            pulumi.set(__self__, "policyid", policyid)
        if services is not None:
            pulumi.set(__self__, "services", services)
        if status is not None:
            pulumi.set(__self__, "status", status)
        if vdomparam is not None:
            pulumi.set(__self__, "vdomparam", vdomparam)

    @property
    @pulumi.getter
    def dstaddrs(self) -> pulumi.Input[Sequence[pulumi.Input['FirewallDosPolicy6DstaddrArgs']]]:
        """
        Destination address name from available addresses. The structure of `dstaddr` block is documented below.
        """
        return pulumi.get(self, "dstaddrs")

    @dstaddrs.setter
    def dstaddrs(self, value: pulumi.Input[Sequence[pulumi.Input['FirewallDosPolicy6DstaddrArgs']]]):
        pulumi.set(self, "dstaddrs", value)

    @property
    @pulumi.getter
    def interface(self) -> pulumi.Input[str]:
        """
        Incoming interface name from available interfaces.
        """
        return pulumi.get(self, "interface")

    @interface.setter
    def interface(self, value: pulumi.Input[str]):
        pulumi.set(self, "interface", value)

    @property
    @pulumi.getter
    def srcaddrs(self) -> pulumi.Input[Sequence[pulumi.Input['FirewallDosPolicy6SrcaddrArgs']]]:
        """
        Source address name from available addresses. The structure of `srcaddr` block is documented below.
        """
        return pulumi.get(self, "srcaddrs")

    @srcaddrs.setter
    def srcaddrs(self, value: pulumi.Input[Sequence[pulumi.Input['FirewallDosPolicy6SrcaddrArgs']]]):
        pulumi.set(self, "srcaddrs", value)

    @property
    @pulumi.getter
    def anomalies(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['FirewallDosPolicy6AnomalyArgs']]]]:
        """
        Anomaly name. The structure of `anomaly` block is documented below.
        """
        return pulumi.get(self, "anomalies")

    @anomalies.setter
    def anomalies(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallDosPolicy6AnomalyArgs']]]]):
        pulumi.set(self, "anomalies", value)

    @property
    @pulumi.getter
    def comments(self) -> Optional[pulumi.Input[str]]:
        """
        Comment.
        """
        return pulumi.get(self, "comments")

    @comments.setter
    def comments(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "comments", value)

    @property
    @pulumi.getter(name="dynamicSortSubtable")
    def dynamic_sort_subtable(self) -> Optional[pulumi.Input[str]]:
        """
        true or false, set this parameter to true when using dynamic for_each + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
        """
        return pulumi.get(self, "dynamic_sort_subtable")

    @dynamic_sort_subtable.setter
    def dynamic_sort_subtable(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "dynamic_sort_subtable", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        """
        Anomaly name.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter
    def policyid(self) -> Optional[pulumi.Input[int]]:
        """
        Policy ID.
        """
        return pulumi.get(self, "policyid")

    @policyid.setter
    def policyid(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "policyid", value)

    @property
    @pulumi.getter
    def services(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['FirewallDosPolicy6ServiceArgs']]]]:
        """
        Service object from available options. The structure of `service` block is documented below.
        """
        return pulumi.get(self, "services")

    @services.setter
    def services(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallDosPolicy6ServiceArgs']]]]):
        pulumi.set(self, "services", value)

    @property
    @pulumi.getter
    def status(self) -> Optional[pulumi.Input[str]]:
        """
        Enable/disable this anomaly. Valid values: `disable`, `enable`.
        """
        return pulumi.get(self, "status")

    @status.setter
    def status(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "status", value)

    @property
    @pulumi.getter
    def vdomparam(self) -> Optional[pulumi.Input[str]]:
        """
        Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        return pulumi.get(self, "vdomparam")

    @vdomparam.setter
    def vdomparam(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "vdomparam", value)


@pulumi.input_type
class _FirewallDosPolicy6State:
    def __init__(__self__, *,
                 anomalies: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallDosPolicy6AnomalyArgs']]]] = None,
                 comments: Optional[pulumi.Input[str]] = None,
                 dstaddrs: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallDosPolicy6DstaddrArgs']]]] = None,
                 dynamic_sort_subtable: Optional[pulumi.Input[str]] = None,
                 interface: Optional[pulumi.Input[str]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 policyid: Optional[pulumi.Input[int]] = None,
                 services: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallDosPolicy6ServiceArgs']]]] = None,
                 srcaddrs: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallDosPolicy6SrcaddrArgs']]]] = None,
                 status: Optional[pulumi.Input[str]] = None,
                 vdomparam: Optional[pulumi.Input[str]] = None):
        """
        Input properties used for looking up and filtering FirewallDosPolicy6 resources.
        :param pulumi.Input[Sequence[pulumi.Input['FirewallDosPolicy6AnomalyArgs']]] anomalies: Anomaly name. The structure of `anomaly` block is documented below.
        :param pulumi.Input[str] comments: Comment.
        :param pulumi.Input[Sequence[pulumi.Input['FirewallDosPolicy6DstaddrArgs']]] dstaddrs: Destination address name from available addresses. The structure of `dstaddr` block is documented below.
        :param pulumi.Input[str] dynamic_sort_subtable: true or false, set this parameter to true when using dynamic for_each + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
        :param pulumi.Input[str] interface: Incoming interface name from available interfaces.
        :param pulumi.Input[str] name: Anomaly name.
        :param pulumi.Input[int] policyid: Policy ID.
        :param pulumi.Input[Sequence[pulumi.Input['FirewallDosPolicy6ServiceArgs']]] services: Service object from available options. The structure of `service` block is documented below.
        :param pulumi.Input[Sequence[pulumi.Input['FirewallDosPolicy6SrcaddrArgs']]] srcaddrs: Source address name from available addresses. The structure of `srcaddr` block is documented below.
        :param pulumi.Input[str] status: Enable/disable this anomaly. Valid values: `disable`, `enable`.
        :param pulumi.Input[str] vdomparam: Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        if anomalies is not None:
            pulumi.set(__self__, "anomalies", anomalies)
        if comments is not None:
            pulumi.set(__self__, "comments", comments)
        if dstaddrs is not None:
            pulumi.set(__self__, "dstaddrs", dstaddrs)
        if dynamic_sort_subtable is not None:
            pulumi.set(__self__, "dynamic_sort_subtable", dynamic_sort_subtable)
        if interface is not None:
            pulumi.set(__self__, "interface", interface)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if policyid is not None:
            pulumi.set(__self__, "policyid", policyid)
        if services is not None:
            pulumi.set(__self__, "services", services)
        if srcaddrs is not None:
            pulumi.set(__self__, "srcaddrs", srcaddrs)
        if status is not None:
            pulumi.set(__self__, "status", status)
        if vdomparam is not None:
            pulumi.set(__self__, "vdomparam", vdomparam)

    @property
    @pulumi.getter
    def anomalies(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['FirewallDosPolicy6AnomalyArgs']]]]:
        """
        Anomaly name. The structure of `anomaly` block is documented below.
        """
        return pulumi.get(self, "anomalies")

    @anomalies.setter
    def anomalies(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallDosPolicy6AnomalyArgs']]]]):
        pulumi.set(self, "anomalies", value)

    @property
    @pulumi.getter
    def comments(self) -> Optional[pulumi.Input[str]]:
        """
        Comment.
        """
        return pulumi.get(self, "comments")

    @comments.setter
    def comments(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "comments", value)

    @property
    @pulumi.getter
    def dstaddrs(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['FirewallDosPolicy6DstaddrArgs']]]]:
        """
        Destination address name from available addresses. The structure of `dstaddr` block is documented below.
        """
        return pulumi.get(self, "dstaddrs")

    @dstaddrs.setter
    def dstaddrs(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallDosPolicy6DstaddrArgs']]]]):
        pulumi.set(self, "dstaddrs", value)

    @property
    @pulumi.getter(name="dynamicSortSubtable")
    def dynamic_sort_subtable(self) -> Optional[pulumi.Input[str]]:
        """
        true or false, set this parameter to true when using dynamic for_each + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
        """
        return pulumi.get(self, "dynamic_sort_subtable")

    @dynamic_sort_subtable.setter
    def dynamic_sort_subtable(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "dynamic_sort_subtable", value)

    @property
    @pulumi.getter
    def interface(self) -> Optional[pulumi.Input[str]]:
        """
        Incoming interface name from available interfaces.
        """
        return pulumi.get(self, "interface")

    @interface.setter
    def interface(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "interface", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        """
        Anomaly name.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter
    def policyid(self) -> Optional[pulumi.Input[int]]:
        """
        Policy ID.
        """
        return pulumi.get(self, "policyid")

    @policyid.setter
    def policyid(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "policyid", value)

    @property
    @pulumi.getter
    def services(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['FirewallDosPolicy6ServiceArgs']]]]:
        """
        Service object from available options. The structure of `service` block is documented below.
        """
        return pulumi.get(self, "services")

    @services.setter
    def services(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallDosPolicy6ServiceArgs']]]]):
        pulumi.set(self, "services", value)

    @property
    @pulumi.getter
    def srcaddrs(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['FirewallDosPolicy6SrcaddrArgs']]]]:
        """
        Source address name from available addresses. The structure of `srcaddr` block is documented below.
        """
        return pulumi.get(self, "srcaddrs")

    @srcaddrs.setter
    def srcaddrs(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallDosPolicy6SrcaddrArgs']]]]):
        pulumi.set(self, "srcaddrs", value)

    @property
    @pulumi.getter
    def status(self) -> Optional[pulumi.Input[str]]:
        """
        Enable/disable this anomaly. Valid values: `disable`, `enable`.
        """
        return pulumi.get(self, "status")

    @status.setter
    def status(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "status", value)

    @property
    @pulumi.getter
    def vdomparam(self) -> Optional[pulumi.Input[str]]:
        """
        Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        return pulumi.get(self, "vdomparam")

    @vdomparam.setter
    def vdomparam(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "vdomparam", value)


class FirewallDosPolicy6(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 anomalies: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['FirewallDosPolicy6AnomalyArgs']]]]] = None,
                 comments: Optional[pulumi.Input[str]] = None,
                 dstaddrs: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['FirewallDosPolicy6DstaddrArgs']]]]] = None,
                 dynamic_sort_subtable: Optional[pulumi.Input[str]] = None,
                 interface: Optional[pulumi.Input[str]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 policyid: Optional[pulumi.Input[int]] = None,
                 services: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['FirewallDosPolicy6ServiceArgs']]]]] = None,
                 srcaddrs: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['FirewallDosPolicy6SrcaddrArgs']]]]] = None,
                 status: Optional[pulumi.Input[str]] = None,
                 vdomparam: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        Configure IPv6 DoS policies.

        ## Import

        Firewall DosPolicy6 can be imported using any of these accepted formats

        ```sh
         $ pulumi import fortios:index/firewallDosPolicy6:FirewallDosPolicy6 labelname {{policyid}}
        ```

         If you do not want to import arguments of block$ export "FORTIOS_IMPORT_TABLE"="false"

        ```sh
         $ pulumi import fortios:index/firewallDosPolicy6:FirewallDosPolicy6 labelname {{policyid}}
        ```

         $ unset "FORTIOS_IMPORT_TABLE"

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['FirewallDosPolicy6AnomalyArgs']]]] anomalies: Anomaly name. The structure of `anomaly` block is documented below.
        :param pulumi.Input[str] comments: Comment.
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['FirewallDosPolicy6DstaddrArgs']]]] dstaddrs: Destination address name from available addresses. The structure of `dstaddr` block is documented below.
        :param pulumi.Input[str] dynamic_sort_subtable: true or false, set this parameter to true when using dynamic for_each + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
        :param pulumi.Input[str] interface: Incoming interface name from available interfaces.
        :param pulumi.Input[str] name: Anomaly name.
        :param pulumi.Input[int] policyid: Policy ID.
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['FirewallDosPolicy6ServiceArgs']]]] services: Service object from available options. The structure of `service` block is documented below.
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['FirewallDosPolicy6SrcaddrArgs']]]] srcaddrs: Source address name from available addresses. The structure of `srcaddr` block is documented below.
        :param pulumi.Input[str] status: Enable/disable this anomaly. Valid values: `disable`, `enable`.
        :param pulumi.Input[str] vdomparam: Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: FirewallDosPolicy6Args,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Configure IPv6 DoS policies.

        ## Import

        Firewall DosPolicy6 can be imported using any of these accepted formats

        ```sh
         $ pulumi import fortios:index/firewallDosPolicy6:FirewallDosPolicy6 labelname {{policyid}}
        ```

         If you do not want to import arguments of block$ export "FORTIOS_IMPORT_TABLE"="false"

        ```sh
         $ pulumi import fortios:index/firewallDosPolicy6:FirewallDosPolicy6 labelname {{policyid}}
        ```

         $ unset "FORTIOS_IMPORT_TABLE"

        :param str resource_name: The name of the resource.
        :param FirewallDosPolicy6Args args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(FirewallDosPolicy6Args, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 anomalies: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['FirewallDosPolicy6AnomalyArgs']]]]] = None,
                 comments: Optional[pulumi.Input[str]] = None,
                 dstaddrs: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['FirewallDosPolicy6DstaddrArgs']]]]] = None,
                 dynamic_sort_subtable: Optional[pulumi.Input[str]] = None,
                 interface: Optional[pulumi.Input[str]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 policyid: Optional[pulumi.Input[int]] = None,
                 services: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['FirewallDosPolicy6ServiceArgs']]]]] = None,
                 srcaddrs: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['FirewallDosPolicy6SrcaddrArgs']]]]] = None,
                 status: Optional[pulumi.Input[str]] = None,
                 vdomparam: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        if opts is None:
            opts = pulumi.ResourceOptions()
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.version is None:
            opts.version = _utilities.get_version()
        if opts.plugin_download_url is None:
            opts.plugin_download_url = _utilities.get_plugin_download_url()
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = FirewallDosPolicy6Args.__new__(FirewallDosPolicy6Args)

            __props__.__dict__["anomalies"] = anomalies
            __props__.__dict__["comments"] = comments
            if dstaddrs is None and not opts.urn:
                raise TypeError("Missing required property 'dstaddrs'")
            __props__.__dict__["dstaddrs"] = dstaddrs
            __props__.__dict__["dynamic_sort_subtable"] = dynamic_sort_subtable
            if interface is None and not opts.urn:
                raise TypeError("Missing required property 'interface'")
            __props__.__dict__["interface"] = interface
            __props__.__dict__["name"] = name
            __props__.__dict__["policyid"] = policyid
            __props__.__dict__["services"] = services
            if srcaddrs is None and not opts.urn:
                raise TypeError("Missing required property 'srcaddrs'")
            __props__.__dict__["srcaddrs"] = srcaddrs
            __props__.__dict__["status"] = status
            __props__.__dict__["vdomparam"] = vdomparam
        super(FirewallDosPolicy6, __self__).__init__(
            'fortios:index/firewallDosPolicy6:FirewallDosPolicy6',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            anomalies: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['FirewallDosPolicy6AnomalyArgs']]]]] = None,
            comments: Optional[pulumi.Input[str]] = None,
            dstaddrs: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['FirewallDosPolicy6DstaddrArgs']]]]] = None,
            dynamic_sort_subtable: Optional[pulumi.Input[str]] = None,
            interface: Optional[pulumi.Input[str]] = None,
            name: Optional[pulumi.Input[str]] = None,
            policyid: Optional[pulumi.Input[int]] = None,
            services: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['FirewallDosPolicy6ServiceArgs']]]]] = None,
            srcaddrs: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['FirewallDosPolicy6SrcaddrArgs']]]]] = None,
            status: Optional[pulumi.Input[str]] = None,
            vdomparam: Optional[pulumi.Input[str]] = None) -> 'FirewallDosPolicy6':
        """
        Get an existing FirewallDosPolicy6 resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['FirewallDosPolicy6AnomalyArgs']]]] anomalies: Anomaly name. The structure of `anomaly` block is documented below.
        :param pulumi.Input[str] comments: Comment.
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['FirewallDosPolicy6DstaddrArgs']]]] dstaddrs: Destination address name from available addresses. The structure of `dstaddr` block is documented below.
        :param pulumi.Input[str] dynamic_sort_subtable: true or false, set this parameter to true when using dynamic for_each + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
        :param pulumi.Input[str] interface: Incoming interface name from available interfaces.
        :param pulumi.Input[str] name: Anomaly name.
        :param pulumi.Input[int] policyid: Policy ID.
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['FirewallDosPolicy6ServiceArgs']]]] services: Service object from available options. The structure of `service` block is documented below.
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['FirewallDosPolicy6SrcaddrArgs']]]] srcaddrs: Source address name from available addresses. The structure of `srcaddr` block is documented below.
        :param pulumi.Input[str] status: Enable/disable this anomaly. Valid values: `disable`, `enable`.
        :param pulumi.Input[str] vdomparam: Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _FirewallDosPolicy6State.__new__(_FirewallDosPolicy6State)

        __props__.__dict__["anomalies"] = anomalies
        __props__.__dict__["comments"] = comments
        __props__.__dict__["dstaddrs"] = dstaddrs
        __props__.__dict__["dynamic_sort_subtable"] = dynamic_sort_subtable
        __props__.__dict__["interface"] = interface
        __props__.__dict__["name"] = name
        __props__.__dict__["policyid"] = policyid
        __props__.__dict__["services"] = services
        __props__.__dict__["srcaddrs"] = srcaddrs
        __props__.__dict__["status"] = status
        __props__.__dict__["vdomparam"] = vdomparam
        return FirewallDosPolicy6(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter
    def anomalies(self) -> pulumi.Output[Optional[Sequence['outputs.FirewallDosPolicy6Anomaly']]]:
        """
        Anomaly name. The structure of `anomaly` block is documented below.
        """
        return pulumi.get(self, "anomalies")

    @property
    @pulumi.getter
    def comments(self) -> pulumi.Output[Optional[str]]:
        """
        Comment.
        """
        return pulumi.get(self, "comments")

    @property
    @pulumi.getter
    def dstaddrs(self) -> pulumi.Output[Sequence['outputs.FirewallDosPolicy6Dstaddr']]:
        """
        Destination address name from available addresses. The structure of `dstaddr` block is documented below.
        """
        return pulumi.get(self, "dstaddrs")

    @property
    @pulumi.getter(name="dynamicSortSubtable")
    def dynamic_sort_subtable(self) -> pulumi.Output[Optional[str]]:
        """
        true or false, set this parameter to true when using dynamic for_each + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
        """
        return pulumi.get(self, "dynamic_sort_subtable")

    @property
    @pulumi.getter
    def interface(self) -> pulumi.Output[str]:
        """
        Incoming interface name from available interfaces.
        """
        return pulumi.get(self, "interface")

    @property
    @pulumi.getter
    def name(self) -> pulumi.Output[str]:
        """
        Anomaly name.
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter
    def policyid(self) -> pulumi.Output[int]:
        """
        Policy ID.
        """
        return pulumi.get(self, "policyid")

    @property
    @pulumi.getter
    def services(self) -> pulumi.Output[Optional[Sequence['outputs.FirewallDosPolicy6Service']]]:
        """
        Service object from available options. The structure of `service` block is documented below.
        """
        return pulumi.get(self, "services")

    @property
    @pulumi.getter
    def srcaddrs(self) -> pulumi.Output[Sequence['outputs.FirewallDosPolicy6Srcaddr']]:
        """
        Source address name from available addresses. The structure of `srcaddr` block is documented below.
        """
        return pulumi.get(self, "srcaddrs")

    @property
    @pulumi.getter
    def status(self) -> pulumi.Output[str]:
        """
        Enable/disable this anomaly. Valid values: `disable`, `enable`.
        """
        return pulumi.get(self, "status")

    @property
    @pulumi.getter
    def vdomparam(self) -> pulumi.Output[Optional[str]]:
        """
        Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        return pulumi.get(self, "vdomparam")

