# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities
from . import outputs
from ._inputs import *

__all__ = ['SystemGeoipOverrideArgs', 'SystemGeoipOverride']

@pulumi.input_type
class SystemGeoipOverrideArgs:
    def __init__(__self__, *,
                 country_id: Optional[pulumi.Input[str]] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 dynamic_sort_subtable: Optional[pulumi.Input[str]] = None,
                 ip6_ranges: Optional[pulumi.Input[Sequence[pulumi.Input['SystemGeoipOverrideIp6RangeArgs']]]] = None,
                 ip_ranges: Optional[pulumi.Input[Sequence[pulumi.Input['SystemGeoipOverrideIpRangeArgs']]]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 vdomparam: Optional[pulumi.Input[str]] = None):
        """
        The set of arguments for constructing a SystemGeoipOverride resource.
        :param pulumi.Input[str] country_id: Two character Country ID code.
        :param pulumi.Input[str] description: Description.
        :param pulumi.Input[str] dynamic_sort_subtable: true or false, set this parameter to true when using dynamic for_each + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
        :param pulumi.Input[Sequence[pulumi.Input['SystemGeoipOverrideIp6RangeArgs']]] ip6_ranges: Table of IPv6 ranges assigned to country. The structure of `ip6_range` block is documented below.
        :param pulumi.Input[Sequence[pulumi.Input['SystemGeoipOverrideIpRangeArgs']]] ip_ranges: Table of IP ranges assigned to country. The structure of `ip_range` block is documented below.
        :param pulumi.Input[str] name: Location name.
        :param pulumi.Input[str] vdomparam: Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        if country_id is not None:
            pulumi.set(__self__, "country_id", country_id)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if dynamic_sort_subtable is not None:
            pulumi.set(__self__, "dynamic_sort_subtable", dynamic_sort_subtable)
        if ip6_ranges is not None:
            pulumi.set(__self__, "ip6_ranges", ip6_ranges)
        if ip_ranges is not None:
            pulumi.set(__self__, "ip_ranges", ip_ranges)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if vdomparam is not None:
            pulumi.set(__self__, "vdomparam", vdomparam)

    @property
    @pulumi.getter(name="countryId")
    def country_id(self) -> Optional[pulumi.Input[str]]:
        """
        Two character Country ID code.
        """
        return pulumi.get(self, "country_id")

    @country_id.setter
    def country_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "country_id", value)

    @property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[str]]:
        """
        Description.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "description", value)

    @property
    @pulumi.getter(name="dynamicSortSubtable")
    def dynamic_sort_subtable(self) -> Optional[pulumi.Input[str]]:
        """
        true or false, set this parameter to true when using dynamic for_each + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
        """
        return pulumi.get(self, "dynamic_sort_subtable")

    @dynamic_sort_subtable.setter
    def dynamic_sort_subtable(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "dynamic_sort_subtable", value)

    @property
    @pulumi.getter(name="ip6Ranges")
    def ip6_ranges(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['SystemGeoipOverrideIp6RangeArgs']]]]:
        """
        Table of IPv6 ranges assigned to country. The structure of `ip6_range` block is documented below.
        """
        return pulumi.get(self, "ip6_ranges")

    @ip6_ranges.setter
    def ip6_ranges(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['SystemGeoipOverrideIp6RangeArgs']]]]):
        pulumi.set(self, "ip6_ranges", value)

    @property
    @pulumi.getter(name="ipRanges")
    def ip_ranges(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['SystemGeoipOverrideIpRangeArgs']]]]:
        """
        Table of IP ranges assigned to country. The structure of `ip_range` block is documented below.
        """
        return pulumi.get(self, "ip_ranges")

    @ip_ranges.setter
    def ip_ranges(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['SystemGeoipOverrideIpRangeArgs']]]]):
        pulumi.set(self, "ip_ranges", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        """
        Location name.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter
    def vdomparam(self) -> Optional[pulumi.Input[str]]:
        """
        Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        return pulumi.get(self, "vdomparam")

    @vdomparam.setter
    def vdomparam(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "vdomparam", value)


@pulumi.input_type
class _SystemGeoipOverrideState:
    def __init__(__self__, *,
                 country_id: Optional[pulumi.Input[str]] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 dynamic_sort_subtable: Optional[pulumi.Input[str]] = None,
                 ip6_ranges: Optional[pulumi.Input[Sequence[pulumi.Input['SystemGeoipOverrideIp6RangeArgs']]]] = None,
                 ip_ranges: Optional[pulumi.Input[Sequence[pulumi.Input['SystemGeoipOverrideIpRangeArgs']]]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 vdomparam: Optional[pulumi.Input[str]] = None):
        """
        Input properties used for looking up and filtering SystemGeoipOverride resources.
        :param pulumi.Input[str] country_id: Two character Country ID code.
        :param pulumi.Input[str] description: Description.
        :param pulumi.Input[str] dynamic_sort_subtable: true or false, set this parameter to true when using dynamic for_each + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
        :param pulumi.Input[Sequence[pulumi.Input['SystemGeoipOverrideIp6RangeArgs']]] ip6_ranges: Table of IPv6 ranges assigned to country. The structure of `ip6_range` block is documented below.
        :param pulumi.Input[Sequence[pulumi.Input['SystemGeoipOverrideIpRangeArgs']]] ip_ranges: Table of IP ranges assigned to country. The structure of `ip_range` block is documented below.
        :param pulumi.Input[str] name: Location name.
        :param pulumi.Input[str] vdomparam: Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        if country_id is not None:
            pulumi.set(__self__, "country_id", country_id)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if dynamic_sort_subtable is not None:
            pulumi.set(__self__, "dynamic_sort_subtable", dynamic_sort_subtable)
        if ip6_ranges is not None:
            pulumi.set(__self__, "ip6_ranges", ip6_ranges)
        if ip_ranges is not None:
            pulumi.set(__self__, "ip_ranges", ip_ranges)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if vdomparam is not None:
            pulumi.set(__self__, "vdomparam", vdomparam)

    @property
    @pulumi.getter(name="countryId")
    def country_id(self) -> Optional[pulumi.Input[str]]:
        """
        Two character Country ID code.
        """
        return pulumi.get(self, "country_id")

    @country_id.setter
    def country_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "country_id", value)

    @property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[str]]:
        """
        Description.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "description", value)

    @property
    @pulumi.getter(name="dynamicSortSubtable")
    def dynamic_sort_subtable(self) -> Optional[pulumi.Input[str]]:
        """
        true or false, set this parameter to true when using dynamic for_each + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
        """
        return pulumi.get(self, "dynamic_sort_subtable")

    @dynamic_sort_subtable.setter
    def dynamic_sort_subtable(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "dynamic_sort_subtable", value)

    @property
    @pulumi.getter(name="ip6Ranges")
    def ip6_ranges(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['SystemGeoipOverrideIp6RangeArgs']]]]:
        """
        Table of IPv6 ranges assigned to country. The structure of `ip6_range` block is documented below.
        """
        return pulumi.get(self, "ip6_ranges")

    @ip6_ranges.setter
    def ip6_ranges(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['SystemGeoipOverrideIp6RangeArgs']]]]):
        pulumi.set(self, "ip6_ranges", value)

    @property
    @pulumi.getter(name="ipRanges")
    def ip_ranges(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['SystemGeoipOverrideIpRangeArgs']]]]:
        """
        Table of IP ranges assigned to country. The structure of `ip_range` block is documented below.
        """
        return pulumi.get(self, "ip_ranges")

    @ip_ranges.setter
    def ip_ranges(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['SystemGeoipOverrideIpRangeArgs']]]]):
        pulumi.set(self, "ip_ranges", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        """
        Location name.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter
    def vdomparam(self) -> Optional[pulumi.Input[str]]:
        """
        Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        return pulumi.get(self, "vdomparam")

    @vdomparam.setter
    def vdomparam(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "vdomparam", value)


class SystemGeoipOverride(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 country_id: Optional[pulumi.Input[str]] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 dynamic_sort_subtable: Optional[pulumi.Input[str]] = None,
                 ip6_ranges: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['SystemGeoipOverrideIp6RangeArgs']]]]] = None,
                 ip_ranges: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['SystemGeoipOverrideIpRangeArgs']]]]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 vdomparam: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        Configure geographical location mapping for IP address(es) to override mappings from FortiGuard.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_fortios as fortios

        trname = fortios.SystemGeoipOverride("trname", description="TEST for country")
        ```

        ## Import

        System GeoipOverride can be imported using any of these accepted formats

        ```sh
         $ pulumi import fortios:index/systemGeoipOverride:SystemGeoipOverride labelname {{name}}
        ```

         If you do not want to import arguments of block$ export "FORTIOS_IMPORT_TABLE"="false"

        ```sh
         $ pulumi import fortios:index/systemGeoipOverride:SystemGeoipOverride labelname {{name}}
        ```

         $ unset "FORTIOS_IMPORT_TABLE"

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] country_id: Two character Country ID code.
        :param pulumi.Input[str] description: Description.
        :param pulumi.Input[str] dynamic_sort_subtable: true or false, set this parameter to true when using dynamic for_each + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['SystemGeoipOverrideIp6RangeArgs']]]] ip6_ranges: Table of IPv6 ranges assigned to country. The structure of `ip6_range` block is documented below.
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['SystemGeoipOverrideIpRangeArgs']]]] ip_ranges: Table of IP ranges assigned to country. The structure of `ip_range` block is documented below.
        :param pulumi.Input[str] name: Location name.
        :param pulumi.Input[str] vdomparam: Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: Optional[SystemGeoipOverrideArgs] = None,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Configure geographical location mapping for IP address(es) to override mappings from FortiGuard.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_fortios as fortios

        trname = fortios.SystemGeoipOverride("trname", description="TEST for country")
        ```

        ## Import

        System GeoipOverride can be imported using any of these accepted formats

        ```sh
         $ pulumi import fortios:index/systemGeoipOverride:SystemGeoipOverride labelname {{name}}
        ```

         If you do not want to import arguments of block$ export "FORTIOS_IMPORT_TABLE"="false"

        ```sh
         $ pulumi import fortios:index/systemGeoipOverride:SystemGeoipOverride labelname {{name}}
        ```

         $ unset "FORTIOS_IMPORT_TABLE"

        :param str resource_name: The name of the resource.
        :param SystemGeoipOverrideArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(SystemGeoipOverrideArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 country_id: Optional[pulumi.Input[str]] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 dynamic_sort_subtable: Optional[pulumi.Input[str]] = None,
                 ip6_ranges: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['SystemGeoipOverrideIp6RangeArgs']]]]] = None,
                 ip_ranges: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['SystemGeoipOverrideIpRangeArgs']]]]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 vdomparam: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        if opts is None:
            opts = pulumi.ResourceOptions()
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.version is None:
            opts.version = _utilities.get_version()
        if opts.plugin_download_url is None:
            opts.plugin_download_url = _utilities.get_plugin_download_url()
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = SystemGeoipOverrideArgs.__new__(SystemGeoipOverrideArgs)

            __props__.__dict__["country_id"] = country_id
            __props__.__dict__["description"] = description
            __props__.__dict__["dynamic_sort_subtable"] = dynamic_sort_subtable
            __props__.__dict__["ip6_ranges"] = ip6_ranges
            __props__.__dict__["ip_ranges"] = ip_ranges
            __props__.__dict__["name"] = name
            __props__.__dict__["vdomparam"] = vdomparam
        super(SystemGeoipOverride, __self__).__init__(
            'fortios:index/systemGeoipOverride:SystemGeoipOverride',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            country_id: Optional[pulumi.Input[str]] = None,
            description: Optional[pulumi.Input[str]] = None,
            dynamic_sort_subtable: Optional[pulumi.Input[str]] = None,
            ip6_ranges: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['SystemGeoipOverrideIp6RangeArgs']]]]] = None,
            ip_ranges: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['SystemGeoipOverrideIpRangeArgs']]]]] = None,
            name: Optional[pulumi.Input[str]] = None,
            vdomparam: Optional[pulumi.Input[str]] = None) -> 'SystemGeoipOverride':
        """
        Get an existing SystemGeoipOverride resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] country_id: Two character Country ID code.
        :param pulumi.Input[str] description: Description.
        :param pulumi.Input[str] dynamic_sort_subtable: true or false, set this parameter to true when using dynamic for_each + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['SystemGeoipOverrideIp6RangeArgs']]]] ip6_ranges: Table of IPv6 ranges assigned to country. The structure of `ip6_range` block is documented below.
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['SystemGeoipOverrideIpRangeArgs']]]] ip_ranges: Table of IP ranges assigned to country. The structure of `ip_range` block is documented below.
        :param pulumi.Input[str] name: Location name.
        :param pulumi.Input[str] vdomparam: Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _SystemGeoipOverrideState.__new__(_SystemGeoipOverrideState)

        __props__.__dict__["country_id"] = country_id
        __props__.__dict__["description"] = description
        __props__.__dict__["dynamic_sort_subtable"] = dynamic_sort_subtable
        __props__.__dict__["ip6_ranges"] = ip6_ranges
        __props__.__dict__["ip_ranges"] = ip_ranges
        __props__.__dict__["name"] = name
        __props__.__dict__["vdomparam"] = vdomparam
        return SystemGeoipOverride(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="countryId")
    def country_id(self) -> pulumi.Output[str]:
        """
        Two character Country ID code.
        """
        return pulumi.get(self, "country_id")

    @property
    @pulumi.getter
    def description(self) -> pulumi.Output[str]:
        """
        Description.
        """
        return pulumi.get(self, "description")

    @property
    @pulumi.getter(name="dynamicSortSubtable")
    def dynamic_sort_subtable(self) -> pulumi.Output[Optional[str]]:
        """
        true or false, set this parameter to true when using dynamic for_each + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
        """
        return pulumi.get(self, "dynamic_sort_subtable")

    @property
    @pulumi.getter(name="ip6Ranges")
    def ip6_ranges(self) -> pulumi.Output[Optional[Sequence['outputs.SystemGeoipOverrideIp6Range']]]:
        """
        Table of IPv6 ranges assigned to country. The structure of `ip6_range` block is documented below.
        """
        return pulumi.get(self, "ip6_ranges")

    @property
    @pulumi.getter(name="ipRanges")
    def ip_ranges(self) -> pulumi.Output[Optional[Sequence['outputs.SystemGeoipOverrideIpRange']]]:
        """
        Table of IP ranges assigned to country. The structure of `ip_range` block is documented below.
        """
        return pulumi.get(self, "ip_ranges")

    @property
    @pulumi.getter
    def name(self) -> pulumi.Output[str]:
        """
        Location name.
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter
    def vdomparam(self) -> pulumi.Output[Optional[str]]:
        """
        Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        return pulumi.get(self, "vdomparam")

