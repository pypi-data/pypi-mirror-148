# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities

__all__ = ['RouterPolicy6Args', 'RouterPolicy6']

@pulumi.input_type
class RouterPolicy6Args:
    def __init__(__self__, *,
                 input_device: pulumi.Input[str],
                 comments: Optional[pulumi.Input[str]] = None,
                 dst: Optional[pulumi.Input[str]] = None,
                 end_port: Optional[pulumi.Input[int]] = None,
                 gateway: Optional[pulumi.Input[str]] = None,
                 output_device: Optional[pulumi.Input[str]] = None,
                 protocol: Optional[pulumi.Input[int]] = None,
                 seq_num: Optional[pulumi.Input[int]] = None,
                 src: Optional[pulumi.Input[str]] = None,
                 start_port: Optional[pulumi.Input[int]] = None,
                 status: Optional[pulumi.Input[str]] = None,
                 tos: Optional[pulumi.Input[str]] = None,
                 tos_mask: Optional[pulumi.Input[str]] = None,
                 vdomparam: Optional[pulumi.Input[str]] = None):
        """
        The set of arguments for constructing a RouterPolicy6 resource.
        :param pulumi.Input[str] input_device: Incoming interface name. Configuration examples: for FortiOS Version <= "6.2.4": `input_device  = "port2"`, for FortiOS Version >= "6.2.4": `input_device  = "\"fortilink\" \"port1\""`.
        :param pulumi.Input[str] comments: Optional comments.
        :param pulumi.Input[str] dst: Destination IPv6 prefix.
        :param pulumi.Input[int] end_port: End destination port number (1 - 65535).
        :param pulumi.Input[str] gateway: IPv6 address of the gateway.
        :param pulumi.Input[str] output_device: Outgoing interface name.
        :param pulumi.Input[int] protocol: Protocol number (0 - 255).
        :param pulumi.Input[int] seq_num: Sequence number.
        :param pulumi.Input[str] src: Source IPv6 prefix.
        :param pulumi.Input[int] start_port: Start destination port number (1 - 65535).
        :param pulumi.Input[str] status: Enable/disable this policy route. Valid values: `enable`, `disable`.
        :param pulumi.Input[str] tos: Type of service bit pattern.
        :param pulumi.Input[str] tos_mask: Type of service evaluated bits.
        :param pulumi.Input[str] vdomparam: Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        pulumi.set(__self__, "input_device", input_device)
        if comments is not None:
            pulumi.set(__self__, "comments", comments)
        if dst is not None:
            pulumi.set(__self__, "dst", dst)
        if end_port is not None:
            pulumi.set(__self__, "end_port", end_port)
        if gateway is not None:
            pulumi.set(__self__, "gateway", gateway)
        if output_device is not None:
            pulumi.set(__self__, "output_device", output_device)
        if protocol is not None:
            pulumi.set(__self__, "protocol", protocol)
        if seq_num is not None:
            pulumi.set(__self__, "seq_num", seq_num)
        if src is not None:
            pulumi.set(__self__, "src", src)
        if start_port is not None:
            pulumi.set(__self__, "start_port", start_port)
        if status is not None:
            pulumi.set(__self__, "status", status)
        if tos is not None:
            pulumi.set(__self__, "tos", tos)
        if tos_mask is not None:
            pulumi.set(__self__, "tos_mask", tos_mask)
        if vdomparam is not None:
            pulumi.set(__self__, "vdomparam", vdomparam)

    @property
    @pulumi.getter(name="inputDevice")
    def input_device(self) -> pulumi.Input[str]:
        """
        Incoming interface name. Configuration examples: for FortiOS Version <= "6.2.4": `input_device  = "port2"`, for FortiOS Version >= "6.2.4": `input_device  = "\"fortilink\" \"port1\""`.
        """
        return pulumi.get(self, "input_device")

    @input_device.setter
    def input_device(self, value: pulumi.Input[str]):
        pulumi.set(self, "input_device", value)

    @property
    @pulumi.getter
    def comments(self) -> Optional[pulumi.Input[str]]:
        """
        Optional comments.
        """
        return pulumi.get(self, "comments")

    @comments.setter
    def comments(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "comments", value)

    @property
    @pulumi.getter
    def dst(self) -> Optional[pulumi.Input[str]]:
        """
        Destination IPv6 prefix.
        """
        return pulumi.get(self, "dst")

    @dst.setter
    def dst(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "dst", value)

    @property
    @pulumi.getter(name="endPort")
    def end_port(self) -> Optional[pulumi.Input[int]]:
        """
        End destination port number (1 - 65535).
        """
        return pulumi.get(self, "end_port")

    @end_port.setter
    def end_port(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "end_port", value)

    @property
    @pulumi.getter
    def gateway(self) -> Optional[pulumi.Input[str]]:
        """
        IPv6 address of the gateway.
        """
        return pulumi.get(self, "gateway")

    @gateway.setter
    def gateway(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "gateway", value)

    @property
    @pulumi.getter(name="outputDevice")
    def output_device(self) -> Optional[pulumi.Input[str]]:
        """
        Outgoing interface name.
        """
        return pulumi.get(self, "output_device")

    @output_device.setter
    def output_device(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "output_device", value)

    @property
    @pulumi.getter
    def protocol(self) -> Optional[pulumi.Input[int]]:
        """
        Protocol number (0 - 255).
        """
        return pulumi.get(self, "protocol")

    @protocol.setter
    def protocol(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "protocol", value)

    @property
    @pulumi.getter(name="seqNum")
    def seq_num(self) -> Optional[pulumi.Input[int]]:
        """
        Sequence number.
        """
        return pulumi.get(self, "seq_num")

    @seq_num.setter
    def seq_num(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "seq_num", value)

    @property
    @pulumi.getter
    def src(self) -> Optional[pulumi.Input[str]]:
        """
        Source IPv6 prefix.
        """
        return pulumi.get(self, "src")

    @src.setter
    def src(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "src", value)

    @property
    @pulumi.getter(name="startPort")
    def start_port(self) -> Optional[pulumi.Input[int]]:
        """
        Start destination port number (1 - 65535).
        """
        return pulumi.get(self, "start_port")

    @start_port.setter
    def start_port(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "start_port", value)

    @property
    @pulumi.getter
    def status(self) -> Optional[pulumi.Input[str]]:
        """
        Enable/disable this policy route. Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "status")

    @status.setter
    def status(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "status", value)

    @property
    @pulumi.getter
    def tos(self) -> Optional[pulumi.Input[str]]:
        """
        Type of service bit pattern.
        """
        return pulumi.get(self, "tos")

    @tos.setter
    def tos(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "tos", value)

    @property
    @pulumi.getter(name="tosMask")
    def tos_mask(self) -> Optional[pulumi.Input[str]]:
        """
        Type of service evaluated bits.
        """
        return pulumi.get(self, "tos_mask")

    @tos_mask.setter
    def tos_mask(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "tos_mask", value)

    @property
    @pulumi.getter
    def vdomparam(self) -> Optional[pulumi.Input[str]]:
        """
        Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        return pulumi.get(self, "vdomparam")

    @vdomparam.setter
    def vdomparam(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "vdomparam", value)


@pulumi.input_type
class _RouterPolicy6State:
    def __init__(__self__, *,
                 comments: Optional[pulumi.Input[str]] = None,
                 dst: Optional[pulumi.Input[str]] = None,
                 end_port: Optional[pulumi.Input[int]] = None,
                 gateway: Optional[pulumi.Input[str]] = None,
                 input_device: Optional[pulumi.Input[str]] = None,
                 output_device: Optional[pulumi.Input[str]] = None,
                 protocol: Optional[pulumi.Input[int]] = None,
                 seq_num: Optional[pulumi.Input[int]] = None,
                 src: Optional[pulumi.Input[str]] = None,
                 start_port: Optional[pulumi.Input[int]] = None,
                 status: Optional[pulumi.Input[str]] = None,
                 tos: Optional[pulumi.Input[str]] = None,
                 tos_mask: Optional[pulumi.Input[str]] = None,
                 vdomparam: Optional[pulumi.Input[str]] = None):
        """
        Input properties used for looking up and filtering RouterPolicy6 resources.
        :param pulumi.Input[str] comments: Optional comments.
        :param pulumi.Input[str] dst: Destination IPv6 prefix.
        :param pulumi.Input[int] end_port: End destination port number (1 - 65535).
        :param pulumi.Input[str] gateway: IPv6 address of the gateway.
        :param pulumi.Input[str] input_device: Incoming interface name. Configuration examples: for FortiOS Version <= "6.2.4": `input_device  = "port2"`, for FortiOS Version >= "6.2.4": `input_device  = "\"fortilink\" \"port1\""`.
        :param pulumi.Input[str] output_device: Outgoing interface name.
        :param pulumi.Input[int] protocol: Protocol number (0 - 255).
        :param pulumi.Input[int] seq_num: Sequence number.
        :param pulumi.Input[str] src: Source IPv6 prefix.
        :param pulumi.Input[int] start_port: Start destination port number (1 - 65535).
        :param pulumi.Input[str] status: Enable/disable this policy route. Valid values: `enable`, `disable`.
        :param pulumi.Input[str] tos: Type of service bit pattern.
        :param pulumi.Input[str] tos_mask: Type of service evaluated bits.
        :param pulumi.Input[str] vdomparam: Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        if comments is not None:
            pulumi.set(__self__, "comments", comments)
        if dst is not None:
            pulumi.set(__self__, "dst", dst)
        if end_port is not None:
            pulumi.set(__self__, "end_port", end_port)
        if gateway is not None:
            pulumi.set(__self__, "gateway", gateway)
        if input_device is not None:
            pulumi.set(__self__, "input_device", input_device)
        if output_device is not None:
            pulumi.set(__self__, "output_device", output_device)
        if protocol is not None:
            pulumi.set(__self__, "protocol", protocol)
        if seq_num is not None:
            pulumi.set(__self__, "seq_num", seq_num)
        if src is not None:
            pulumi.set(__self__, "src", src)
        if start_port is not None:
            pulumi.set(__self__, "start_port", start_port)
        if status is not None:
            pulumi.set(__self__, "status", status)
        if tos is not None:
            pulumi.set(__self__, "tos", tos)
        if tos_mask is not None:
            pulumi.set(__self__, "tos_mask", tos_mask)
        if vdomparam is not None:
            pulumi.set(__self__, "vdomparam", vdomparam)

    @property
    @pulumi.getter
    def comments(self) -> Optional[pulumi.Input[str]]:
        """
        Optional comments.
        """
        return pulumi.get(self, "comments")

    @comments.setter
    def comments(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "comments", value)

    @property
    @pulumi.getter
    def dst(self) -> Optional[pulumi.Input[str]]:
        """
        Destination IPv6 prefix.
        """
        return pulumi.get(self, "dst")

    @dst.setter
    def dst(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "dst", value)

    @property
    @pulumi.getter(name="endPort")
    def end_port(self) -> Optional[pulumi.Input[int]]:
        """
        End destination port number (1 - 65535).
        """
        return pulumi.get(self, "end_port")

    @end_port.setter
    def end_port(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "end_port", value)

    @property
    @pulumi.getter
    def gateway(self) -> Optional[pulumi.Input[str]]:
        """
        IPv6 address of the gateway.
        """
        return pulumi.get(self, "gateway")

    @gateway.setter
    def gateway(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "gateway", value)

    @property
    @pulumi.getter(name="inputDevice")
    def input_device(self) -> Optional[pulumi.Input[str]]:
        """
        Incoming interface name. Configuration examples: for FortiOS Version <= "6.2.4": `input_device  = "port2"`, for FortiOS Version >= "6.2.4": `input_device  = "\"fortilink\" \"port1\""`.
        """
        return pulumi.get(self, "input_device")

    @input_device.setter
    def input_device(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "input_device", value)

    @property
    @pulumi.getter(name="outputDevice")
    def output_device(self) -> Optional[pulumi.Input[str]]:
        """
        Outgoing interface name.
        """
        return pulumi.get(self, "output_device")

    @output_device.setter
    def output_device(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "output_device", value)

    @property
    @pulumi.getter
    def protocol(self) -> Optional[pulumi.Input[int]]:
        """
        Protocol number (0 - 255).
        """
        return pulumi.get(self, "protocol")

    @protocol.setter
    def protocol(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "protocol", value)

    @property
    @pulumi.getter(name="seqNum")
    def seq_num(self) -> Optional[pulumi.Input[int]]:
        """
        Sequence number.
        """
        return pulumi.get(self, "seq_num")

    @seq_num.setter
    def seq_num(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "seq_num", value)

    @property
    @pulumi.getter
    def src(self) -> Optional[pulumi.Input[str]]:
        """
        Source IPv6 prefix.
        """
        return pulumi.get(self, "src")

    @src.setter
    def src(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "src", value)

    @property
    @pulumi.getter(name="startPort")
    def start_port(self) -> Optional[pulumi.Input[int]]:
        """
        Start destination port number (1 - 65535).
        """
        return pulumi.get(self, "start_port")

    @start_port.setter
    def start_port(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "start_port", value)

    @property
    @pulumi.getter
    def status(self) -> Optional[pulumi.Input[str]]:
        """
        Enable/disable this policy route. Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "status")

    @status.setter
    def status(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "status", value)

    @property
    @pulumi.getter
    def tos(self) -> Optional[pulumi.Input[str]]:
        """
        Type of service bit pattern.
        """
        return pulumi.get(self, "tos")

    @tos.setter
    def tos(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "tos", value)

    @property
    @pulumi.getter(name="tosMask")
    def tos_mask(self) -> Optional[pulumi.Input[str]]:
        """
        Type of service evaluated bits.
        """
        return pulumi.get(self, "tos_mask")

    @tos_mask.setter
    def tos_mask(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "tos_mask", value)

    @property
    @pulumi.getter
    def vdomparam(self) -> Optional[pulumi.Input[str]]:
        """
        Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        return pulumi.get(self, "vdomparam")

    @vdomparam.setter
    def vdomparam(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "vdomparam", value)


class RouterPolicy6(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 comments: Optional[pulumi.Input[str]] = None,
                 dst: Optional[pulumi.Input[str]] = None,
                 end_port: Optional[pulumi.Input[int]] = None,
                 gateway: Optional[pulumi.Input[str]] = None,
                 input_device: Optional[pulumi.Input[str]] = None,
                 output_device: Optional[pulumi.Input[str]] = None,
                 protocol: Optional[pulumi.Input[int]] = None,
                 seq_num: Optional[pulumi.Input[int]] = None,
                 src: Optional[pulumi.Input[str]] = None,
                 start_port: Optional[pulumi.Input[int]] = None,
                 status: Optional[pulumi.Input[str]] = None,
                 tos: Optional[pulumi.Input[str]] = None,
                 tos_mask: Optional[pulumi.Input[str]] = None,
                 vdomparam: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        Configure IPv6 routing policies.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_fortios as fortios

        trname = fortios.RouterPolicy6("trname",
            dst="::/0",
            end_port=65535,
            gateway="::",
            input_device="port1",
            output_device="port3",
            protocol=33,
            seq_num=1,
            src="2001:db8:85a3::8a2e:370:7334/128",
            start_port=1,
            status="enable",
            tos="0x00",
            tos_mask="0x00")
        ```

        ## Import

        Router Policy6 can be imported using any of these accepted formats

        ```sh
         $ pulumi import fortios:index/routerPolicy6:RouterPolicy6 labelname {{seq_num}}
        ```

         If you do not want to import arguments of block$ export "FORTIOS_IMPORT_TABLE"="false"

        ```sh
         $ pulumi import fortios:index/routerPolicy6:RouterPolicy6 labelname {{seq_num}}
        ```

         $ unset "FORTIOS_IMPORT_TABLE"

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] comments: Optional comments.
        :param pulumi.Input[str] dst: Destination IPv6 prefix.
        :param pulumi.Input[int] end_port: End destination port number (1 - 65535).
        :param pulumi.Input[str] gateway: IPv6 address of the gateway.
        :param pulumi.Input[str] input_device: Incoming interface name. Configuration examples: for FortiOS Version <= "6.2.4": `input_device  = "port2"`, for FortiOS Version >= "6.2.4": `input_device  = "\"fortilink\" \"port1\""`.
        :param pulumi.Input[str] output_device: Outgoing interface name.
        :param pulumi.Input[int] protocol: Protocol number (0 - 255).
        :param pulumi.Input[int] seq_num: Sequence number.
        :param pulumi.Input[str] src: Source IPv6 prefix.
        :param pulumi.Input[int] start_port: Start destination port number (1 - 65535).
        :param pulumi.Input[str] status: Enable/disable this policy route. Valid values: `enable`, `disable`.
        :param pulumi.Input[str] tos: Type of service bit pattern.
        :param pulumi.Input[str] tos_mask: Type of service evaluated bits.
        :param pulumi.Input[str] vdomparam: Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: RouterPolicy6Args,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Configure IPv6 routing policies.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_fortios as fortios

        trname = fortios.RouterPolicy6("trname",
            dst="::/0",
            end_port=65535,
            gateway="::",
            input_device="port1",
            output_device="port3",
            protocol=33,
            seq_num=1,
            src="2001:db8:85a3::8a2e:370:7334/128",
            start_port=1,
            status="enable",
            tos="0x00",
            tos_mask="0x00")
        ```

        ## Import

        Router Policy6 can be imported using any of these accepted formats

        ```sh
         $ pulumi import fortios:index/routerPolicy6:RouterPolicy6 labelname {{seq_num}}
        ```

         If you do not want to import arguments of block$ export "FORTIOS_IMPORT_TABLE"="false"

        ```sh
         $ pulumi import fortios:index/routerPolicy6:RouterPolicy6 labelname {{seq_num}}
        ```

         $ unset "FORTIOS_IMPORT_TABLE"

        :param str resource_name: The name of the resource.
        :param RouterPolicy6Args args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(RouterPolicy6Args, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 comments: Optional[pulumi.Input[str]] = None,
                 dst: Optional[pulumi.Input[str]] = None,
                 end_port: Optional[pulumi.Input[int]] = None,
                 gateway: Optional[pulumi.Input[str]] = None,
                 input_device: Optional[pulumi.Input[str]] = None,
                 output_device: Optional[pulumi.Input[str]] = None,
                 protocol: Optional[pulumi.Input[int]] = None,
                 seq_num: Optional[pulumi.Input[int]] = None,
                 src: Optional[pulumi.Input[str]] = None,
                 start_port: Optional[pulumi.Input[int]] = None,
                 status: Optional[pulumi.Input[str]] = None,
                 tos: Optional[pulumi.Input[str]] = None,
                 tos_mask: Optional[pulumi.Input[str]] = None,
                 vdomparam: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        if opts is None:
            opts = pulumi.ResourceOptions()
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.version is None:
            opts.version = _utilities.get_version()
        if opts.plugin_download_url is None:
            opts.plugin_download_url = _utilities.get_plugin_download_url()
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = RouterPolicy6Args.__new__(RouterPolicy6Args)

            __props__.__dict__["comments"] = comments
            __props__.__dict__["dst"] = dst
            __props__.__dict__["end_port"] = end_port
            __props__.__dict__["gateway"] = gateway
            if input_device is None and not opts.urn:
                raise TypeError("Missing required property 'input_device'")
            __props__.__dict__["input_device"] = input_device
            __props__.__dict__["output_device"] = output_device
            __props__.__dict__["protocol"] = protocol
            __props__.__dict__["seq_num"] = seq_num
            __props__.__dict__["src"] = src
            __props__.__dict__["start_port"] = start_port
            __props__.__dict__["status"] = status
            __props__.__dict__["tos"] = tos
            __props__.__dict__["tos_mask"] = tos_mask
            __props__.__dict__["vdomparam"] = vdomparam
        super(RouterPolicy6, __self__).__init__(
            'fortios:index/routerPolicy6:RouterPolicy6',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            comments: Optional[pulumi.Input[str]] = None,
            dst: Optional[pulumi.Input[str]] = None,
            end_port: Optional[pulumi.Input[int]] = None,
            gateway: Optional[pulumi.Input[str]] = None,
            input_device: Optional[pulumi.Input[str]] = None,
            output_device: Optional[pulumi.Input[str]] = None,
            protocol: Optional[pulumi.Input[int]] = None,
            seq_num: Optional[pulumi.Input[int]] = None,
            src: Optional[pulumi.Input[str]] = None,
            start_port: Optional[pulumi.Input[int]] = None,
            status: Optional[pulumi.Input[str]] = None,
            tos: Optional[pulumi.Input[str]] = None,
            tos_mask: Optional[pulumi.Input[str]] = None,
            vdomparam: Optional[pulumi.Input[str]] = None) -> 'RouterPolicy6':
        """
        Get an existing RouterPolicy6 resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] comments: Optional comments.
        :param pulumi.Input[str] dst: Destination IPv6 prefix.
        :param pulumi.Input[int] end_port: End destination port number (1 - 65535).
        :param pulumi.Input[str] gateway: IPv6 address of the gateway.
        :param pulumi.Input[str] input_device: Incoming interface name. Configuration examples: for FortiOS Version <= "6.2.4": `input_device  = "port2"`, for FortiOS Version >= "6.2.4": `input_device  = "\"fortilink\" \"port1\""`.
        :param pulumi.Input[str] output_device: Outgoing interface name.
        :param pulumi.Input[int] protocol: Protocol number (0 - 255).
        :param pulumi.Input[int] seq_num: Sequence number.
        :param pulumi.Input[str] src: Source IPv6 prefix.
        :param pulumi.Input[int] start_port: Start destination port number (1 - 65535).
        :param pulumi.Input[str] status: Enable/disable this policy route. Valid values: `enable`, `disable`.
        :param pulumi.Input[str] tos: Type of service bit pattern.
        :param pulumi.Input[str] tos_mask: Type of service evaluated bits.
        :param pulumi.Input[str] vdomparam: Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _RouterPolicy6State.__new__(_RouterPolicy6State)

        __props__.__dict__["comments"] = comments
        __props__.__dict__["dst"] = dst
        __props__.__dict__["end_port"] = end_port
        __props__.__dict__["gateway"] = gateway
        __props__.__dict__["input_device"] = input_device
        __props__.__dict__["output_device"] = output_device
        __props__.__dict__["protocol"] = protocol
        __props__.__dict__["seq_num"] = seq_num
        __props__.__dict__["src"] = src
        __props__.__dict__["start_port"] = start_port
        __props__.__dict__["status"] = status
        __props__.__dict__["tos"] = tos
        __props__.__dict__["tos_mask"] = tos_mask
        __props__.__dict__["vdomparam"] = vdomparam
        return RouterPolicy6(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter
    def comments(self) -> pulumi.Output[Optional[str]]:
        """
        Optional comments.
        """
        return pulumi.get(self, "comments")

    @property
    @pulumi.getter
    def dst(self) -> pulumi.Output[str]:
        """
        Destination IPv6 prefix.
        """
        return pulumi.get(self, "dst")

    @property
    @pulumi.getter(name="endPort")
    def end_port(self) -> pulumi.Output[int]:
        """
        End destination port number (1 - 65535).
        """
        return pulumi.get(self, "end_port")

    @property
    @pulumi.getter
    def gateway(self) -> pulumi.Output[str]:
        """
        IPv6 address of the gateway.
        """
        return pulumi.get(self, "gateway")

    @property
    @pulumi.getter(name="inputDevice")
    def input_device(self) -> pulumi.Output[str]:
        """
        Incoming interface name. Configuration examples: for FortiOS Version <= "6.2.4": `input_device  = "port2"`, for FortiOS Version >= "6.2.4": `input_device  = "\"fortilink\" \"port1\""`.
        """
        return pulumi.get(self, "input_device")

    @property
    @pulumi.getter(name="outputDevice")
    def output_device(self) -> pulumi.Output[str]:
        """
        Outgoing interface name.
        """
        return pulumi.get(self, "output_device")

    @property
    @pulumi.getter
    def protocol(self) -> pulumi.Output[int]:
        """
        Protocol number (0 - 255).
        """
        return pulumi.get(self, "protocol")

    @property
    @pulumi.getter(name="seqNum")
    def seq_num(self) -> pulumi.Output[int]:
        """
        Sequence number.
        """
        return pulumi.get(self, "seq_num")

    @property
    @pulumi.getter
    def src(self) -> pulumi.Output[str]:
        """
        Source IPv6 prefix.
        """
        return pulumi.get(self, "src")

    @property
    @pulumi.getter(name="startPort")
    def start_port(self) -> pulumi.Output[int]:
        """
        Start destination port number (1 - 65535).
        """
        return pulumi.get(self, "start_port")

    @property
    @pulumi.getter
    def status(self) -> pulumi.Output[str]:
        """
        Enable/disable this policy route. Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "status")

    @property
    @pulumi.getter
    def tos(self) -> pulumi.Output[str]:
        """
        Type of service bit pattern.
        """
        return pulumi.get(self, "tos")

    @property
    @pulumi.getter(name="tosMask")
    def tos_mask(self) -> pulumi.Output[str]:
        """
        Type of service evaluated bits.
        """
        return pulumi.get(self, "tos_mask")

    @property
    @pulumi.getter
    def vdomparam(self) -> pulumi.Output[Optional[str]]:
        """
        Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        return pulumi.get(self, "vdomparam")

