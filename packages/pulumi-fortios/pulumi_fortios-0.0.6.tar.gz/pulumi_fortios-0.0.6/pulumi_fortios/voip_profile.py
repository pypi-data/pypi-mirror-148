# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities
from . import outputs
from ._inputs import *

__all__ = ['VoipProfileArgs', 'VoipProfile']

@pulumi.input_type
class VoipProfileArgs:
    def __init__(__self__, *,
                 comment: Optional[pulumi.Input[str]] = None,
                 feature_set: Optional[pulumi.Input[str]] = None,
                 msrp: Optional[pulumi.Input['VoipProfileMsrpArgs']] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 sccp: Optional[pulumi.Input['VoipProfileSccpArgs']] = None,
                 sip: Optional[pulumi.Input['VoipProfileSipArgs']] = None,
                 vdomparam: Optional[pulumi.Input[str]] = None):
        """
        The set of arguments for constructing a VoipProfile resource.
        :param pulumi.Input[str] comment: Comment.
        :param pulumi.Input[str] feature_set: Flow or proxy inspection feature set. Valid values: `flow`, `proxy`.
        :param pulumi.Input['VoipProfileMsrpArgs'] msrp: MSRP. The structure of `msrp` block is documented below.
        :param pulumi.Input[str] name: Profile name.
        :param pulumi.Input['VoipProfileSccpArgs'] sccp: SCCP. The structure of `sccp` block is documented below.
        :param pulumi.Input['VoipProfileSipArgs'] sip: SIP. The structure of `sip` block is documented below.
        :param pulumi.Input[str] vdomparam: Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        if comment is not None:
            pulumi.set(__self__, "comment", comment)
        if feature_set is not None:
            pulumi.set(__self__, "feature_set", feature_set)
        if msrp is not None:
            pulumi.set(__self__, "msrp", msrp)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if sccp is not None:
            pulumi.set(__self__, "sccp", sccp)
        if sip is not None:
            pulumi.set(__self__, "sip", sip)
        if vdomparam is not None:
            pulumi.set(__self__, "vdomparam", vdomparam)

    @property
    @pulumi.getter
    def comment(self) -> Optional[pulumi.Input[str]]:
        """
        Comment.
        """
        return pulumi.get(self, "comment")

    @comment.setter
    def comment(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "comment", value)

    @property
    @pulumi.getter(name="featureSet")
    def feature_set(self) -> Optional[pulumi.Input[str]]:
        """
        Flow or proxy inspection feature set. Valid values: `flow`, `proxy`.
        """
        return pulumi.get(self, "feature_set")

    @feature_set.setter
    def feature_set(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "feature_set", value)

    @property
    @pulumi.getter
    def msrp(self) -> Optional[pulumi.Input['VoipProfileMsrpArgs']]:
        """
        MSRP. The structure of `msrp` block is documented below.
        """
        return pulumi.get(self, "msrp")

    @msrp.setter
    def msrp(self, value: Optional[pulumi.Input['VoipProfileMsrpArgs']]):
        pulumi.set(self, "msrp", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        """
        Profile name.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter
    def sccp(self) -> Optional[pulumi.Input['VoipProfileSccpArgs']]:
        """
        SCCP. The structure of `sccp` block is documented below.
        """
        return pulumi.get(self, "sccp")

    @sccp.setter
    def sccp(self, value: Optional[pulumi.Input['VoipProfileSccpArgs']]):
        pulumi.set(self, "sccp", value)

    @property
    @pulumi.getter
    def sip(self) -> Optional[pulumi.Input['VoipProfileSipArgs']]:
        """
        SIP. The structure of `sip` block is documented below.
        """
        return pulumi.get(self, "sip")

    @sip.setter
    def sip(self, value: Optional[pulumi.Input['VoipProfileSipArgs']]):
        pulumi.set(self, "sip", value)

    @property
    @pulumi.getter
    def vdomparam(self) -> Optional[pulumi.Input[str]]:
        """
        Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        return pulumi.get(self, "vdomparam")

    @vdomparam.setter
    def vdomparam(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "vdomparam", value)


@pulumi.input_type
class _VoipProfileState:
    def __init__(__self__, *,
                 comment: Optional[pulumi.Input[str]] = None,
                 feature_set: Optional[pulumi.Input[str]] = None,
                 msrp: Optional[pulumi.Input['VoipProfileMsrpArgs']] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 sccp: Optional[pulumi.Input['VoipProfileSccpArgs']] = None,
                 sip: Optional[pulumi.Input['VoipProfileSipArgs']] = None,
                 vdomparam: Optional[pulumi.Input[str]] = None):
        """
        Input properties used for looking up and filtering VoipProfile resources.
        :param pulumi.Input[str] comment: Comment.
        :param pulumi.Input[str] feature_set: Flow or proxy inspection feature set. Valid values: `flow`, `proxy`.
        :param pulumi.Input['VoipProfileMsrpArgs'] msrp: MSRP. The structure of `msrp` block is documented below.
        :param pulumi.Input[str] name: Profile name.
        :param pulumi.Input['VoipProfileSccpArgs'] sccp: SCCP. The structure of `sccp` block is documented below.
        :param pulumi.Input['VoipProfileSipArgs'] sip: SIP. The structure of `sip` block is documented below.
        :param pulumi.Input[str] vdomparam: Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        if comment is not None:
            pulumi.set(__self__, "comment", comment)
        if feature_set is not None:
            pulumi.set(__self__, "feature_set", feature_set)
        if msrp is not None:
            pulumi.set(__self__, "msrp", msrp)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if sccp is not None:
            pulumi.set(__self__, "sccp", sccp)
        if sip is not None:
            pulumi.set(__self__, "sip", sip)
        if vdomparam is not None:
            pulumi.set(__self__, "vdomparam", vdomparam)

    @property
    @pulumi.getter
    def comment(self) -> Optional[pulumi.Input[str]]:
        """
        Comment.
        """
        return pulumi.get(self, "comment")

    @comment.setter
    def comment(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "comment", value)

    @property
    @pulumi.getter(name="featureSet")
    def feature_set(self) -> Optional[pulumi.Input[str]]:
        """
        Flow or proxy inspection feature set. Valid values: `flow`, `proxy`.
        """
        return pulumi.get(self, "feature_set")

    @feature_set.setter
    def feature_set(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "feature_set", value)

    @property
    @pulumi.getter
    def msrp(self) -> Optional[pulumi.Input['VoipProfileMsrpArgs']]:
        """
        MSRP. The structure of `msrp` block is documented below.
        """
        return pulumi.get(self, "msrp")

    @msrp.setter
    def msrp(self, value: Optional[pulumi.Input['VoipProfileMsrpArgs']]):
        pulumi.set(self, "msrp", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        """
        Profile name.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter
    def sccp(self) -> Optional[pulumi.Input['VoipProfileSccpArgs']]:
        """
        SCCP. The structure of `sccp` block is documented below.
        """
        return pulumi.get(self, "sccp")

    @sccp.setter
    def sccp(self, value: Optional[pulumi.Input['VoipProfileSccpArgs']]):
        pulumi.set(self, "sccp", value)

    @property
    @pulumi.getter
    def sip(self) -> Optional[pulumi.Input['VoipProfileSipArgs']]:
        """
        SIP. The structure of `sip` block is documented below.
        """
        return pulumi.get(self, "sip")

    @sip.setter
    def sip(self, value: Optional[pulumi.Input['VoipProfileSipArgs']]):
        pulumi.set(self, "sip", value)

    @property
    @pulumi.getter
    def vdomparam(self) -> Optional[pulumi.Input[str]]:
        """
        Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        return pulumi.get(self, "vdomparam")

    @vdomparam.setter
    def vdomparam(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "vdomparam", value)


class VoipProfile(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 comment: Optional[pulumi.Input[str]] = None,
                 feature_set: Optional[pulumi.Input[str]] = None,
                 msrp: Optional[pulumi.Input[pulumi.InputType['VoipProfileMsrpArgs']]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 sccp: Optional[pulumi.Input[pulumi.InputType['VoipProfileSccpArgs']]] = None,
                 sip: Optional[pulumi.Input[pulumi.InputType['VoipProfileSipArgs']]] = None,
                 vdomparam: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        Configure VoIP profiles.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_fortios as fortios

        trname = fortios.VoipProfile("trname",
            comment="test",
            sccp=fortios.VoipProfileSccpArgs(
                block_mcast="disable",
                log_call_summary="disable",
                log_violations="disable",
                max_calls=0,
                status="enable",
                verify_header="disable",
            ),
            sip=fortios.VoipProfileSipArgs(
                ack_rate=0,
                bye_rate=0,
                call_keepalive=0,
                cancel_rate=0,
                contact_fixup="enable",
                hnt_restrict_source_ip="disable",
                hosted_nat_traversal="disable",
                info_rate=0,
                invite_rate=0,
                ips_rtp="enable",
                log_call_summary="enable",
                log_violations="disable",
                max_body_length=0,
                max_dialogs=0,
                max_idle_dialogs=0,
                max_line_length=998,
                message_rate=0,
                nat_trace="enable",
                no_sdp_fixup="disable",
                notify_rate=0,
                open_contact_pinhole="enable",
                open_record_route_pinhole="enable",
                open_register_pinhole="enable",
                open_via_pinhole="disable",
                options_rate=0,
                prack_rate=0,
                preserve_override="disable",
                provisional_invite_expiry_time=210,
                publish_rate=0,
                refer_rate=0,
                register_contact_trace="disable",
                register_rate=0,
                rfc2543_branch="disable",
                rtp="enable",
                ssl_algorithm="high",
                ssl_client_renegotiation="allow",
                ssl_max_version="tls-1.2",
                ssl_min_version="tls-1.1",
                ssl_mode="off",
                ssl_pfs="allow",
                ssl_send_empty_frags="enable",
                status="enable",
                strict_register="enable",
                subscribe_rate=0,
                unknown_header="pass",
                update_rate=0,
            ))
        ```

        ## Import

        Voip Profile can be imported using any of these accepted formats

        ```sh
         $ pulumi import fortios:index/voipProfile:VoipProfile labelname {{name}}
        ```

         If you do not want to import arguments of block$ export "FORTIOS_IMPORT_TABLE"="false"

        ```sh
         $ pulumi import fortios:index/voipProfile:VoipProfile labelname {{name}}
        ```

         $ unset "FORTIOS_IMPORT_TABLE"

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] comment: Comment.
        :param pulumi.Input[str] feature_set: Flow or proxy inspection feature set. Valid values: `flow`, `proxy`.
        :param pulumi.Input[pulumi.InputType['VoipProfileMsrpArgs']] msrp: MSRP. The structure of `msrp` block is documented below.
        :param pulumi.Input[str] name: Profile name.
        :param pulumi.Input[pulumi.InputType['VoipProfileSccpArgs']] sccp: SCCP. The structure of `sccp` block is documented below.
        :param pulumi.Input[pulumi.InputType['VoipProfileSipArgs']] sip: SIP. The structure of `sip` block is documented below.
        :param pulumi.Input[str] vdomparam: Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: Optional[VoipProfileArgs] = None,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Configure VoIP profiles.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_fortios as fortios

        trname = fortios.VoipProfile("trname",
            comment="test",
            sccp=fortios.VoipProfileSccpArgs(
                block_mcast="disable",
                log_call_summary="disable",
                log_violations="disable",
                max_calls=0,
                status="enable",
                verify_header="disable",
            ),
            sip=fortios.VoipProfileSipArgs(
                ack_rate=0,
                bye_rate=0,
                call_keepalive=0,
                cancel_rate=0,
                contact_fixup="enable",
                hnt_restrict_source_ip="disable",
                hosted_nat_traversal="disable",
                info_rate=0,
                invite_rate=0,
                ips_rtp="enable",
                log_call_summary="enable",
                log_violations="disable",
                max_body_length=0,
                max_dialogs=0,
                max_idle_dialogs=0,
                max_line_length=998,
                message_rate=0,
                nat_trace="enable",
                no_sdp_fixup="disable",
                notify_rate=0,
                open_contact_pinhole="enable",
                open_record_route_pinhole="enable",
                open_register_pinhole="enable",
                open_via_pinhole="disable",
                options_rate=0,
                prack_rate=0,
                preserve_override="disable",
                provisional_invite_expiry_time=210,
                publish_rate=0,
                refer_rate=0,
                register_contact_trace="disable",
                register_rate=0,
                rfc2543_branch="disable",
                rtp="enable",
                ssl_algorithm="high",
                ssl_client_renegotiation="allow",
                ssl_max_version="tls-1.2",
                ssl_min_version="tls-1.1",
                ssl_mode="off",
                ssl_pfs="allow",
                ssl_send_empty_frags="enable",
                status="enable",
                strict_register="enable",
                subscribe_rate=0,
                unknown_header="pass",
                update_rate=0,
            ))
        ```

        ## Import

        Voip Profile can be imported using any of these accepted formats

        ```sh
         $ pulumi import fortios:index/voipProfile:VoipProfile labelname {{name}}
        ```

         If you do not want to import arguments of block$ export "FORTIOS_IMPORT_TABLE"="false"

        ```sh
         $ pulumi import fortios:index/voipProfile:VoipProfile labelname {{name}}
        ```

         $ unset "FORTIOS_IMPORT_TABLE"

        :param str resource_name: The name of the resource.
        :param VoipProfileArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(VoipProfileArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 comment: Optional[pulumi.Input[str]] = None,
                 feature_set: Optional[pulumi.Input[str]] = None,
                 msrp: Optional[pulumi.Input[pulumi.InputType['VoipProfileMsrpArgs']]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 sccp: Optional[pulumi.Input[pulumi.InputType['VoipProfileSccpArgs']]] = None,
                 sip: Optional[pulumi.Input[pulumi.InputType['VoipProfileSipArgs']]] = None,
                 vdomparam: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        if opts is None:
            opts = pulumi.ResourceOptions()
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.version is None:
            opts.version = _utilities.get_version()
        if opts.plugin_download_url is None:
            opts.plugin_download_url = _utilities.get_plugin_download_url()
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = VoipProfileArgs.__new__(VoipProfileArgs)

            __props__.__dict__["comment"] = comment
            __props__.__dict__["feature_set"] = feature_set
            __props__.__dict__["msrp"] = msrp
            __props__.__dict__["name"] = name
            __props__.__dict__["sccp"] = sccp
            __props__.__dict__["sip"] = sip
            __props__.__dict__["vdomparam"] = vdomparam
        super(VoipProfile, __self__).__init__(
            'fortios:index/voipProfile:VoipProfile',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            comment: Optional[pulumi.Input[str]] = None,
            feature_set: Optional[pulumi.Input[str]] = None,
            msrp: Optional[pulumi.Input[pulumi.InputType['VoipProfileMsrpArgs']]] = None,
            name: Optional[pulumi.Input[str]] = None,
            sccp: Optional[pulumi.Input[pulumi.InputType['VoipProfileSccpArgs']]] = None,
            sip: Optional[pulumi.Input[pulumi.InputType['VoipProfileSipArgs']]] = None,
            vdomparam: Optional[pulumi.Input[str]] = None) -> 'VoipProfile':
        """
        Get an existing VoipProfile resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] comment: Comment.
        :param pulumi.Input[str] feature_set: Flow or proxy inspection feature set. Valid values: `flow`, `proxy`.
        :param pulumi.Input[pulumi.InputType['VoipProfileMsrpArgs']] msrp: MSRP. The structure of `msrp` block is documented below.
        :param pulumi.Input[str] name: Profile name.
        :param pulumi.Input[pulumi.InputType['VoipProfileSccpArgs']] sccp: SCCP. The structure of `sccp` block is documented below.
        :param pulumi.Input[pulumi.InputType['VoipProfileSipArgs']] sip: SIP. The structure of `sip` block is documented below.
        :param pulumi.Input[str] vdomparam: Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _VoipProfileState.__new__(_VoipProfileState)

        __props__.__dict__["comment"] = comment
        __props__.__dict__["feature_set"] = feature_set
        __props__.__dict__["msrp"] = msrp
        __props__.__dict__["name"] = name
        __props__.__dict__["sccp"] = sccp
        __props__.__dict__["sip"] = sip
        __props__.__dict__["vdomparam"] = vdomparam
        return VoipProfile(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter
    def comment(self) -> pulumi.Output[Optional[str]]:
        """
        Comment.
        """
        return pulumi.get(self, "comment")

    @property
    @pulumi.getter(name="featureSet")
    def feature_set(self) -> pulumi.Output[str]:
        """
        Flow or proxy inspection feature set. Valid values: `flow`, `proxy`.
        """
        return pulumi.get(self, "feature_set")

    @property
    @pulumi.getter
    def msrp(self) -> pulumi.Output[Optional['outputs.VoipProfileMsrp']]:
        """
        MSRP. The structure of `msrp` block is documented below.
        """
        return pulumi.get(self, "msrp")

    @property
    @pulumi.getter
    def name(self) -> pulumi.Output[str]:
        """
        Profile name.
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter
    def sccp(self) -> pulumi.Output[Optional['outputs.VoipProfileSccp']]:
        """
        SCCP. The structure of `sccp` block is documented below.
        """
        return pulumi.get(self, "sccp")

    @property
    @pulumi.getter
    def sip(self) -> pulumi.Output[Optional['outputs.VoipProfileSip']]:
        """
        SIP. The structure of `sip` block is documented below.
        """
        return pulumi.get(self, "sip")

    @property
    @pulumi.getter
    def vdomparam(self) -> pulumi.Output[Optional[str]]:
        """
        Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        return pulumi.get(self, "vdomparam")

