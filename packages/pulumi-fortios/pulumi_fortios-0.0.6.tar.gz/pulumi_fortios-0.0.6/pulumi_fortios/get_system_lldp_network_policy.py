# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities
from . import outputs

__all__ = [
    'GetSystemLldpNetworkPolicyResult',
    'AwaitableGetSystemLldpNetworkPolicyResult',
    'get_system_lldp_network_policy',
    'get_system_lldp_network_policy_output',
]

@pulumi.output_type
class GetSystemLldpNetworkPolicyResult:
    """
    A collection of values returned by GetSystemLldpNetworkPolicy.
    """
    def __init__(__self__, comment=None, guest=None, guest_voice_signaling=None, id=None, name=None, softphone=None, streaming_video=None, vdomparam=None, video_conferencing=None, video_signaling=None, voice=None, voice_signaling=None):
        if comment and not isinstance(comment, str):
            raise TypeError("Expected argument 'comment' to be a str")
        pulumi.set(__self__, "comment", comment)
        if guest and not isinstance(guest, dict):
            raise TypeError("Expected argument 'guest' to be a dict")
        pulumi.set(__self__, "guest", guest)
        if guest_voice_signaling and not isinstance(guest_voice_signaling, dict):
            raise TypeError("Expected argument 'guest_voice_signaling' to be a dict")
        pulumi.set(__self__, "guest_voice_signaling", guest_voice_signaling)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        pulumi.set(__self__, "name", name)
        if softphone and not isinstance(softphone, dict):
            raise TypeError("Expected argument 'softphone' to be a dict")
        pulumi.set(__self__, "softphone", softphone)
        if streaming_video and not isinstance(streaming_video, dict):
            raise TypeError("Expected argument 'streaming_video' to be a dict")
        pulumi.set(__self__, "streaming_video", streaming_video)
        if vdomparam and not isinstance(vdomparam, str):
            raise TypeError("Expected argument 'vdomparam' to be a str")
        pulumi.set(__self__, "vdomparam", vdomparam)
        if video_conferencing and not isinstance(video_conferencing, dict):
            raise TypeError("Expected argument 'video_conferencing' to be a dict")
        pulumi.set(__self__, "video_conferencing", video_conferencing)
        if video_signaling and not isinstance(video_signaling, dict):
            raise TypeError("Expected argument 'video_signaling' to be a dict")
        pulumi.set(__self__, "video_signaling", video_signaling)
        if voice and not isinstance(voice, dict):
            raise TypeError("Expected argument 'voice' to be a dict")
        pulumi.set(__self__, "voice", voice)
        if voice_signaling and not isinstance(voice_signaling, dict):
            raise TypeError("Expected argument 'voice_signaling' to be a dict")
        pulumi.set(__self__, "voice_signaling", voice_signaling)

    @property
    @pulumi.getter
    def comment(self) -> str:
        """
        Comment.
        """
        return pulumi.get(self, "comment")

    @property
    @pulumi.getter
    def guest(self) -> 'outputs.GetSystemLldpNetworkPolicyGuestResult':
        """
        Guest. The structure of `guest` block is documented below.
        """
        return pulumi.get(self, "guest")

    @property
    @pulumi.getter(name="guestVoiceSignaling")
    def guest_voice_signaling(self) -> 'outputs.GetSystemLldpNetworkPolicyGuestVoiceSignalingResult':
        """
        Guest Voice Signaling. The structure of `guest_voice_signaling` block is documented below.
        """
        return pulumi.get(self, "guest_voice_signaling")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def name(self) -> str:
        """
        LLDP network policy name.
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter
    def softphone(self) -> 'outputs.GetSystemLldpNetworkPolicySoftphoneResult':
        """
        Softphone. The structure of `softphone` block is documented below.
        """
        return pulumi.get(self, "softphone")

    @property
    @pulumi.getter(name="streamingVideo")
    def streaming_video(self) -> 'outputs.GetSystemLldpNetworkPolicyStreamingVideoResult':
        """
        Streaming Video. The structure of `streaming_video` block is documented below.
        """
        return pulumi.get(self, "streaming_video")

    @property
    @pulumi.getter
    def vdomparam(self) -> Optional[str]:
        return pulumi.get(self, "vdomparam")

    @property
    @pulumi.getter(name="videoConferencing")
    def video_conferencing(self) -> 'outputs.GetSystemLldpNetworkPolicyVideoConferencingResult':
        """
        Video Conferencing. The structure of `video_conferencing` block is documented below.
        """
        return pulumi.get(self, "video_conferencing")

    @property
    @pulumi.getter(name="videoSignaling")
    def video_signaling(self) -> 'outputs.GetSystemLldpNetworkPolicyVideoSignalingResult':
        """
        Video Signaling. The structure of `video_signaling` block is documented below.
        """
        return pulumi.get(self, "video_signaling")

    @property
    @pulumi.getter
    def voice(self) -> 'outputs.GetSystemLldpNetworkPolicyVoiceResult':
        """
        Voice. The structure of `voice` block is documented below.
        """
        return pulumi.get(self, "voice")

    @property
    @pulumi.getter(name="voiceSignaling")
    def voice_signaling(self) -> 'outputs.GetSystemLldpNetworkPolicyVoiceSignalingResult':
        """
        Voice signaling. The structure of `voice_signaling` block is documented below.
        """
        return pulumi.get(self, "voice_signaling")


class AwaitableGetSystemLldpNetworkPolicyResult(GetSystemLldpNetworkPolicyResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetSystemLldpNetworkPolicyResult(
            comment=self.comment,
            guest=self.guest,
            guest_voice_signaling=self.guest_voice_signaling,
            id=self.id,
            name=self.name,
            softphone=self.softphone,
            streaming_video=self.streaming_video,
            vdomparam=self.vdomparam,
            video_conferencing=self.video_conferencing,
            video_signaling=self.video_signaling,
            voice=self.voice,
            voice_signaling=self.voice_signaling)


def get_system_lldp_network_policy(name: Optional[str] = None,
                                   vdomparam: Optional[str] = None,
                                   opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetSystemLldpNetworkPolicyResult:
    """
    Use this data source to get information on an fortios systemlldp networkpolicy


    :param str name: Specify the name of the desired systemlldp networkpolicy.
    :param str vdomparam: Specifies the vdom to which the data source will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
    """
    __args__ = dict()
    __args__['name'] = name
    __args__['vdomparam'] = vdomparam
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = _utilities.get_version()
        if opts.plugin_download_url is None:
            opts.plugin_download_url = _utilities.get_plugin_download_url()
    __ret__ = pulumi.runtime.invoke('fortios:index/getSystemLldpNetworkPolicy:GetSystemLldpNetworkPolicy', __args__, opts=opts, typ=GetSystemLldpNetworkPolicyResult).value

    return AwaitableGetSystemLldpNetworkPolicyResult(
        comment=__ret__.comment,
        guest=__ret__.guest,
        guest_voice_signaling=__ret__.guest_voice_signaling,
        id=__ret__.id,
        name=__ret__.name,
        softphone=__ret__.softphone,
        streaming_video=__ret__.streaming_video,
        vdomparam=__ret__.vdomparam,
        video_conferencing=__ret__.video_conferencing,
        video_signaling=__ret__.video_signaling,
        voice=__ret__.voice,
        voice_signaling=__ret__.voice_signaling)


@_utilities.lift_output_func(get_system_lldp_network_policy)
def get_system_lldp_network_policy_output(name: Optional[pulumi.Input[str]] = None,
                                          vdomparam: Optional[pulumi.Input[Optional[str]]] = None,
                                          opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetSystemLldpNetworkPolicyResult]:
    """
    Use this data source to get information on an fortios systemlldp networkpolicy


    :param str name: Specify the name of the desired systemlldp networkpolicy.
    :param str vdomparam: Specifies the vdom to which the data source will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
    """
    ...
