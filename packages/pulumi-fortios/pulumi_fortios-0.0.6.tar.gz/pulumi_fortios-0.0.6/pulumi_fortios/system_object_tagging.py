# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities
from . import outputs
from ._inputs import *

__all__ = ['SystemObjectTaggingArgs', 'SystemObjectTagging']

@pulumi.input_type
class SystemObjectTaggingArgs:
    def __init__(__self__, *,
                 address: Optional[pulumi.Input[str]] = None,
                 category: Optional[pulumi.Input[str]] = None,
                 color: Optional[pulumi.Input[int]] = None,
                 device: Optional[pulumi.Input[str]] = None,
                 dynamic_sort_subtable: Optional[pulumi.Input[str]] = None,
                 interface: Optional[pulumi.Input[str]] = None,
                 multiple: Optional[pulumi.Input[str]] = None,
                 tags: Optional[pulumi.Input[Sequence[pulumi.Input['SystemObjectTaggingTagArgs']]]] = None,
                 vdomparam: Optional[pulumi.Input[str]] = None):
        """
        The set of arguments for constructing a SystemObjectTagging resource.
        :param pulumi.Input[str] address: Address. Valid values: `disable`, `mandatory`, `optional`.
        :param pulumi.Input[str] category: Tag Category.
        :param pulumi.Input[int] color: Color of icon on the GUI.
        :param pulumi.Input[str] device: Device. Valid values: `disable`, `mandatory`, `optional`.
        :param pulumi.Input[str] dynamic_sort_subtable: true or false, set this parameter to true when using dynamic for_each + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
        :param pulumi.Input[str] interface: Interface. Valid values: `disable`, `mandatory`, `optional`.
        :param pulumi.Input[str] multiple: Allow multiple tag selection. Valid values: `enable`, `disable`.
        :param pulumi.Input[Sequence[pulumi.Input['SystemObjectTaggingTagArgs']]] tags: Tags. The structure of `tags` block is documented below.
        :param pulumi.Input[str] vdomparam: Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        if address is not None:
            pulumi.set(__self__, "address", address)
        if category is not None:
            pulumi.set(__self__, "category", category)
        if color is not None:
            pulumi.set(__self__, "color", color)
        if device is not None:
            pulumi.set(__self__, "device", device)
        if dynamic_sort_subtable is not None:
            pulumi.set(__self__, "dynamic_sort_subtable", dynamic_sort_subtable)
        if interface is not None:
            pulumi.set(__self__, "interface", interface)
        if multiple is not None:
            pulumi.set(__self__, "multiple", multiple)
        if tags is not None:
            pulumi.set(__self__, "tags", tags)
        if vdomparam is not None:
            pulumi.set(__self__, "vdomparam", vdomparam)

    @property
    @pulumi.getter
    def address(self) -> Optional[pulumi.Input[str]]:
        """
        Address. Valid values: `disable`, `mandatory`, `optional`.
        """
        return pulumi.get(self, "address")

    @address.setter
    def address(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "address", value)

    @property
    @pulumi.getter
    def category(self) -> Optional[pulumi.Input[str]]:
        """
        Tag Category.
        """
        return pulumi.get(self, "category")

    @category.setter
    def category(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "category", value)

    @property
    @pulumi.getter
    def color(self) -> Optional[pulumi.Input[int]]:
        """
        Color of icon on the GUI.
        """
        return pulumi.get(self, "color")

    @color.setter
    def color(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "color", value)

    @property
    @pulumi.getter
    def device(self) -> Optional[pulumi.Input[str]]:
        """
        Device. Valid values: `disable`, `mandatory`, `optional`.
        """
        return pulumi.get(self, "device")

    @device.setter
    def device(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "device", value)

    @property
    @pulumi.getter(name="dynamicSortSubtable")
    def dynamic_sort_subtable(self) -> Optional[pulumi.Input[str]]:
        """
        true or false, set this parameter to true when using dynamic for_each + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
        """
        return pulumi.get(self, "dynamic_sort_subtable")

    @dynamic_sort_subtable.setter
    def dynamic_sort_subtable(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "dynamic_sort_subtable", value)

    @property
    @pulumi.getter
    def interface(self) -> Optional[pulumi.Input[str]]:
        """
        Interface. Valid values: `disable`, `mandatory`, `optional`.
        """
        return pulumi.get(self, "interface")

    @interface.setter
    def interface(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "interface", value)

    @property
    @pulumi.getter
    def multiple(self) -> Optional[pulumi.Input[str]]:
        """
        Allow multiple tag selection. Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "multiple")

    @multiple.setter
    def multiple(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "multiple", value)

    @property
    @pulumi.getter
    def tags(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['SystemObjectTaggingTagArgs']]]]:
        """
        Tags. The structure of `tags` block is documented below.
        """
        return pulumi.get(self, "tags")

    @tags.setter
    def tags(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['SystemObjectTaggingTagArgs']]]]):
        pulumi.set(self, "tags", value)

    @property
    @pulumi.getter
    def vdomparam(self) -> Optional[pulumi.Input[str]]:
        """
        Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        return pulumi.get(self, "vdomparam")

    @vdomparam.setter
    def vdomparam(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "vdomparam", value)


@pulumi.input_type
class _SystemObjectTaggingState:
    def __init__(__self__, *,
                 address: Optional[pulumi.Input[str]] = None,
                 category: Optional[pulumi.Input[str]] = None,
                 color: Optional[pulumi.Input[int]] = None,
                 device: Optional[pulumi.Input[str]] = None,
                 dynamic_sort_subtable: Optional[pulumi.Input[str]] = None,
                 interface: Optional[pulumi.Input[str]] = None,
                 multiple: Optional[pulumi.Input[str]] = None,
                 tags: Optional[pulumi.Input[Sequence[pulumi.Input['SystemObjectTaggingTagArgs']]]] = None,
                 vdomparam: Optional[pulumi.Input[str]] = None):
        """
        Input properties used for looking up and filtering SystemObjectTagging resources.
        :param pulumi.Input[str] address: Address. Valid values: `disable`, `mandatory`, `optional`.
        :param pulumi.Input[str] category: Tag Category.
        :param pulumi.Input[int] color: Color of icon on the GUI.
        :param pulumi.Input[str] device: Device. Valid values: `disable`, `mandatory`, `optional`.
        :param pulumi.Input[str] dynamic_sort_subtable: true or false, set this parameter to true when using dynamic for_each + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
        :param pulumi.Input[str] interface: Interface. Valid values: `disable`, `mandatory`, `optional`.
        :param pulumi.Input[str] multiple: Allow multiple tag selection. Valid values: `enable`, `disable`.
        :param pulumi.Input[Sequence[pulumi.Input['SystemObjectTaggingTagArgs']]] tags: Tags. The structure of `tags` block is documented below.
        :param pulumi.Input[str] vdomparam: Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        if address is not None:
            pulumi.set(__self__, "address", address)
        if category is not None:
            pulumi.set(__self__, "category", category)
        if color is not None:
            pulumi.set(__self__, "color", color)
        if device is not None:
            pulumi.set(__self__, "device", device)
        if dynamic_sort_subtable is not None:
            pulumi.set(__self__, "dynamic_sort_subtable", dynamic_sort_subtable)
        if interface is not None:
            pulumi.set(__self__, "interface", interface)
        if multiple is not None:
            pulumi.set(__self__, "multiple", multiple)
        if tags is not None:
            pulumi.set(__self__, "tags", tags)
        if vdomparam is not None:
            pulumi.set(__self__, "vdomparam", vdomparam)

    @property
    @pulumi.getter
    def address(self) -> Optional[pulumi.Input[str]]:
        """
        Address. Valid values: `disable`, `mandatory`, `optional`.
        """
        return pulumi.get(self, "address")

    @address.setter
    def address(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "address", value)

    @property
    @pulumi.getter
    def category(self) -> Optional[pulumi.Input[str]]:
        """
        Tag Category.
        """
        return pulumi.get(self, "category")

    @category.setter
    def category(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "category", value)

    @property
    @pulumi.getter
    def color(self) -> Optional[pulumi.Input[int]]:
        """
        Color of icon on the GUI.
        """
        return pulumi.get(self, "color")

    @color.setter
    def color(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "color", value)

    @property
    @pulumi.getter
    def device(self) -> Optional[pulumi.Input[str]]:
        """
        Device. Valid values: `disable`, `mandatory`, `optional`.
        """
        return pulumi.get(self, "device")

    @device.setter
    def device(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "device", value)

    @property
    @pulumi.getter(name="dynamicSortSubtable")
    def dynamic_sort_subtable(self) -> Optional[pulumi.Input[str]]:
        """
        true or false, set this parameter to true when using dynamic for_each + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
        """
        return pulumi.get(self, "dynamic_sort_subtable")

    @dynamic_sort_subtable.setter
    def dynamic_sort_subtable(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "dynamic_sort_subtable", value)

    @property
    @pulumi.getter
    def interface(self) -> Optional[pulumi.Input[str]]:
        """
        Interface. Valid values: `disable`, `mandatory`, `optional`.
        """
        return pulumi.get(self, "interface")

    @interface.setter
    def interface(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "interface", value)

    @property
    @pulumi.getter
    def multiple(self) -> Optional[pulumi.Input[str]]:
        """
        Allow multiple tag selection. Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "multiple")

    @multiple.setter
    def multiple(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "multiple", value)

    @property
    @pulumi.getter
    def tags(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['SystemObjectTaggingTagArgs']]]]:
        """
        Tags. The structure of `tags` block is documented below.
        """
        return pulumi.get(self, "tags")

    @tags.setter
    def tags(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['SystemObjectTaggingTagArgs']]]]):
        pulumi.set(self, "tags", value)

    @property
    @pulumi.getter
    def vdomparam(self) -> Optional[pulumi.Input[str]]:
        """
        Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        return pulumi.get(self, "vdomparam")

    @vdomparam.setter
    def vdomparam(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "vdomparam", value)


class SystemObjectTagging(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 address: Optional[pulumi.Input[str]] = None,
                 category: Optional[pulumi.Input[str]] = None,
                 color: Optional[pulumi.Input[int]] = None,
                 device: Optional[pulumi.Input[str]] = None,
                 dynamic_sort_subtable: Optional[pulumi.Input[str]] = None,
                 interface: Optional[pulumi.Input[str]] = None,
                 multiple: Optional[pulumi.Input[str]] = None,
                 tags: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['SystemObjectTaggingTagArgs']]]]] = None,
                 vdomparam: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        Configure object tagging.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_fortios as fortios

        trname = fortios.SystemObjectTagging("trname",
            address="disable",
            category="s1",
            color=0,
            device="mandatory",
            interface="disable",
            multiple="enable")
        ```

        ## Import

        System ObjectTagging can be imported using any of these accepted formats

        ```sh
         $ pulumi import fortios:index/systemObjectTagging:SystemObjectTagging labelname {{category}}
        ```

         If you do not want to import arguments of block$ export "FORTIOS_IMPORT_TABLE"="false"

        ```sh
         $ pulumi import fortios:index/systemObjectTagging:SystemObjectTagging labelname {{category}}
        ```

         $ unset "FORTIOS_IMPORT_TABLE"

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] address: Address. Valid values: `disable`, `mandatory`, `optional`.
        :param pulumi.Input[str] category: Tag Category.
        :param pulumi.Input[int] color: Color of icon on the GUI.
        :param pulumi.Input[str] device: Device. Valid values: `disable`, `mandatory`, `optional`.
        :param pulumi.Input[str] dynamic_sort_subtable: true or false, set this parameter to true when using dynamic for_each + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
        :param pulumi.Input[str] interface: Interface. Valid values: `disable`, `mandatory`, `optional`.
        :param pulumi.Input[str] multiple: Allow multiple tag selection. Valid values: `enable`, `disable`.
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['SystemObjectTaggingTagArgs']]]] tags: Tags. The structure of `tags` block is documented below.
        :param pulumi.Input[str] vdomparam: Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: Optional[SystemObjectTaggingArgs] = None,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Configure object tagging.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_fortios as fortios

        trname = fortios.SystemObjectTagging("trname",
            address="disable",
            category="s1",
            color=0,
            device="mandatory",
            interface="disable",
            multiple="enable")
        ```

        ## Import

        System ObjectTagging can be imported using any of these accepted formats

        ```sh
         $ pulumi import fortios:index/systemObjectTagging:SystemObjectTagging labelname {{category}}
        ```

         If you do not want to import arguments of block$ export "FORTIOS_IMPORT_TABLE"="false"

        ```sh
         $ pulumi import fortios:index/systemObjectTagging:SystemObjectTagging labelname {{category}}
        ```

         $ unset "FORTIOS_IMPORT_TABLE"

        :param str resource_name: The name of the resource.
        :param SystemObjectTaggingArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(SystemObjectTaggingArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 address: Optional[pulumi.Input[str]] = None,
                 category: Optional[pulumi.Input[str]] = None,
                 color: Optional[pulumi.Input[int]] = None,
                 device: Optional[pulumi.Input[str]] = None,
                 dynamic_sort_subtable: Optional[pulumi.Input[str]] = None,
                 interface: Optional[pulumi.Input[str]] = None,
                 multiple: Optional[pulumi.Input[str]] = None,
                 tags: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['SystemObjectTaggingTagArgs']]]]] = None,
                 vdomparam: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        if opts is None:
            opts = pulumi.ResourceOptions()
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.version is None:
            opts.version = _utilities.get_version()
        if opts.plugin_download_url is None:
            opts.plugin_download_url = _utilities.get_plugin_download_url()
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = SystemObjectTaggingArgs.__new__(SystemObjectTaggingArgs)

            __props__.__dict__["address"] = address
            __props__.__dict__["category"] = category
            __props__.__dict__["color"] = color
            __props__.__dict__["device"] = device
            __props__.__dict__["dynamic_sort_subtable"] = dynamic_sort_subtable
            __props__.__dict__["interface"] = interface
            __props__.__dict__["multiple"] = multiple
            __props__.__dict__["tags"] = tags
            __props__.__dict__["vdomparam"] = vdomparam
        super(SystemObjectTagging, __self__).__init__(
            'fortios:index/systemObjectTagging:SystemObjectTagging',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            address: Optional[pulumi.Input[str]] = None,
            category: Optional[pulumi.Input[str]] = None,
            color: Optional[pulumi.Input[int]] = None,
            device: Optional[pulumi.Input[str]] = None,
            dynamic_sort_subtable: Optional[pulumi.Input[str]] = None,
            interface: Optional[pulumi.Input[str]] = None,
            multiple: Optional[pulumi.Input[str]] = None,
            tags: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['SystemObjectTaggingTagArgs']]]]] = None,
            vdomparam: Optional[pulumi.Input[str]] = None) -> 'SystemObjectTagging':
        """
        Get an existing SystemObjectTagging resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] address: Address. Valid values: `disable`, `mandatory`, `optional`.
        :param pulumi.Input[str] category: Tag Category.
        :param pulumi.Input[int] color: Color of icon on the GUI.
        :param pulumi.Input[str] device: Device. Valid values: `disable`, `mandatory`, `optional`.
        :param pulumi.Input[str] dynamic_sort_subtable: true or false, set this parameter to true when using dynamic for_each + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
        :param pulumi.Input[str] interface: Interface. Valid values: `disable`, `mandatory`, `optional`.
        :param pulumi.Input[str] multiple: Allow multiple tag selection. Valid values: `enable`, `disable`.
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['SystemObjectTaggingTagArgs']]]] tags: Tags. The structure of `tags` block is documented below.
        :param pulumi.Input[str] vdomparam: Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _SystemObjectTaggingState.__new__(_SystemObjectTaggingState)

        __props__.__dict__["address"] = address
        __props__.__dict__["category"] = category
        __props__.__dict__["color"] = color
        __props__.__dict__["device"] = device
        __props__.__dict__["dynamic_sort_subtable"] = dynamic_sort_subtable
        __props__.__dict__["interface"] = interface
        __props__.__dict__["multiple"] = multiple
        __props__.__dict__["tags"] = tags
        __props__.__dict__["vdomparam"] = vdomparam
        return SystemObjectTagging(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter
    def address(self) -> pulumi.Output[str]:
        """
        Address. Valid values: `disable`, `mandatory`, `optional`.
        """
        return pulumi.get(self, "address")

    @property
    @pulumi.getter
    def category(self) -> pulumi.Output[str]:
        """
        Tag Category.
        """
        return pulumi.get(self, "category")

    @property
    @pulumi.getter
    def color(self) -> pulumi.Output[int]:
        """
        Color of icon on the GUI.
        """
        return pulumi.get(self, "color")

    @property
    @pulumi.getter
    def device(self) -> pulumi.Output[str]:
        """
        Device. Valid values: `disable`, `mandatory`, `optional`.
        """
        return pulumi.get(self, "device")

    @property
    @pulumi.getter(name="dynamicSortSubtable")
    def dynamic_sort_subtable(self) -> pulumi.Output[Optional[str]]:
        """
        true or false, set this parameter to true when using dynamic for_each + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
        """
        return pulumi.get(self, "dynamic_sort_subtable")

    @property
    @pulumi.getter
    def interface(self) -> pulumi.Output[str]:
        """
        Interface. Valid values: `disable`, `mandatory`, `optional`.
        """
        return pulumi.get(self, "interface")

    @property
    @pulumi.getter
    def multiple(self) -> pulumi.Output[str]:
        """
        Allow multiple tag selection. Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "multiple")

    @property
    @pulumi.getter
    def tags(self) -> pulumi.Output[Optional[Sequence['outputs.SystemObjectTaggingTag']]]:
        """
        Tags. The structure of `tags` block is documented below.
        """
        return pulumi.get(self, "tags")

    @property
    @pulumi.getter
    def vdomparam(self) -> pulumi.Output[Optional[str]]:
        """
        Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        return pulumi.get(self, "vdomparam")

