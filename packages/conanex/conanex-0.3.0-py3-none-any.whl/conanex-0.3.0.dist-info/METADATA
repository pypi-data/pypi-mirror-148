Metadata-Version: 2.1
Name: conanex
Version: 0.3.0
Summary: Conan Extended C/C++ package manager
Home-page: https://github.com/redradist/conanex
Author: redradist
Author-email: redradist@gmail.com
License: MIT
Keywords: C/C++,package,libraries,developer,manager,dependency,tool,c,c++,cpp
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Developers
Classifier: Topic :: Software Development :: Build Tools
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: conan (>=1.47.0)

## ConanEx - Conan Extended, conan that more decentralize



What it allows ?



Consider the following `conanfile.txt`:



```console

[requires]

poco/1.9.4

flatbuffers/2.0.0 { git = "https://github.com/google/flatbuffers", tag = "v2.0.0" }

CTRE/3.6 { git = "https://github.com/hanickadot/compile-time-regular-expressions" }

```

As you can see in this file we have 2 additional packages with custom url for packages



To use `conanex` use it the same way you use `conan`:

```console

conanex install <path_to_conanfile.txt> -pr=<path_to_profile>

```



If you are using `cmake-conan`:

```cmake

if(NOT EXISTS "${CMAKE_BINARY_DIR}/conan.cmake")

    message(STATUS "Downloading conan.cmake from https://github.com/conan-io/cmake-conan")

    file(DOWNLOAD "https://raw.githubusercontent.com/conan-io/cmake-conan/0.18.1/conan.cmake"

         "${CMAKE_BINARY_DIR}/conan.cmake"

         TLS_VERIFY ON)

endif()



include(${CMAKE_BINARY_DIR}/conan.cmake)



set(CONAN_COMMAND conanex)

conan_cmake_autodetect(settings)

conan_cmake_install(PATH_OR_REFERENCE ${CMAKE_CURRENT_LIST_DIR}

                    BUILD missing

                    REMOTE conancenter

                    SETTINGS ${settings})

```

Only thing you need is to specify `set(CONAN_COMMAND conanex)` before any conan command

