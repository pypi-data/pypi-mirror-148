# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: main.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\nmain.proto\x12\x05nnext\"\xe1\x02\n\x08Metadata\x12\x11\n\x07_double\x18\x01 \x01(\x01H\x00\x12\x10\n\x06_float\x18\x02 \x01(\x02H\x00\x12\x10\n\x06_int32\x18\x03 \x01(\x05H\x00\x12\x10\n\x06_int64\x18\x04 \x01(\x03H\x00\x12\x11\n\x07_uint32\x18\x05 \x01(\rH\x00\x12\x11\n\x07_uint64\x18\x06 \x01(\x04H\x00\x12\x11\n\x07_sint32\x18\x07 \x01(\x11H\x00\x12\x11\n\x07_sint64\x18\x08 \x01(\x12H\x00\x12\x12\n\x08_fixed32\x18\t \x01(\x07H\x00\x12\x12\n\x08_fixed64\x18\n \x01(\x06H\x00\x12\x13\n\t_sfixed32\x18\x0b \x01(\x0fH\x00\x12\x13\n\t_sfixed64\x18\x0c \x01(\x10H\x00\x12\x0f\n\x05_bool\x18\r \x01(\x08H\x00\x12\x11\n\x07_string\x18\x0e \x01(\tH\x00\x12\x10\n\x06_bytes\x18\x0f \x01(\x0cH\x00\x12\x0c\n\x04name\x18\x10 \x01(\t\x12\x1d\n\x04type\x18\x11 \x01(\x0e\x32\x0f.nnext.DataTypeB\x0b\n\tmetafield\"a\n\nSchemaItem\x12\x1d\n\x04type\x18\x01 \x01(\x0e\x32\x0f.nnext.DataType\x12\x12\n\nis_primary\x18\x02 \x01(\x08\x12\x12\n\nis_indexed\x18\x03 \x01(\x08\x12\x0c\n\x04name\x18\x04 \x01(\t\"6\n\x06Schema\x12,\n\x11rptd__schema_item\x18\x02 \x03(\x0b\x32\x11.nnext.SchemaItem\"R\n\x05\x44\x61tum\x12\n\n\x02id\x18\x01 \x01(\t\x12\x14\n\x0crptd__vector\x18\x02 \x03(\x02\x12\'\n\x0erptd__metadata\x18\x03 \x03(\x0b\x32\x0f.nnext.Metadata\"\x18\n\x08\x44\x61taList\x12\x0c\n\x04\x64\x61ta\x18\x01 \x03(\x02\"\x1f\n\x06Vector\x12\x15\n\rrptd__element\x18\x01 \x03(\x02\"1\n\nVectorList\x12#\n\x0crptd__vector\x18\x01 \x03(\x0b\x32\r.nnext.Vector\"\xd3\x01\n\x05Index\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x0c\n\x04\x64ims\x18\x02 \x01(\r\x12)\n\nindex_type\x18\x03 \x01(\x0e\x32\x10.nnext.IndexTypeH\x00\x88\x01\x01\x12&\n\x06metric\x18\x04 \x01(\x0e\x32\x11.nnext.MetricTypeH\x01\x88\x01\x01\x12\x12\n\nis_trained\x18\x05 \x01(\x08\x12\x0e\n\x06ntotal\x18\x06 \x01(\x04\x12\x1d\n\x06schema\x18\x07 \x01(\x0b\x32\r.nnext.SchemaB\r\n\x0b_index_typeB\t\n\x07_metric\"*\n\tIndexList\x12\x1d\n\x07indices\x18\x01 \x03(\x0b\x32\x0c.nnext.Index\"w\n\x08IndexMap\x12-\n\x07indices\x18\x01 \x03(\x0b\x32\x1c.nnext.IndexMap.IndicesEntry\x1a<\n\x0cIndicesEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\x1b\n\x05value\x18\x02 \x01(\x0b\x32\x0c.nnext.Index:\x02\x38\x01\"\xa7\x01\n\x05IdMap\x12\"\n\x03idx\x18\x01 \x03(\x0b\x32\x15.nnext.IdMap.IdxEntry\x12\"\n\x03inv\x18\x02 \x03(\x0b\x32\x15.nnext.IdMap.InvEntry\x1a*\n\x08IdxEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x03:\x02\x38\x01\x1a*\n\x08InvEntry\x12\x0b\n\x03key\x18\x01 \x01(\x03\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\x8e\x01\n\x12\x43reateIndexRequest\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x0c\n\x04\x64ims\x18\x02 \x01(\x05\x12$\n\nindex_type\x18\x03 \x01(\x0e\x32\x10.nnext.IndexType\x12&\n\x0bmetric_type\x18\x04 \x01(\x0e\x32\x11.nnext.MetricType\x12\x0e\n\x06schema\x18\x05 \x01(\t\"2\n\x13\x43reateIndexResponse\x12\x1b\n\x05index\x18\x01 \x01(\x0b\x32\x0c.nnext.Index\"Q\n\x12ListIndicesRequest\x12\x0f\n\x07pattern\x18\x01 \x01(\t\x12\x0e\n\x06offset\x18\x02 \x01(\r\x12\x0c\n\x04size\x18\x03 \x01(\r\x12\x0c\n\x04\x64ims\x18\x04 \x01(\r\"C\n\x13ListIndicesResponse\x12\x1d\n\x07indices\x18\x01 \x03(\x0b\x32\x0c.nnext.Index\x12\r\n\x05total\x18\x02 \x01(\r\" \n\x10\x44ropIndexRequest\x12\x0c\n\x04name\x18\x01 \x01(\t\"0\n\x11\x44ropIndexResponse\x12\x1b\n\x05index\x18\x01 \x01(\x0b\x32\x0c.nnext.Index\"m\n\x10VectorAddRequest\x12\x12\n\nindex_name\x18\x01 \x01(\t\x12\x13\n\x0bheader_cols\x18\x02 \x01(\t\x12\x14\n\x0cheader_types\x18\x03 \x01(\t\x12\x1a\n\x04\x64\x61ta\x18\x04 \x03(\x0b\x32\x0c.nnext.Datum\">\n\x11VectorAddResponse\x12\x1a\n\x04\x64\x61ta\x18\x01 \x03(\x0b\x32\x0c.nnext.Datum\x12\r\n\x05total\x18\x02 \x01(\x04\"\x9b\x01\n\x13VectorSearchRequest\x12\x12\n\nindex_name\x18\x01 \x01(\t\x12(\n\x11rptd_query_vector\x18\x02 \x03(\x0b\x32\r.nnext.Vector\x12\t\n\x01k\x18\x03 \x01(\r\x12\x0f\n\x07\x66ilters\x18\x04 \x01(\t\x12\x13\n\x0bomit_vector\x18\x05 \x01(\x08\x12\x15\n\romit_metadata\x18\x06 \x01(\x08\"W\n\x14VectorSearchResponse\x12\x0c\n\x04page\x18\x01 \x01(\t\x12\x0e\n\x06ntotal\x18\x02 \x01(\x04\x12!\n\x0brptd__datum\x18\x03 \x03(\x0b\x32\x0c.nnext.Datum\"B\n\x10VectorGetRequest\x12\x1a\n\x04\x64\x61ta\x18\x01 \x03(\x0b\x32\x0c.nnext.Datum\x12\x12\n\nindex_name\x18\x02 \x01(\t\"/\n\x11VectorGetResponse\x12\x1a\n\x04\x64\x61ta\x18\x02 \x03(\x0b\x32\x0c.nnext.Datum\"1\n\x13VectorDeleteRequest\x12\x1a\n\x04\x64\x61ta\x18\x01 \x03(\x0b\x32\x0c.nnext.Datum\"2\n\x14VectorDeleteResponse\x12\x1a\n\x04\x64\x61ta\x18\x02 \x03(\x0b\x32\x0c.nnext.Datum\"0\n\x12VectorClearRequest\x12\x1a\n\x04\x64\x61ta\x18\x01 \x03(\x0b\x32\x0c.nnext.Datum\"1\n\x13VectorClearResponse\x12\x1a\n\x04\x64\x61ta\x18\x02 \x03(\x0b\x32\x0c.nnext.Datum*(\n\tIndexType\x12\x10\n\x0c\x41PPROXIMATED\x10\x00\x12\t\n\x05\x45XACT\x10\x01*9\n\nMetricType\x12\r\n\tEUCLIDEAN\x10\x00\x12\r\n\tMANHATTAN\x10\x01\x12\r\n\tCHEBYSHEV\x10\x02*E\n\x08\x44\x61taType\x12\x0b\n\x07unknown\x10\x00\x12\n\n\x06\x64ouble\x10\x01\x12\t\n\x05\x66loat\x10\x02\x12\t\n\x05int32\x10\x03\x12\n\n\x06string\x10\x04\x32\xb3\x04\n\x05NNext\x12+\n\x0b\x43reateIndex\x12\x0c.nnext.Index\x1a\x0c.nnext.Index\"\x00\x12\x46\n\x0bListIndices\x12\x19.nnext.ListIndicesRequest\x1a\x1a.nnext.ListIndicesResponse\"\x00\x12)\n\tDropIndex\x12\x0c.nnext.Index\x1a\x0c.nnext.Index\"\x00\x12(\n\x08GetIndex\x12\x0c.nnext.Index\x1a\x0c.nnext.Index\"\x00\x12@\n\tVectorAdd\x12\x17.nnext.VectorAddRequest\x1a\x18.nnext.VectorAddResponse\"\x00\x12@\n\tVectorGet\x12\x17.nnext.VectorGetRequest\x1a\x18.nnext.VectorGetResponse\"\x00\x12I\n\x0cVectorSearch\x12\x1a.nnext.VectorSearchRequest\x1a\x1b.nnext.VectorSearchResponse\"\x00\x12I\n\x0cVectorDelete\x12\x1a.nnext.VectorDeleteRequest\x1a\x1b.nnext.VectorDeleteResponse\"\x00\x12\x46\n\x0bVectorClear\x12\x19.nnext.VectorClearRequest\x1a\x1a.nnext.VectorClearResponse\"\x00\x42)\n\rai.nnext.mainB\x0eNNextMainProtoP\x01\xa2\x02\x05NNextb\x06proto3')

_INDEXTYPE = DESCRIPTOR.enum_types_by_name['IndexType']
IndexType = enum_type_wrapper.EnumTypeWrapper(_INDEXTYPE)
_METRICTYPE = DESCRIPTOR.enum_types_by_name['MetricType']
MetricType = enum_type_wrapper.EnumTypeWrapper(_METRICTYPE)
_DATATYPE = DESCRIPTOR.enum_types_by_name['DataType']
DataType = enum_type_wrapper.EnumTypeWrapper(_DATATYPE)
APPROXIMATED = 0
EXACT = 1
EUCLIDEAN = 0
MANHATTAN = 1
CHEBYSHEV = 2
unknown = 0
double = 1
float = 2
int32 = 3
string = 4


_METADATA = DESCRIPTOR.message_types_by_name['Metadata']
_SCHEMAITEM = DESCRIPTOR.message_types_by_name['SchemaItem']
_SCHEMA = DESCRIPTOR.message_types_by_name['Schema']
_DATUM = DESCRIPTOR.message_types_by_name['Datum']
_DATALIST = DESCRIPTOR.message_types_by_name['DataList']
_VECTOR = DESCRIPTOR.message_types_by_name['Vector']
_VECTORLIST = DESCRIPTOR.message_types_by_name['VectorList']
_INDEX = DESCRIPTOR.message_types_by_name['Index']
_INDEXLIST = DESCRIPTOR.message_types_by_name['IndexList']
_INDEXMAP = DESCRIPTOR.message_types_by_name['IndexMap']
_INDEXMAP_INDICESENTRY = _INDEXMAP.nested_types_by_name['IndicesEntry']
_IDMAP = DESCRIPTOR.message_types_by_name['IdMap']
_IDMAP_IDXENTRY = _IDMAP.nested_types_by_name['IdxEntry']
_IDMAP_INVENTRY = _IDMAP.nested_types_by_name['InvEntry']
_CREATEINDEXREQUEST = DESCRIPTOR.message_types_by_name['CreateIndexRequest']
_CREATEINDEXRESPONSE = DESCRIPTOR.message_types_by_name['CreateIndexResponse']
_LISTINDICESREQUEST = DESCRIPTOR.message_types_by_name['ListIndicesRequest']
_LISTINDICESRESPONSE = DESCRIPTOR.message_types_by_name['ListIndicesResponse']
_DROPINDEXREQUEST = DESCRIPTOR.message_types_by_name['DropIndexRequest']
_DROPINDEXRESPONSE = DESCRIPTOR.message_types_by_name['DropIndexResponse']
_VECTORADDREQUEST = DESCRIPTOR.message_types_by_name['VectorAddRequest']
_VECTORADDRESPONSE = DESCRIPTOR.message_types_by_name['VectorAddResponse']
_VECTORSEARCHREQUEST = DESCRIPTOR.message_types_by_name['VectorSearchRequest']
_VECTORSEARCHRESPONSE = DESCRIPTOR.message_types_by_name['VectorSearchResponse']
_VECTORGETREQUEST = DESCRIPTOR.message_types_by_name['VectorGetRequest']
_VECTORGETRESPONSE = DESCRIPTOR.message_types_by_name['VectorGetResponse']
_VECTORDELETEREQUEST = DESCRIPTOR.message_types_by_name['VectorDeleteRequest']
_VECTORDELETERESPONSE = DESCRIPTOR.message_types_by_name['VectorDeleteResponse']
_VECTORCLEARREQUEST = DESCRIPTOR.message_types_by_name['VectorClearRequest']
_VECTORCLEARRESPONSE = DESCRIPTOR.message_types_by_name['VectorClearResponse']
Metadata = _reflection.GeneratedProtocolMessageType('Metadata', (_message.Message,), {
  'DESCRIPTOR' : _METADATA,
  '__module__' : 'main_pb2'
  # @@protoc_insertion_point(class_scope:nnext.Metadata)
  })
_sym_db.RegisterMessage(Metadata)

SchemaItem = _reflection.GeneratedProtocolMessageType('SchemaItem', (_message.Message,), {
  'DESCRIPTOR' : _SCHEMAITEM,
  '__module__' : 'main_pb2'
  # @@protoc_insertion_point(class_scope:nnext.SchemaItem)
  })
_sym_db.RegisterMessage(SchemaItem)

Schema = _reflection.GeneratedProtocolMessageType('Schema', (_message.Message,), {
  'DESCRIPTOR' : _SCHEMA,
  '__module__' : 'main_pb2'
  # @@protoc_insertion_point(class_scope:nnext.Schema)
  })
_sym_db.RegisterMessage(Schema)

Datum = _reflection.GeneratedProtocolMessageType('Datum', (_message.Message,), {
  'DESCRIPTOR' : _DATUM,
  '__module__' : 'main_pb2'
  # @@protoc_insertion_point(class_scope:nnext.Datum)
  })
_sym_db.RegisterMessage(Datum)

DataList = _reflection.GeneratedProtocolMessageType('DataList', (_message.Message,), {
  'DESCRIPTOR' : _DATALIST,
  '__module__' : 'main_pb2'
  # @@protoc_insertion_point(class_scope:nnext.DataList)
  })
_sym_db.RegisterMessage(DataList)

Vector = _reflection.GeneratedProtocolMessageType('Vector', (_message.Message,), {
  'DESCRIPTOR' : _VECTOR,
  '__module__' : 'main_pb2'
  # @@protoc_insertion_point(class_scope:nnext.Vector)
  })
_sym_db.RegisterMessage(Vector)

VectorList = _reflection.GeneratedProtocolMessageType('VectorList', (_message.Message,), {
  'DESCRIPTOR' : _VECTORLIST,
  '__module__' : 'main_pb2'
  # @@protoc_insertion_point(class_scope:nnext.VectorList)
  })
_sym_db.RegisterMessage(VectorList)

Index = _reflection.GeneratedProtocolMessageType('Index', (_message.Message,), {
  'DESCRIPTOR' : _INDEX,
  '__module__' : 'main_pb2'
  # @@protoc_insertion_point(class_scope:nnext.Index)
  })
_sym_db.RegisterMessage(Index)

IndexList = _reflection.GeneratedProtocolMessageType('IndexList', (_message.Message,), {
  'DESCRIPTOR' : _INDEXLIST,
  '__module__' : 'main_pb2'
  # @@protoc_insertion_point(class_scope:nnext.IndexList)
  })
_sym_db.RegisterMessage(IndexList)

IndexMap = _reflection.GeneratedProtocolMessageType('IndexMap', (_message.Message,), {

  'IndicesEntry' : _reflection.GeneratedProtocolMessageType('IndicesEntry', (_message.Message,), {
    'DESCRIPTOR' : _INDEXMAP_INDICESENTRY,
    '__module__' : 'main_pb2'
    # @@protoc_insertion_point(class_scope:nnext.IndexMap.IndicesEntry)
    })
  ,
  'DESCRIPTOR' : _INDEXMAP,
  '__module__' : 'main_pb2'
  # @@protoc_insertion_point(class_scope:nnext.IndexMap)
  })
_sym_db.RegisterMessage(IndexMap)
_sym_db.RegisterMessage(IndexMap.IndicesEntry)

IdMap = _reflection.GeneratedProtocolMessageType('IdMap', (_message.Message,), {

  'IdxEntry' : _reflection.GeneratedProtocolMessageType('IdxEntry', (_message.Message,), {
    'DESCRIPTOR' : _IDMAP_IDXENTRY,
    '__module__' : 'main_pb2'
    # @@protoc_insertion_point(class_scope:nnext.IdMap.IdxEntry)
    })
  ,

  'InvEntry' : _reflection.GeneratedProtocolMessageType('InvEntry', (_message.Message,), {
    'DESCRIPTOR' : _IDMAP_INVENTRY,
    '__module__' : 'main_pb2'
    # @@protoc_insertion_point(class_scope:nnext.IdMap.InvEntry)
    })
  ,
  'DESCRIPTOR' : _IDMAP,
  '__module__' : 'main_pb2'
  # @@protoc_insertion_point(class_scope:nnext.IdMap)
  })
_sym_db.RegisterMessage(IdMap)
_sym_db.RegisterMessage(IdMap.IdxEntry)
_sym_db.RegisterMessage(IdMap.InvEntry)

CreateIndexRequest = _reflection.GeneratedProtocolMessageType('CreateIndexRequest', (_message.Message,), {
  'DESCRIPTOR' : _CREATEINDEXREQUEST,
  '__module__' : 'main_pb2'
  # @@protoc_insertion_point(class_scope:nnext.CreateIndexRequest)
  })
_sym_db.RegisterMessage(CreateIndexRequest)

CreateIndexResponse = _reflection.GeneratedProtocolMessageType('CreateIndexResponse', (_message.Message,), {
  'DESCRIPTOR' : _CREATEINDEXRESPONSE,
  '__module__' : 'main_pb2'
  # @@protoc_insertion_point(class_scope:nnext.CreateIndexResponse)
  })
_sym_db.RegisterMessage(CreateIndexResponse)

ListIndicesRequest = _reflection.GeneratedProtocolMessageType('ListIndicesRequest', (_message.Message,), {
  'DESCRIPTOR' : _LISTINDICESREQUEST,
  '__module__' : 'main_pb2'
  # @@protoc_insertion_point(class_scope:nnext.ListIndicesRequest)
  })
_sym_db.RegisterMessage(ListIndicesRequest)

ListIndicesResponse = _reflection.GeneratedProtocolMessageType('ListIndicesResponse', (_message.Message,), {
  'DESCRIPTOR' : _LISTINDICESRESPONSE,
  '__module__' : 'main_pb2'
  # @@protoc_insertion_point(class_scope:nnext.ListIndicesResponse)
  })
_sym_db.RegisterMessage(ListIndicesResponse)

DropIndexRequest = _reflection.GeneratedProtocolMessageType('DropIndexRequest', (_message.Message,), {
  'DESCRIPTOR' : _DROPINDEXREQUEST,
  '__module__' : 'main_pb2'
  # @@protoc_insertion_point(class_scope:nnext.DropIndexRequest)
  })
_sym_db.RegisterMessage(DropIndexRequest)

DropIndexResponse = _reflection.GeneratedProtocolMessageType('DropIndexResponse', (_message.Message,), {
  'DESCRIPTOR' : _DROPINDEXRESPONSE,
  '__module__' : 'main_pb2'
  # @@protoc_insertion_point(class_scope:nnext.DropIndexResponse)
  })
_sym_db.RegisterMessage(DropIndexResponse)

VectorAddRequest = _reflection.GeneratedProtocolMessageType('VectorAddRequest', (_message.Message,), {
  'DESCRIPTOR' : _VECTORADDREQUEST,
  '__module__' : 'main_pb2'
  # @@protoc_insertion_point(class_scope:nnext.VectorAddRequest)
  })
_sym_db.RegisterMessage(VectorAddRequest)

VectorAddResponse = _reflection.GeneratedProtocolMessageType('VectorAddResponse', (_message.Message,), {
  'DESCRIPTOR' : _VECTORADDRESPONSE,
  '__module__' : 'main_pb2'
  # @@protoc_insertion_point(class_scope:nnext.VectorAddResponse)
  })
_sym_db.RegisterMessage(VectorAddResponse)

VectorSearchRequest = _reflection.GeneratedProtocolMessageType('VectorSearchRequest', (_message.Message,), {
  'DESCRIPTOR' : _VECTORSEARCHREQUEST,
  '__module__' : 'main_pb2'
  # @@protoc_insertion_point(class_scope:nnext.VectorSearchRequest)
  })
_sym_db.RegisterMessage(VectorSearchRequest)

VectorSearchResponse = _reflection.GeneratedProtocolMessageType('VectorSearchResponse', (_message.Message,), {
  'DESCRIPTOR' : _VECTORSEARCHRESPONSE,
  '__module__' : 'main_pb2'
  # @@protoc_insertion_point(class_scope:nnext.VectorSearchResponse)
  })
_sym_db.RegisterMessage(VectorSearchResponse)

VectorGetRequest = _reflection.GeneratedProtocolMessageType('VectorGetRequest', (_message.Message,), {
  'DESCRIPTOR' : _VECTORGETREQUEST,
  '__module__' : 'main_pb2'
  # @@protoc_insertion_point(class_scope:nnext.VectorGetRequest)
  })
_sym_db.RegisterMessage(VectorGetRequest)

VectorGetResponse = _reflection.GeneratedProtocolMessageType('VectorGetResponse', (_message.Message,), {
  'DESCRIPTOR' : _VECTORGETRESPONSE,
  '__module__' : 'main_pb2'
  # @@protoc_insertion_point(class_scope:nnext.VectorGetResponse)
  })
_sym_db.RegisterMessage(VectorGetResponse)

VectorDeleteRequest = _reflection.GeneratedProtocolMessageType('VectorDeleteRequest', (_message.Message,), {
  'DESCRIPTOR' : _VECTORDELETEREQUEST,
  '__module__' : 'main_pb2'
  # @@protoc_insertion_point(class_scope:nnext.VectorDeleteRequest)
  })
_sym_db.RegisterMessage(VectorDeleteRequest)

VectorDeleteResponse = _reflection.GeneratedProtocolMessageType('VectorDeleteResponse', (_message.Message,), {
  'DESCRIPTOR' : _VECTORDELETERESPONSE,
  '__module__' : 'main_pb2'
  # @@protoc_insertion_point(class_scope:nnext.VectorDeleteResponse)
  })
_sym_db.RegisterMessage(VectorDeleteResponse)

VectorClearRequest = _reflection.GeneratedProtocolMessageType('VectorClearRequest', (_message.Message,), {
  'DESCRIPTOR' : _VECTORCLEARREQUEST,
  '__module__' : 'main_pb2'
  # @@protoc_insertion_point(class_scope:nnext.VectorClearRequest)
  })
_sym_db.RegisterMessage(VectorClearRequest)

VectorClearResponse = _reflection.GeneratedProtocolMessageType('VectorClearResponse', (_message.Message,), {
  'DESCRIPTOR' : _VECTORCLEARRESPONSE,
  '__module__' : 'main_pb2'
  # @@protoc_insertion_point(class_scope:nnext.VectorClearResponse)
  })
_sym_db.RegisterMessage(VectorClearResponse)

_NNEXT = DESCRIPTOR.services_by_name['NNext']
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'\n\rai.nnext.mainB\016NNextMainProtoP\001\242\002\005NNext'
  _INDEXMAP_INDICESENTRY._options = None
  _INDEXMAP_INDICESENTRY._serialized_options = b'8\001'
  _IDMAP_IDXENTRY._options = None
  _IDMAP_IDXENTRY._serialized_options = b'8\001'
  _IDMAP_INVENTRY._options = None
  _IDMAP_INVENTRY._serialized_options = b'8\001'
  _INDEXTYPE._serialized_start=2451
  _INDEXTYPE._serialized_end=2491
  _METRICTYPE._serialized_start=2493
  _METRICTYPE._serialized_end=2550
  _DATATYPE._serialized_start=2552
  _DATATYPE._serialized_end=2621
  _METADATA._serialized_start=22
  _METADATA._serialized_end=375
  _SCHEMAITEM._serialized_start=377
  _SCHEMAITEM._serialized_end=474
  _SCHEMA._serialized_start=476
  _SCHEMA._serialized_end=530
  _DATUM._serialized_start=532
  _DATUM._serialized_end=614
  _DATALIST._serialized_start=616
  _DATALIST._serialized_end=640
  _VECTOR._serialized_start=642
  _VECTOR._serialized_end=673
  _VECTORLIST._serialized_start=675
  _VECTORLIST._serialized_end=724
  _INDEX._serialized_start=727
  _INDEX._serialized_end=938
  _INDEXLIST._serialized_start=940
  _INDEXLIST._serialized_end=982
  _INDEXMAP._serialized_start=984
  _INDEXMAP._serialized_end=1103
  _INDEXMAP_INDICESENTRY._serialized_start=1043
  _INDEXMAP_INDICESENTRY._serialized_end=1103
  _IDMAP._serialized_start=1106
  _IDMAP._serialized_end=1273
  _IDMAP_IDXENTRY._serialized_start=1187
  _IDMAP_IDXENTRY._serialized_end=1229
  _IDMAP_INVENTRY._serialized_start=1231
  _IDMAP_INVENTRY._serialized_end=1273
  _CREATEINDEXREQUEST._serialized_start=1276
  _CREATEINDEXREQUEST._serialized_end=1418
  _CREATEINDEXRESPONSE._serialized_start=1420
  _CREATEINDEXRESPONSE._serialized_end=1470
  _LISTINDICESREQUEST._serialized_start=1472
  _LISTINDICESREQUEST._serialized_end=1553
  _LISTINDICESRESPONSE._serialized_start=1555
  _LISTINDICESRESPONSE._serialized_end=1622
  _DROPINDEXREQUEST._serialized_start=1624
  _DROPINDEXREQUEST._serialized_end=1656
  _DROPINDEXRESPONSE._serialized_start=1658
  _DROPINDEXRESPONSE._serialized_end=1706
  _VECTORADDREQUEST._serialized_start=1708
  _VECTORADDREQUEST._serialized_end=1817
  _VECTORADDRESPONSE._serialized_start=1819
  _VECTORADDRESPONSE._serialized_end=1881
  _VECTORSEARCHREQUEST._serialized_start=1884
  _VECTORSEARCHREQUEST._serialized_end=2039
  _VECTORSEARCHRESPONSE._serialized_start=2041
  _VECTORSEARCHRESPONSE._serialized_end=2128
  _VECTORGETREQUEST._serialized_start=2130
  _VECTORGETREQUEST._serialized_end=2196
  _VECTORGETRESPONSE._serialized_start=2198
  _VECTORGETRESPONSE._serialized_end=2245
  _VECTORDELETEREQUEST._serialized_start=2247
  _VECTORDELETEREQUEST._serialized_end=2296
  _VECTORDELETERESPONSE._serialized_start=2298
  _VECTORDELETERESPONSE._serialized_end=2348
  _VECTORCLEARREQUEST._serialized_start=2350
  _VECTORCLEARREQUEST._serialized_end=2398
  _VECTORCLEARRESPONSE._serialized_start=2400
  _VECTORCLEARRESPONSE._serialized_end=2449
  _NNEXT._serialized_start=2624
  _NNEXT._serialized_end=3187
# @@protoc_insertion_point(module_scope)
