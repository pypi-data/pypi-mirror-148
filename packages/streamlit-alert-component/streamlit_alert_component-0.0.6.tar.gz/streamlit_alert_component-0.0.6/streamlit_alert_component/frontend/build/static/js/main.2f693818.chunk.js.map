{"version":3,"sources":["CustomAlert.jsx","AlertComponent.jsx","index.tsx"],"names":["useStyles","makeStyles","snackbar","width","paddingRight","CustomAlert","props","alert","component","title","handleClose","reason","setOpen","type","data","outData","Object","assign","isStreamlitMessage","window","parent","postMessage","sendMessageToStreamlitClient","height","useState","open","classes","close","style","AlertTitle","Alert","onClose","variant","severity","message","Snackbar","root","anchorOrigin","vertical","horizontal","sx","styles","createStyles","paddingTop","backgroundColor","AlertComponent","render","args","className","StreamlitComponentBase","withStreamlitConnection","withStyles","ReactDOM","StrictMode","document","getElementById"],"mappings":"uTAOMA,EAAYC,YAAW,CACzBC,SAAU,iBAAO,CACbC,MAAO,OACPC,aAAc,MAYP,SAASC,EAAYC,GAChC,IASIC,EAEAC,EACAC,EAZEC,EAAc,SAACC,GACF,cAAXA,IAGJC,GAAQ,GAbhB,SAAsCC,EAAMC,GACxC,IAAIC,EAAUC,OAAOC,OAAO,CACxBC,oBAAoB,EACpBL,KAAMA,GACPC,GACHK,OAAOC,OAAOC,YAAYN,EAAS,KAS/BO,CAA6B,2BAA4B,CAAEC,OAAQ,MAGvE,EAAwBC,oBAAS,GAAjC,mBAAOC,EAAP,KAAab,EAAb,KAEIV,EAAW,KAMTwB,EAAU1B,EAFG,IAGb2B,EAAQrB,EAAMJ,SAAWQ,EAAc,KACzCkB,EAAQ,GAuBZ,OArBAnB,EAAQ,kBAACoB,EAAA,EAAD,KAAavB,EAAMG,OAC3BF,EACI,kBAACuB,EAAA,EAAD,CAAOC,QAASJ,EAAOK,QAAS1B,EAAM0B,QAASC,SAAU3B,EAAM2B,UAC1DxB,EACAH,EAAM4B,SAIX5B,EAAMJ,WACN0B,EAAQ,CAAEL,OAAQ,IAClBrB,EACI,kBAACiC,EAAA,EAAD,CAAUV,KAAMA,EAAMM,QAASrB,EAAagB,QAAS,CAAEU,KAAMV,EAAQxB,UAAYmC,aAAc,CAAEC,SAAU,SAAUC,WAAY,WAC7H,kBAACT,EAAA,EAAD,CAAOC,QAASJ,EAAOK,QAAS1B,EAAM0B,QAASC,SAAU3B,EAAM2B,SAAUO,GAAI,CAAErC,MAAO,SACjFM,EACAH,EAAM4B,WAKvB1B,EAAYF,EAAMJ,SAAWA,EAAWK,EAGpC,yBAAKqB,MAAOA,GACPpB,GCxDb,IAAMiC,EAASC,aAAa,iBAAO,CACjCN,KAAM,CACJO,WAAY,EACZxC,MAAO,OACPyC,gBAAiB,mBAIfC,E,4MACJC,OAAS,WACP,IAAMpB,EAAY,EAAKpB,MAAjBoB,QAIAQ,EAAU,EAAK5B,MAAMyC,KAAX,QAGVtC,EAAQ,EAAKH,MAAMyC,KAAX,MACRd,EAAW,EAAK3B,MAAMyC,KAAX,SACXf,EAAU,EAAK1B,MAAMyC,KAAX,QACV7C,EAAW,EAAKI,MAAMyC,KAAX,SAEjB,OACE,yBAAKC,UAAWtB,EAAQU,MACtB,kBAAC/B,EAAD,CACEI,MAAOA,EACPyB,QAASA,EACTD,SAAUA,EACVD,QAASA,EACT9B,SAAUA,M,yBArBS+C,KA4BdC,cAAwBC,YAAWV,EAAXU,CAAmBN,IC1C1DO,IAASN,OACP,kBAAC,IAAMO,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.2f693818.chunk.js","sourcesContent":["\nimport React, { useState } from \"react\";\nimport { makeStyles } from \"@mui/styles\";\nimport Snackbar from '@mui/material/Snackbar';\nimport Alert from '@mui/material/Alert'\nimport AlertTitle from '@mui/material/AlertTitle'\n\nconst useStyles = makeStyles({\n    snackbar: () => ({\n        width: \"100%\",\n        paddingRight: 8\n    })\n});\n\nfunction sendMessageToStreamlitClient(type, data) {\n    var outData = Object.assign({\n        isStreamlitMessage: true,\n        type: type,\n    }, data);\n    window.parent.postMessage(outData, \"*\");\n}\n\nexport default function CustomAlert(props) {\n    const handleClose = (reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        setOpen(false)\n        sendMessageToStreamlitClient(\"streamlit:setFrameHeight\", { height: 0 });\n    };\n\n    const [open, setOpen] = useState(true);\n    let alert = null;\n    let snackbar = null;\n    let component = null;\n    let title = null;\n\n    const styleProps = {\n    };\n    const classes = useStyles(styleProps);\n    const close = props.snackbar ? handleClose : null\n    let style = {}\n\n    title = <AlertTitle>{props.title}</AlertTitle>\n    alert = (\n        <Alert onClose={close} variant={props.variant} severity={props.severity}>\n            {title}\n            {props.message}\n        </Alert>\n    )\n\n    if (props.snackbar) {\n        style = { height: 80 }\n        snackbar = (\n            <Snackbar open={open} onClose={handleClose} classes={{ root: classes.snackbar }} anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}>\n                <Alert onClose={close} variant={props.variant} severity={props.severity} sx={{ width: '100%' }}>\n                    {title}\n                    {props.message}\n                </Alert>\n            </Snackbar>\n        )\n    }\n    component = props.snackbar ? snackbar : alert\n\n    return (\n        <div style={style}>\n            {component}\n        </div >\n    )\n}","import {\n  StreamlitComponentBase,\n  withStreamlitConnection,\n} from \"streamlit-component-lib\"\n\nimport React from \"react\";\nimport { withStyles, createStyles } from \"@mui/styles\"\nimport CustomAlert from './CustomAlert';\n\n\nconst styles = createStyles(() => ({\n  root: {\n    paddingTop: 1,\n    width: \"100%\",\n    backgroundColor: \"transparent\",\n  },\n}))\n\nclass AlertComponent extends StreamlitComponentBase {\n  render = () => {\n    let { classes } = this.props\n\n\n    // Default Args\n    const message = this.props.args[\"message\"]\n\n    // Optional Args\n    const title = this.props.args[\"title\"]\n    const severity = this.props.args[\"severity\"]\n    const variant = this.props.args[\"variant\"]\n    const snackbar = this.props.args[\"snackbar\"]\n\n    return (\n      <div className={classes.root} >\n        <CustomAlert\n          title={title}\n          message={message}\n          severity={severity}\n          variant={variant}\n          snackbar={snackbar}\n        >\n        </CustomAlert>\n      </div>\n    )\n  }\n}\nexport default withStreamlitConnection(withStyles(styles)(AlertComponent))","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport AlertComponent from \"./AlertComponent\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <AlertComponent />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}