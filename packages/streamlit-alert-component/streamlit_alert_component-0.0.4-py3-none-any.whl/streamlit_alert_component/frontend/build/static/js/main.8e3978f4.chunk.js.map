{"version":3,"sources":["AlertComponent.tsx","index.tsx"],"names":["AlertComponent","props","render","handleClose","event","reason","setState","open","style","height","type","data","outData","Object","assign","isStreamlitMessage","window","parent","postMessage","sendMessageToStreamlitClient","title","args","message","severity","variant","snackbar","isFirstSnackbar","paddingFromTop","title_part","AlertTitle","component","Alert","Snackbar","state","onClose","anchorOrigin","vertical","horizontal","sx","width","StreamlitComponentBase","withStreamlitConnection","ReactDOM","StrictMode","document","getElementById"],"mappings":"qRAkBMA,E,kDACJ,WAAYC,GAAa,IAAD,8BACtB,cAAMA,IAIDC,OAAS,WACd,IAAMC,EAAc,SAACC,EAAsCC,GAC1C,cAAXA,IAGJ,EAAKC,SAAS,CAAEC,MAAM,IACtBC,EAAQ,CACNC,OAAQ,GArBhB,SAAsCC,EAAWC,GAC/C,IAAIC,EAAUC,OAAOC,OAAO,CAC1BC,oBAAoB,EACpBL,KAAMA,GACLC,GACHK,OAAOC,OAAOC,YAAYN,EAAS,KAkB/BO,CAA6B,2BAA4B,CAAEV,OAAQ,MAI/DW,EAAQ,EAAKnB,MAAMoB,KAAX,MACRC,EAAU,EAAKrB,MAAMoB,KAAX,QACVE,EAAW,EAAKtB,MAAMoB,KAAX,SACXG,EAAU,EAAKvB,MAAMoB,KAAX,QACVI,EAAW,EAAKxB,MAAMoB,KAAX,SACXK,EAAkB,EAAKzB,MAAMoB,KAAX,kBAClBM,EAAiB,EAAK1B,MAAMoB,KAAX,iBAEnBO,EAAa,KACJ,MAATR,IACFQ,EAAa,kBAACC,EAAA,EAAD,KAAaT,IAE5B,IAAIU,EAAY,KACZtB,EAAQ,GAuCZ,OApCiB,IAAbiB,EACFK,EACE,kBAACC,EAAA,EAAD,CAAOP,QAASA,EAASD,SAAUA,GAChCK,EACAN,GAKDI,GACFlB,EAAQ,CACNC,OAAQkB,GAGVG,EACE,kBAACE,EAAA,EAAD,CAAUzB,KAAM,EAAK0B,MAAM1B,KAAM2B,QAAS/B,EAAagC,aAAc,CAAEC,SAAU,SAAUC,WAAY,UACrG,kBAACN,EAAA,EAAD,CAAOG,QAAS/B,EAAaqB,QAASA,EAASD,SAAUA,EAAUe,GAAI,CAAEC,MAAO,SAC7EX,EACAN,MAKPd,EAAQ,CACNC,OAAQ,KAEVqB,EACE,kBAACE,EAAA,EAAD,CAAUzB,KAAM,EAAK0B,MAAM1B,KAAM2B,QAAS/B,EAAagC,aAAc,CAAEC,SAAU,MAAOC,WAAY,UAClG,kBAACN,EAAA,EAAD,CAAOG,QAAS/B,EAAaqB,QAASA,EAASD,SAAUA,EAAUe,GAAI,CAAEC,MAAO,SAC7EX,EACAN,KAOT,yBAAKd,MAAOA,GACTsB,IAtEL,EAAKG,MAAQ,CAAE1B,MAAM,GAFC,E,uBADGiC,KA8EdC,cAAyBzC,GC5FxC0C,IAASxC,OACP,kBAAC,IAAMyC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.8e3978f4.chunk.js","sourcesContent":["import {\n  StreamlitComponentBase,\n  withStreamlitConnection,\n} from \"streamlit-component-lib\"\n\nimport React, { ReactNode } from \"react\";\nimport AlertTitle from '@mui/material/AlertTitle';\nimport Snackbar from '@mui/material/Snackbar';\nimport Alert from '@mui/material/Alert'\n\nfunction sendMessageToStreamlitClient(type: any, data: any) {\n  var outData = Object.assign({\n    isStreamlitMessage: true,\n    type: type,\n  }, data);\n  window.parent.postMessage(outData, \"*\");\n}\n\nclass AlertComponent extends StreamlitComponentBase<any> {\n  constructor(props: any) {\n    super(props)\n    this.state = { open: true };\n  }\n\n  public render = (): ReactNode => {\n    const handleClose = (event?: React.SyntheticEvent | Event, reason?: string) => {\n      if (reason === 'clickaway') {\n        return;\n      }\n      this.setState({ open: false })\n      style = {\n        height: 0,\n      }\n      sendMessageToStreamlitClient(\"streamlit:setFrameHeight\", { height: 0 });\n    };\n\n\n    const title = this.props.args[\"title\"]\n    const message = this.props.args[\"message\"]\n    const severity = this.props.args[\"severity\"]\n    const variant = this.props.args[\"variant\"]\n    const snackbar = this.props.args[\"snackbar\"]\n    const isFirstSnackbar = this.props.args[\"is_first_snackbar\"]\n    const paddingFromTop = this.props.args[\"padding_from_top\"]\n\n    let title_part = null;\n    if (title != null) {\n      title_part = <AlertTitle>{title}</AlertTitle>\n    }\n    let component = null;\n    let style = {};\n\n\n    if (snackbar === false) {\n      component = (\n        <Alert variant={variant} severity={severity}>\n          {title_part}\n          {message}\n        </Alert>\n      )\n    }\n    else {\n      if (isFirstSnackbar) {\n        style = {\n          height: paddingFromTop,\n        }\n\n        component = (\n          <Snackbar open={this.state.open} onClose={handleClose} anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}>\n            <Alert onClose={handleClose} variant={variant} severity={severity} sx={{ width: '100%' }} >\n              {title_part}\n              {message}\n            </Alert>\n          </Snackbar >\n        )\n      } else {\n        style = {\n          height: 100\n        }\n        component = (\n          <Snackbar open={this.state.open} onClose={handleClose} anchorOrigin={{ vertical: 'top', horizontal: 'right' }}>\n            <Alert onClose={handleClose} variant={variant} severity={severity} sx={{ width: '100%' }} >\n              {title_part}\n              {message}\n            </Alert>\n          </Snackbar >\n        )\n      }\n    }\n    return (\n      <div style={style} >\n        {component}\n      </div>\n    )\n  }\n}\nexport default withStreamlitConnection((AlertComponent))","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport AlertComponent from \"./AlertComponent\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <AlertComponent />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}