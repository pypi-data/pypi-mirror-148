[metadata]
name = sbpy
package_name = sbpy
author = sbpy team
author_email = msk@astro.umd.edu
license = BSD 3-Clause
license_file = LICENSE.rst
url = https://sbpy.org
description = Python module for small-body planetary astronomy
long_description = file: README.rst
long_description_content_type = text/x-rst
edit_on_github = False
github_project = NASA-Planetary-Science/sbpy
keywords = astronomy, astrophysics, planetary, asteroid, comet, space, science
classifiers = 
	Intended Audience :: Science/Research
	License :: OSI Approved :: BSD License
	Programming Language :: C
	Programming Language :: Python :: 3
	Topic :: Scientific/Engineering :: Astronomy
	Topic :: Scientific/Engineering :: Physics

[options]
packages = find:
zip_save = False
python_requires = >=3.7
setup_requires = setuptools_scm
install_requires = 
	numpy>=1.17.0
	astropy>=4.0
	ads>=0.12
	synphot>=1.0
	astroquery>=0.4.5
include_package_data = True

[options.extras_require]
all = 
	scipy
	ginga
	photutils
	pyyaml
test = 
	pytest>=4.6
	pytest-astropy
	pytest-doctestplus
	pytest-remotedata
	pytest-xdist
	coverage
docs = 
	sphinx-astropy>=1.3
	pytest
	matplotlib>=3.0

[options.package_data]
* = *.fits *.csv *.txt

[options.entry_points]
ginga.rv.plugins = 
	cometaryenhancements = sbpy.ginga_plugins:setup_cometaryenhancements

[tool:pytest]
minversion = 4.6
testpaths = "sbpy" "docs"
norecursedirs = 
	"docs[\/]_build"
	"docs[\/]generated"
astropy_header = true
doctest_plus = enabled
text_file_format = rst
addopts = --doctest-rst --doctest-plus --ignore=compile_fieldnames.py
remote_data_strict = true
doctest_norecursedirs = 
	*/setup_package.py

[coverage:run]
omit = 
	sbpy/_astropy_init*
	sbpy/conftest.py
	sbpy/*setup_package*
	sbpy/tests/*
	sbpy/*/tests/*
	sbpy/*/*/tests/*
	sbpy/extern/*
	sbpy/version*
	*/sbpy/_astropy_init*
	*/sbpy/conftest.py
	*/sbpy/*setup_package*
	*/sbpy/tests/*
	*/sbpy/*/tests/*
	*/sbpy/*/*/tests/*
	*/sbpy/extern/*
	*/sbpy/version*

[coverage:report]
exclude_lines = 
	pragma: no cover
	except ImportError
	raise AssertionError
	raise NotImplementedError
	def main\(.*\):
	pragma: py{ignore_python_version}
	def _ipython_key_completions_

[egg_info]
tag_build = 
tag_date = 0

