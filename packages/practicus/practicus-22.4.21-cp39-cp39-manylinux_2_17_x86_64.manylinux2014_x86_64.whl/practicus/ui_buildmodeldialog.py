# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file '/Users/hakan/a2t/pyroot/ui/buildmodeldialog.ui'
#
# Created by: PyQt5 UI code generator 5.15.6
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_build_model_dialog(object):
    def setupUi(self, build_model_dialog):
        build_model_dialog.setObjectName("build_model_dialog")
        build_model_dialog.resize(735, 365)
        build_model_dialog.setWindowTitle("Build AI/ML Model to Predict the Unknown")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(build_model_dialog)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.main_options_grid = QtWidgets.QGridLayout()
        self.main_options_grid.setObjectName("main_options_grid")
        self.model_name_label = QtWidgets.QLabel(build_model_dialog)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.model_name_label.sizePolicy().hasHeightForWidth())
        self.model_name_label.setSizePolicy(sizePolicy)
        self.model_name_label.setText("Model Name:")
        self.model_name_label.setObjectName("model_name_label")
        self.main_options_grid.addWidget(self.model_name_label, 1, 0, 1, 1)
        self.model_name_edit = QtWidgets.QLineEdit(build_model_dialog)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.model_name_edit.sizePolicy().hasHeightForWidth())
        self.model_name_edit.setSizePolicy(sizePolicy)
        self.model_name_edit.setPlaceholderText("Few words on what the model predicts")
        self.model_name_edit.setObjectName("model_name_edit")
        self.main_options_grid.addWidget(self.model_name_edit, 1, 1, 1, 1)
        self.target_help_button = QtWidgets.QToolButton(build_model_dialog)
        self.target_help_button.setToolTip("Target (objective) is the column that you would like to build the model for.\n"
"\n"
"After you build a model based on past data, you can predict the future with unseen data.")
        self.target_help_button.setText("?")
        self.target_help_button.setObjectName("target_help_button")
        self.main_options_grid.addWidget(self.target_help_button, 0, 2, 1, 1)
        self.target_label = QtWidgets.QLabel(build_model_dialog)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.target_label.sizePolicy().hasHeightForWidth())
        self.target_label.setSizePolicy(sizePolicy)
        self.target_label.setText("Target Column:")
        self.target_label.setObjectName("target_label")
        self.main_options_grid.addWidget(self.target_label, 0, 0, 1, 1)
        self.target_combo = QtWidgets.QComboBox(build_model_dialog)
        self.target_combo.setObjectName("target_combo")
        self.main_options_grid.addWidget(self.target_combo, 0, 1, 1, 1)
        self.model_desc_label = QtWidgets.QLabel(build_model_dialog)
        self.model_desc_label.setText("Description:")
        self.model_desc_label.setObjectName("model_desc_label")
        self.main_options_grid.addWidget(self.model_desc_label, 2, 0, 1, 1)
        self.model_desc_text_edit = QtWidgets.QPlainTextEdit(build_model_dialog)
        self.model_desc_text_edit.setMaximumSize(QtCore.QSize(16777215, 120))
        self.model_desc_text_edit.setPlaceholderText("Short description of the model, contact information for others, etc. (optional)")
        self.model_desc_text_edit.setObjectName("model_desc_text_edit")
        self.main_options_grid.addWidget(self.model_desc_text_edit, 2, 1, 1, 1)
        self.verticalLayout_2.addLayout(self.main_options_grid)
        self.advanced_check = QtWidgets.QCheckBox(build_model_dialog)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.advanced_check.sizePolicy().hasHeightForWidth())
        self.advanced_check.setSizePolicy(sizePolicy)
        self.advanced_check.setText("Advanced Options")
        self.advanced_check.setChecked(False)
        self.advanced_check.setObjectName("advanced_check")
        self.verticalLayout_2.addWidget(self.advanced_check)
        self.advanced_frame = QtWidgets.QFrame(build_model_dialog)
        self.advanced_frame.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.advanced_frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.advanced_frame.setObjectName("advanced_frame")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.advanced_frame)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setObjectName("verticalLayout")
        self.advanced_options_grid = QtWidgets.QGridLayout()
        self.advanced_options_grid.setObjectName("advanced_options_grid")
        self.build_full_check = QtWidgets.QCheckBox(self.advanced_frame)
        self.build_full_check.setText("Build full-featured model")
        self.build_full_check.setChecked(True)
        self.build_full_check.setObjectName("build_full_check")
        self.advanced_options_grid.addWidget(self.build_full_check, 0, 3, 1, 1)
        self.training_samples_h_layout = QtWidgets.QHBoxLayout()
        self.training_samples_h_layout.setObjectName("training_samples_h_layout")
        self.training_samples_edit = QtWidgets.QLineEdit(self.advanced_frame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.training_samples_edit.sizePolicy().hasHeightForWidth())
        self.training_samples_edit.setSizePolicy(sizePolicy)
        self.training_samples_edit.setMinimumSize(QtCore.QSize(60, 0))
        self.training_samples_edit.setMaximumSize(QtCore.QSize(60, 16777215))
        self.training_samples_edit.setInputMethodHints(QtCore.Qt.ImhNone)
        self.training_samples_edit.setText("100000")
        self.training_samples_edit.setObjectName("training_samples_edit")
        self.training_samples_h_layout.addWidget(self.training_samples_edit)
        self.training_samples_label2 = QtWidgets.QLabel(self.advanced_frame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.training_samples_label2.sizePolicy().hasHeightForWidth())
        self.training_samples_label2.setSizePolicy(sizePolicy)
        self.training_samples_label2.setText("random rows")
        self.training_samples_label2.setObjectName("training_samples_label2")
        self.training_samples_h_layout.addWidget(self.training_samples_label2)
        self.advanced_options_grid.addLayout(self.training_samples_h_layout, 2, 1, 1, 1)
        self.limit_models_help_button = QtWidgets.QToolButton(self.advanced_frame)
        self.limit_models_help_button.setText("?")
        self.limit_models_help_button.setObjectName("limit_models_help_button")
        self.advanced_options_grid.addWidget(self.limit_models_help_button, 1, 2, 1, 1)
        self.excel_rows_help_button = QtWidgets.QToolButton(self.advanced_frame)
        self.excel_rows_help_button.setText("?")
        self.excel_rows_help_button.setObjectName("excel_rows_help_button")
        self.advanced_options_grid.addWidget(self.excel_rows_help_button, 2, 4, 1, 1)
        self.limit_models_label = QtWidgets.QLabel(self.advanced_frame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.limit_models_label.sizePolicy().hasHeightForWidth())
        self.limit_models_label.setSizePolicy(sizePolicy)
        self.limit_models_label.setText("Limit Models to: ")
        self.limit_models_label.setObjectName("limit_models_label")
        self.advanced_options_grid.addWidget(self.limit_models_label, 1, 0, 1, 1)
        self.training_samples_label = QtWidgets.QLabel(self.advanced_frame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.training_samples_label.sizePolicy().hasHeightForWidth())
        self.training_samples_label.setSizePolicy(sizePolicy)
        self.training_samples_label.setText("Training samples:")
        self.training_samples_label.setObjectName("training_samples_label")
        self.advanced_options_grid.addWidget(self.training_samples_label, 2, 0, 1, 1)
        self.modeling_type_label = QtWidgets.QLabel(self.advanced_frame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.modeling_type_label.sizePolicy().hasHeightForWidth())
        self.modeling_type_label.setSizePolicy(sizePolicy)
        self.modeling_type_label.setText("Modeling Type:")
        self.modeling_type_label.setObjectName("modeling_type_label")
        self.advanced_options_grid.addWidget(self.modeling_type_label, 0, 0, 1, 1)
        self.limit_models_edit = QtWidgets.QLineEdit(self.advanced_frame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.limit_models_edit.sizePolicy().hasHeightForWidth())
        self.limit_models_edit.setSizePolicy(sizePolicy)
        self.limit_models_edit.setPlaceholderText("(optional) dt,lr,..")
        self.limit_models_edit.setObjectName("limit_models_edit")
        self.advanced_options_grid.addWidget(self.limit_models_edit, 1, 1, 1, 1)
        self.modeling_type_help_button = QtWidgets.QToolButton(self.advanced_frame)
        self.modeling_type_help_button.setToolTip("Classification: Predict a class or type, such as an email being spam or not spam. \n"
"\n"
"Regression: Perdict a number, such as sales revenue.")
        self.modeling_type_help_button.setText("?")
        self.modeling_type_help_button.setObjectName("modeling_type_help_button")
        self.advanced_options_grid.addWidget(self.modeling_type_help_button, 0, 2, 1, 1)
        self.training_samples_help_button = QtWidgets.QToolButton(self.advanced_frame)
        self.training_samples_help_button.setText("?")
        self.training_samples_help_button.setObjectName("training_samples_help_button")
        self.advanced_options_grid.addWidget(self.training_samples_help_button, 2, 2, 1, 1)
        self.modeling_type_combo = QtWidgets.QComboBox(self.advanced_frame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.modeling_type_combo.sizePolicy().hasHeightForWidth())
        self.modeling_type_combo.setSizePolicy(sizePolicy)
        self.modeling_type_combo.setCurrentText("Classification")
        self.modeling_type_combo.setObjectName("modeling_type_combo")
        self.modeling_type_combo.addItem("")
        self.modeling_type_combo.setItemText(0, "Classification")
        self.modeling_type_combo.addItem("")
        self.modeling_type_combo.setItemText(1, "Regression")
        self.advanced_options_grid.addWidget(self.modeling_type_combo, 0, 1, 1, 1)
        self.build_full_help_button = QtWidgets.QToolButton(self.advanced_frame)
        self.build_full_help_button.setText("?")
        self.build_full_help_button.setObjectName("build_full_help_button")
        self.advanced_options_grid.addWidget(self.build_full_help_button, 0, 4, 1, 1)
        self.build_excel_help_button = QtWidgets.QToolButton(self.advanced_frame)
        self.build_excel_help_button.setText("?")
        self.build_excel_help_button.setObjectName("build_excel_help_button")
        self.advanced_options_grid.addWidget(self.build_excel_help_button, 1, 4, 1, 1)
        self.excel_rows_h_layout = QtWidgets.QHBoxLayout()
        self.excel_rows_h_layout.setObjectName("excel_rows_h_layout")
        self.build_excel_check = QtWidgets.QCheckBox(self.advanced_frame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.build_excel_check.sizePolicy().hasHeightForWidth())
        self.build_excel_check.setSizePolicy(sizePolicy)
        self.build_excel_check.setText("Build Excel model for")
        self.build_excel_check.setChecked(True)
        self.build_excel_check.setObjectName("build_excel_check")
        self.excel_rows_h_layout.addWidget(self.build_excel_check)
        self.excel_rows_edit = QtWidgets.QLineEdit(self.advanced_frame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.excel_rows_edit.sizePolicy().hasHeightForWidth())
        self.excel_rows_edit.setSizePolicy(sizePolicy)
        self.excel_rows_edit.setMinimumSize(QtCore.QSize(50, 0))
        self.excel_rows_edit.setMaximumSize(QtCore.QSize(50, 16777215))
        self.excel_rows_edit.setText("100")
        self.excel_rows_edit.setObjectName("excel_rows_edit")
        self.excel_rows_h_layout.addWidget(self.excel_rows_edit)
        self.excel_rows_label2 = QtWidgets.QLabel(self.advanced_frame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.excel_rows_label2.sizePolicy().hasHeightForWidth())
        self.excel_rows_label2.setSizePolicy(sizePolicy)
        self.excel_rows_label2.setText("rows")
        self.excel_rows_label2.setObjectName("excel_rows_label2")
        self.excel_rows_h_layout.addWidget(self.excel_rows_label2)
        self.advanced_options_grid.addLayout(self.excel_rows_h_layout, 1, 3, 1, 1)
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.log_exp_check = QtWidgets.QCheckBox(self.advanced_frame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.log_exp_check.sizePolicy().hasHeightForWidth())
        self.log_exp_check.setSizePolicy(sizePolicy)
        self.log_exp_check.setText("Log Experiment with name")
        self.log_exp_check.setChecked(True)
        self.log_exp_check.setObjectName("log_exp_check")
        self.horizontalLayout_2.addWidget(self.log_exp_check)
        self.log_exp_name_edit = QtWidgets.QLineEdit(self.advanced_frame)
        self.log_exp_name_edit.setPlaceholderText("MLflow experiment name")
        self.log_exp_name_edit.setObjectName("log_exp_name_edit")
        self.horizontalLayout_2.addWidget(self.log_exp_name_edit)
        self.advanced_options_grid.addLayout(self.horizontalLayout_2, 2, 3, 1, 1)
        self.use_gpu_check = QtWidgets.QCheckBox(self.advanced_frame)
        self.use_gpu_check.setText("GPU Accelerated (if available)")
        self.use_gpu_check.setChecked(True)
        self.use_gpu_check.setObjectName("use_gpu_check")
        self.advanced_options_grid.addWidget(self.use_gpu_check, 3, 3, 1, 1)
        self.gpu_help_button = QtWidgets.QToolButton(self.advanced_frame)
        self.gpu_help_button.setText("?")
        self.gpu_help_button.setObjectName("gpu_help_button")
        self.advanced_options_grid.addWidget(self.gpu_help_button, 3, 4, 1, 1)
        self.verticalLayout.addLayout(self.advanced_options_grid)
        self.verticalLayout_2.addWidget(self.advanced_frame)
        spacerItem = QtWidgets.QSpacerItem(20, 5, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout_2.addItem(spacerItem)
        self.buttonBox = QtWidgets.QDialogButtonBox(build_model_dialog)
        self.buttonBox.setOrientation(QtCore.Qt.Horizontal)
        self.buttonBox.setStandardButtons(QtWidgets.QDialogButtonBox.Cancel|QtWidgets.QDialogButtonBox.Ok)
        self.buttonBox.setObjectName("buttonBox")
        self.verticalLayout_2.addWidget(self.buttonBox)

        self.retranslateUi(build_model_dialog)
        self.buttonBox.accepted.connect(build_model_dialog.accept) # type: ignore
        self.buttonBox.rejected.connect(build_model_dialog.reject) # type: ignore
        QtCore.QMetaObject.connectSlotsByName(build_model_dialog)
        build_model_dialog.setTabOrder(self.target_combo, self.model_name_edit)
        build_model_dialog.setTabOrder(self.model_name_edit, self.model_desc_text_edit)
        build_model_dialog.setTabOrder(self.model_desc_text_edit, self.advanced_check)
        build_model_dialog.setTabOrder(self.advanced_check, self.modeling_type_combo)
        build_model_dialog.setTabOrder(self.modeling_type_combo, self.limit_models_edit)
        build_model_dialog.setTabOrder(self.limit_models_edit, self.training_samples_edit)
        build_model_dialog.setTabOrder(self.training_samples_edit, self.excel_rows_edit)
        build_model_dialog.setTabOrder(self.excel_rows_edit, self.excel_rows_help_button)
        build_model_dialog.setTabOrder(self.excel_rows_help_button, self.limit_models_help_button)
        build_model_dialog.setTabOrder(self.limit_models_help_button, self.training_samples_help_button)
        build_model_dialog.setTabOrder(self.training_samples_help_button, self.build_full_help_button)
        build_model_dialog.setTabOrder(self.build_full_help_button, self.target_help_button)
        build_model_dialog.setTabOrder(self.target_help_button, self.build_excel_help_button)
        build_model_dialog.setTabOrder(self.build_excel_help_button, self.modeling_type_help_button)

    def retranslateUi(self, build_model_dialog):
        pass
