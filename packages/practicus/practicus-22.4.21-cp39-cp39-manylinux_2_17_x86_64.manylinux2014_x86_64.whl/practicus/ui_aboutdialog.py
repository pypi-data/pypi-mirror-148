# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file '/Users/hakan/a2t/pyroot/ui/aboutdialog.ui'
#
# Created by: PyQt5 UI code generator 5.15.6
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_about_dialog(object):
    def setupUi(self, about_dialog):
        about_dialog.setObjectName("about_dialog")
        about_dialog.resize(531, 511)
        about_dialog.setWindowTitle("About Practicus AI")
        self.verticalLayout = QtWidgets.QVBoxLayout(about_dialog)
        self.verticalLayout.setObjectName("verticalLayout")
        self.top_horizontal_layout = QtWidgets.QHBoxLayout()
        self.top_horizontal_layout.setObjectName("top_horizontal_layout")
        self.head_img_vertica_layout = QtWidgets.QVBoxLayout()
        self.head_img_vertica_layout.setContentsMargins(-1, -1, 5, 10)
        self.head_img_vertica_layout.setObjectName("head_img_vertica_layout")
        self.header_img_label = QtWidgets.QLabel(about_dialog)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.header_img_label.sizePolicy().hasHeightForWidth())
        self.header_img_label.setSizePolicy(sizePolicy)
        self.header_img_label.setText("header_img")
        self.header_img_label.setObjectName("header_img_label")
        self.head_img_vertica_layout.addWidget(self.header_img_label)
        self.top_horizontal_layout.addLayout(self.head_img_vertica_layout)
        self.summary_vertical_layout = QtWidgets.QVBoxLayout()
        self.summary_vertical_layout.setObjectName("summary_vertical_layout")
        self.header_label = QtWidgets.QLabel(about_dialog)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.header_label.sizePolicy().hasHeightForWidth())
        self.header_label.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.header_label.setFont(font)
        self.header_label.setText("About practicus")
        self.header_label.setObjectName("header_label")
        self.summary_vertical_layout.addWidget(self.header_label)
        self.top_horizontal_layout.addLayout(self.summary_vertical_layout)
        self.verticalLayout.addLayout(self.top_horizontal_layout)
        self.summary_label = QtWidgets.QLabel(about_dialog)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.summary_label.sizePolicy().hasHeightForWidth())
        self.summary_label.setSizePolicy(sizePolicy)
        self.summary_label.setText("<html><head/><body><p><a href=\"https://practicus.ai/\"><span style=\" text-decoration: underline; color:#0066ff;\">Practicus AI</span></a> is an end-to-end Data Science platform, which works like a spreadsheet. It works for both technical and non-technical users.</p><p>You can explore and analyze large amounts of raw data and find unique insights and patterns.</p><p>Practicus AI allows you to easily transform and prepare data, and extend with coding only if necessary.</p><p>You can create AI models using AutoML and predict the future with just a few clicks. When working with complex problems, you can share your experiments exported code with the data science team, so they can take it further without starting from scratch.</p><p>Several Practicus AI features work directly inside Spreadsheets, allowing you to bring more than 1 billion Spreadsheet users into your Data Science projects.</p><p>If needed, you can click to generate the data processing pipeline code, and go to production with ease.</p><p>Practicus AI app is forever free, and the cloud platform offers a forever free tier as well. If you need more cloud capacity, you can “pay as you go”, which shows as a line item in your cloud invoice. No commitments or credit card needed.</p></body></html>")
        self.summary_label.setWordWrap(True)
        self.summary_label.setOpenExternalLinks(True)
        self.summary_label.setObjectName("summary_label")
        self.verticalLayout.addWidget(self.summary_label)
        spacerItem = QtWidgets.QSpacerItem(5, 5, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        self.verticalLayout.addItem(spacerItem)
        self.summary_label_2 = QtWidgets.QLabel(about_dialog)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.summary_label_2.sizePolicy().hasHeightForWidth())
        self.summary_label_2.setSizePolicy(sizePolicy)
        self.summary_label_2.setText("<html><head/><body><p align=\"center\"><a href=\"https://practicus.ai/report-issue/\"><span style=\" text-decoration: underline; color:#0066ff;\">Report Issue</span></a><span style=\" color:#0066ff;\"> | </span><a href=\"https://practicus.ai/feature-request/\"><span style=\" text-decoration: underline; color:#0066ff;\">Request Feature</span></a><span style=\" color:#0066ff;\"> | </span><a href=\"https://practicus.ai/feedback/\"><span style=\" text-decoration: underline; color:#0066ff;\">Feedback</span></a><span style=\" color:#0066ff;\"> | </span><a href=\"https://practicus.ai/questions/\"><span style=\" text-decoration: underline; color:#0066ff;\">Other Questions</span></a></p></body></html>")
        self.summary_label_2.setWordWrap(True)
        self.summary_label_2.setOpenExternalLinks(True)
        self.summary_label_2.setObjectName("summary_label_2")
        self.verticalLayout.addWidget(self.summary_label_2)
        spacerItem1 = QtWidgets.QSpacerItem(20, 10, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout.addItem(spacerItem1)
        self.buttonBox = QtWidgets.QDialogButtonBox(about_dialog)
        self.buttonBox.setOrientation(QtCore.Qt.Horizontal)
        self.buttonBox.setStandardButtons(QtWidgets.QDialogButtonBox.Ok)
        self.buttonBox.setObjectName("buttonBox")
        self.verticalLayout.addWidget(self.buttonBox)

        self.retranslateUi(about_dialog)
        self.buttonBox.rejected.connect(about_dialog.reject) # type: ignore
        self.buttonBox.accepted.connect(about_dialog.accept) # type: ignore
        QtCore.QMetaObject.connectSlotsByName(about_dialog)

    def retranslateUi(self, about_dialog):
        pass
