{"version":3,"sources":["api/utils.ts","api/config.ts","store/loginSlice.ts","component/inputTag.tsx","store/globalConfSlice.ts","component/addSubsModal.tsx","store/groupConfigSlice.ts","component/subscribeCard.tsx","pages/admin/configPage/index.tsx","pages/admin/index.tsx","pages/auth.tsx","store/hooks.ts","App.tsx","reportWebVitals.ts","store/index.ts","index.tsx"],"names":["store","baseUrl","a","axios","get","res","data","auth","token","params","getTargetName","platformName","target","addSubscribe","groupNumber","req","post","delete","patch","then","interceptors","request","use","config","url","startsWith","localStorage","getItem","Cancel","headers","error","Promise","reject","response","status","dispatch","clearLoginStatus","loginAction","_","action","login","failed","type","payload","name","id","createAsyncThunk","code","Error","setItem","JSON","stringify","condition","getState","loginSlice","createSlice","initialState","reducers","doLogin","doClearLogin","state","extraReducers","builder","addCase","fulfilled","rejected","stat","actions","removeItem","loginSelector","InputTag","prop","useState","value","setValue","inputVisible","setInputVisible","inputValue","setInputValue","editInputIndex","setEditInputIndex","editInputValue","setEditInputValue","inputRef","useRef","editInputRef","useEffect","current","focus","handleInputConfirm","indexOf","newVal","onChange","handleEditInputChange","e","handleEditInputConfirm","newTags","slice","map","tag","index","ref","size","onBlur","onPressEnter","isLongTag","length","tagElem","color","style","userSelect","closable","onClose","removedTag","tags","filter","handleClose","onDoubleClick","preventDefault","title","width","marginRight","verticalAlign","className","onClick","background","border","borderColor","PlusOutlined","addText","setGlobalConf","loaded","getGlobalConf","globalConf","globalConfSlice","platformConf","platformConfSelector","InputTagCustom","disabled","AddModal","showModal","setShowModal","refresh","initVal","confirmLoading","setConfirmLoading","useSelector","hasTarget","setHasTarget","categories","setCategories","enabledTag","setEnableTag","Form","useForm","form","inited","setInited","setFieldsValue","visible","onCancel","onOk","submit","labelCol","span","onFinish","Object","assign","cats","updateSubscribe","resetFields","Item","label","rules","platform","targetName","console","log","keys","Option","required","message","validator","getFieldValue","resolve","placeholder","mode","indexStr","parseInt","setSubs","updateGroupSubs","groupConfigSlice","reducer","groupConfigSelector","groupConfig","CopyModal","currentGroupNumber","groups","reload","selectedGroups","setSelectGroups","postReqs","selectedGroup","SubscribeCard","platformConfs","showEditModal","setShowEditModal","dispatcher","useDispatch","groupSubscribes","EditOutlined","CopyOutlined","onConfirm","delSubscribe","handleDelete","DeleteOutlined","catKey","ConfigPage","currentAddingGroupNumber","setCurrentAddingGroupNumber","configData","tab","key","push","Panel","header","float","stopPropagation","gutter","xs","sm","md","lg","align","subscribes","subs","idx","s","Admin","changeTab","minHeight","Sider","theme","defaultSelectedKeys","icon","SettingOutlined","BugOutlined","Content","margin","Auth","useParams","loginState","loginFun","to","pathname","useAppSelector","LoginSwitch","App","infoJson","jwtToken","jwt_decode","exp","Date","now","info","parse","basename","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","configureStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.63702e69.chunk.js","sourcesContent":["import axios, { AxiosError } from \"axios\";\nimport { Store } from \"src/store\";\nimport { clearLoginStatus } from \"src/store/loginSlice\";\n// import { useContext } from 'react';\n// import { LoginContext } from \"../utils/context\";\n\nexport const baseUrl = \"/bison/api/\";\nlet store: Store;\nexport const injectStore = (_store: Store) => {\n  store = _store;\n};\n\n// const loginStatus = useContext(LoginContext);\naxios.interceptors.request.use(\n  function (config) {\n    if (\n      config.url &&\n      config.url.startsWith(baseUrl) &&\n      config.url !== `${baseUrl}auth` &&\n      config.url !== `${baseUrl}global_conf`\n    ) {\n      const token = localStorage.getItem(\"token\");\n      if (token) {\n        config.headers[\"Authorization\"] = `Bearer ${token}`;\n      } else {\n        throw new axios.Cancel(\"User not login\");\n      }\n    }\n    return config;\n  },\n  function (error) {\n    return Promise.reject(error);\n  }\n);\n\naxios.interceptors.response.use(\n  function (response) {\n    // const data = response.data;\n    // const parseToMap = (item: any): any => {\n    //   if (item instanceof Array) {\n    //     return item.map(parseToMap);\n    //   } else if (item instanceof Object) {\n    //     let res = new Map();\n    //     for (const key of Object.keys(item)) {\n    //       res.set(key, parseToMap(item[key]));\n    //     }\n    //     return res;\n    //   } else {\n    //     return item;\n    //   }\n    // }\n    // response.data = parseToMap(data);\n    return response;\n  },\n  function (error: AxiosError) {\n    if (error.response && error.response.status === 401) {\n      store.dispatch(clearLoginStatus());\n    }\n    return Promise.reject(error);\n  }\n);\n","import axios from \"axios\";\nimport {\n  GlobalConf,\n  TokenResp,\n  SubscribeResp,\n  TargetNameResp,\n  SubscribeConfig,\n} from \"../utils/type\";\nimport { baseUrl } from \"./utils\";\n\nexport async function getGlobalConf(): Promise<GlobalConf> {\n  const res = await axios.get<GlobalConf>(`${baseUrl}global_conf`);\n  return res.data;\n}\n\nexport async function auth(token: string): Promise<TokenResp> {\n  const res = await axios.get<TokenResp>(`${baseUrl}auth`, {\n    params: { token },\n  });\n  return res.data;\n}\n\nexport async function getSubscribe(): Promise<SubscribeResp> {\n  const res = await axios.get(`${baseUrl}subs`);\n  return res.data;\n}\n\nexport async function getTargetName(\n  platformName: string,\n  target: string\n): Promise<TargetNameResp> {\n  const res = await axios.get(`${baseUrl}target_name`, {\n    params: { platformName, target },\n  });\n  return res.data;\n}\n\nexport async function addSubscribe(groupNumber: string, req: SubscribeConfig) {\n  const res = await axios.post(`${baseUrl}subs`, req, {\n    params: { groupNumber },\n  });\n  return res.data;\n}\n\nexport async function delSubscribe(\n  groupNumber: string,\n  platformName: string,\n  target: string\n) {\n  const res = await axios.delete(`${baseUrl}subs`, {\n    params: { groupNumber, platformName, target },\n  });\n  return res.data;\n}\n\nexport async function updateSubscribe(\n  groupNumber: string,\n  req: SubscribeConfig\n) {\n  return axios\n    .patch(`${baseUrl}subs`, req, { params: { groupNumber } })\n    .then((res) => res.data);\n}\n","import {\n  AnyAction,\n  CaseReducer,\n  createAsyncThunk,\n  createSlice,\n  PayloadAction,\n  ThunkAction,\n} from \"@reduxjs/toolkit\";\nimport jwt_decode from \"jwt-decode\";\nimport { LoginStatus, TokenResp } from \"src/utils/type\";\nimport { auth } from \"src/api/config\";\nimport { RootState } from \".\";\n\nconst initialState: LoginStatus = {\n  login: false,\n  type: \"\",\n  name: \"\",\n  id: \"123\",\n  // groups: [],\n  token: \"\",\n  failed: false,\n};\n\ninterface storedInfo {\n  type: string;\n  name: string;\n  id: string;\n}\n\nconst loginAction: CaseReducer<LoginStatus, PayloadAction<TokenResp>> = (\n  _,\n  action\n) => {\n  return {\n    login: true,\n    failed: false,\n    type: action.payload.type,\n    name: action.payload.name,\n    id: action.payload.id,\n    token: action.payload.token,\n  };\n};\n\nexport const login = createAsyncThunk(\n  \"auth/login\",\n  async (code: string) => {\n    let res = await auth(code);\n    if (res.status !== 200) {\n      throw Error(\"Login Error\");\n    } else {\n      localStorage.setItem(\n        \"loginInfo\",\n        JSON.stringify({\n          type: res.type,\n          name: res.name,\n          id: res.id,\n        })\n      );\n      localStorage.setItem(\"token\", res.token);\n    }\n    return res;\n  },\n  {\n    condition: (_: string, { getState }) => {\n      const { login } = getState() as { login: LoginStatus };\n      return !login.login;\n    },\n  }\n);\n\nexport const loginSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  reducers: {\n    doLogin: loginAction,\n    doClearLogin: (state) => {\n      state.login = false;\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(login.fulfilled, loginAction);\n    builder.addCase(login.rejected, (stat) => {\n      stat.failed = true;\n    });\n  },\n});\n\nexport const { doLogin, doClearLogin } = loginSlice.actions;\n\nexport const loadLoginState =\n  (): ThunkAction<void, RootState, unknown, AnyAction> =>\n  (dispatch, getState) => {\n    if (getState().login.login) {\n      return;\n    }\n    const infoJson = localStorage.getItem(\"loginInfo\");\n    const jwtToken = localStorage.getItem(\"token\");\n    if (infoJson && jwtToken) {\n      const decodedJwt = jwt_decode(jwtToken) as { exp: number };\n      if (decodedJwt.exp < Date.now() / 1000) {\n        return;\n      }\n      const info = JSON.parse(infoJson) as storedInfo;\n      const payload: TokenResp = {\n        ...info,\n        status: 200,\n        token: jwtToken,\n      };\n      dispatch(doLogin(payload));\n    }\n  };\n\nexport const clearLoginStatus =\n  (): ThunkAction<void, RootState, unknown, AnyAction> => (dispatch) => {\n    localStorage.removeItem(\"loginInfo\");\n    localStorage.removeItem(\"token\");\n    dispatch(doClearLogin());\n  };\nexport const loginSelector = (state: RootState) => state.login;\n\nexport default loginSlice.reducer;\n","import { Input, Tag, Tooltip } from \"antd\";\nimport { PresetColorType, PresetStatusColorType } from \"antd/lib/_util/colors\";\nimport { LiteralUnion } from \"antd/lib/_util/type\";\nimport React, { useRef, useState, useEffect } from \"react\";\nimport { PlusOutlined } from \"@ant-design/icons\";\n\ninterface InputTagProp {\n  value?: Array<string>;\n  onChange?: (value: Array<string>) => void;\n  color?: LiteralUnion<PresetColorType | PresetStatusColorType, string>;\n  addText?: string;\n}\nexport function InputTag(prop: InputTagProp) {\n  const [value, setValue] = useState<Array<string>>(prop.value || []);\n  const [inputVisible, setInputVisible] = useState(false);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [editInputIndex, setEditInputIndex] = useState(-1);\n  const [editInputValue, setEditInputValue] = useState(\"\");\n  const inputRef = useRef(null as any);\n  const editInputRef = useRef(null as any);\n  useEffect(() => {\n    if (prop.value) {\n      setValue(prop.value);\n    }\n  }, [prop.value]);\n  useEffect(() => {\n    if (inputVisible) {\n      inputRef.current.focus();\n    }\n  }, [inputVisible]);\n  useEffect(() => {\n    if (editInputIndex !== -1) {\n      editInputRef.current.focus();\n    }\n  }, [editInputIndex]);\n\n  const handleClose = (removedTag: string) => {\n    const tags = value.filter((tag) => tag !== removedTag);\n    setValue((_) => tags);\n    if (prop.onChange) {\n      prop.onChange(tags);\n    }\n  };\n\n  const showInput = () => {\n    setInputVisible((_) => true);\n  };\n\n  const handleInputConfirm = () => {\n    if (inputValue && value.indexOf(inputValue) === -1) {\n      const newVal = [...value, inputValue];\n      setValue((_) => newVal);\n      if (prop.onChange) {\n        prop.onChange(newVal);\n      }\n    }\n    setInputVisible((_) => false);\n    setInputValue((_) => \"\");\n  };\n\n  const handleEditInputChange = (e: any) => {\n    setEditInputValue((_) => e.target.value);\n  };\n\n  const handleEditInputConfirm = () => {\n    const newTags = value.slice();\n    newTags[editInputIndex] = editInputValue;\n    setValue((_) => newTags);\n    if (prop.onChange) {\n      prop.onChange(newTags);\n    }\n    setEditInputIndex((_) => -1);\n    setEditInputValue((_) => \"\");\n  };\n\n  const handleInputChange = (e: any) => {\n    setInputValue(e.target.value);\n  };\n\n  return (\n    <>\n      {value.map((tag, index) => {\n        if (editInputIndex === index) {\n          return (\n            <Input\n              ref={editInputRef}\n              key={tag}\n              size=\"small\"\n              value={editInputValue}\n              onChange={handleEditInputChange}\n              onBlur={handleEditInputConfirm}\n              onPressEnter={handleInputConfirm}\n            />\n          );\n        }\n        const isLongTag = tag.length > 20;\n        const tagElem = (\n          <Tag\n            color={prop.color || \"default\"}\n            style={{ userSelect: \"none\" }}\n            key={tag}\n            closable\n            onClose={() => handleClose(tag)}\n          >\n            <span\n              onDoubleClick={(e) => {\n                setEditInputIndex((_) => index);\n                setEditInputValue((_) => tag);\n                e.preventDefault();\n              }}\n            >\n              {isLongTag ? `${tag.slice(0, 20)}...` : tag}\n            </span>\n          </Tag>\n        );\n        return isLongTag ? (\n          <Tooltip title={tag} key={tag}>\n            {tagElem}\n          </Tooltip>\n        ) : (\n          tagElem\n        );\n      })}\n      {inputVisible && (\n        <Input\n          ref={inputRef}\n          type=\"text\"\n          size=\"small\"\n          style={{ width: \"78px\", marginRight: \"8px\", verticalAlign: \"top\" }}\n          value={inputValue}\n          onChange={handleInputChange}\n          onBlur={handleInputConfirm}\n          onPressEnter={handleInputConfirm}\n        />\n      )}\n      {!inputVisible && (\n        <Tag\n          className=\"site-tag-plus\"\n          onClick={showInput}\n          style={{\n            background: \"#fff\",\n            border: \"dashed thin\",\n            borderColor: \"#bfbfbf\",\n          }}\n        >\n          <PlusOutlined /> {prop.addText || \"Add Tag\"}\n        </Tag>\n      )}\n    </>\n  );\n}\n","import {\n  CaseReducer,\n  createAsyncThunk,\n  createSlice,\n  PayloadAction,\n} from \"@reduxjs/toolkit\";\nimport { getGlobalConf as getGlobalConfApi } from \"src/api/config\";\nimport { GlobalConf } from \"src/utils/type\";\nimport { RootState } from \".\";\n\nconst initialState: GlobalConf = {\n  platformConf: {},\n  loaded: false,\n};\n\nconst setGlobalConf: CaseReducer<GlobalConf, PayloadAction<GlobalConf>> = (\n  _,\n  action\n) => {\n  return { ...action.payload, loaded: true };\n};\n\nexport const getGlobalConf = createAsyncThunk(\n  \"globalConf/set\",\n  getGlobalConfApi,\n  {\n    condition: (_, { getState }) =>\n      !(getState() as RootState).globalConf.loaded,\n  }\n);\n\nexport const globalConfSlice = createSlice({\n  name: \"globalConf\",\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(getGlobalConf.fulfilled, setGlobalConf);\n  },\n});\n\nexport const platformConfSelector = (state: RootState) =>\n  state.globalConf.platformConf;\n\nexport default globalConfSlice.reducer;\n","import { Form, Input, Modal, Select, Tag } from \"antd\";\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { addSubscribe, getTargetName, updateSubscribe } from \"src/api/config\";\nimport { InputTag } from \"src/component/inputTag\";\nimport { platformConfSelector } from \"src/store/globalConfSlice\";\nimport { CategoryConfig, SubscribeConfig } from \"src/utils/type\";\n\ninterface InputTagCustomProp {\n  value?: Array<string>;\n  onChange?: (value: Array<string>) => void;\n  disabled?: boolean;\n}\nfunction InputTagCustom(prop: InputTagCustomProp) {\n  const [value, setValue] = useState(prop.value || []);\n  const handleSetValue = (newVal: Array<string>) => {\n    setValue(() => newVal);\n    if (prop.onChange) {\n      prop.onChange(newVal);\n    }\n  };\n  useEffect(() => {\n    if (prop.value) {\n      setValue(prop.value);\n    }\n  }, [prop.value]);\n  return (\n    <>\n      {prop.disabled ? (\n        <Tag color=\"default\">不支持标签</Tag>\n      ) : (\n        <>\n          {value.length === 0 && <Tag color=\"green\">全部标签</Tag>}\n          <InputTag\n            color=\"blue\"\n            addText=\"添加标签\"\n            value={value}\n            onChange={handleSetValue}\n          />\n        </>\n      )}\n    </>\n  );\n}\n\ninterface AddModalProp {\n  showModal: boolean;\n  groupNumber: string;\n  setShowModal: (s: boolean) => void;\n  refresh: () => void;\n  initVal?: SubscribeConfig;\n}\nexport function AddModal({\n  showModal,\n  groupNumber,\n  setShowModal,\n  refresh,\n  initVal,\n}: AddModalProp) {\n  const [confirmLoading, setConfirmLoading] = useState<boolean>(false);\n  const platformConf = useSelector(platformConfSelector);\n  const [hasTarget, setHasTarget] = useState(false);\n  const [categories, setCategories] = useState({} as CategoryConfig);\n  const [enabledTag, setEnableTag] = useState(false);\n  const [form] = Form.useForm();\n  const [inited, setInited] = useState(false);\n  const changePlatformSelect = (platform: string) => {\n    setHasTarget((_) => platformConf[platform].hasTarget);\n    setCategories((_) => platformConf[platform].categories);\n    setEnableTag(platformConf[platform].enabledTag);\n    if (!platformConf[platform].hasTarget) {\n      getTargetName(platform, \"default\").then((res) => {\n        console.log(res);\n        form.setFieldsValue({\n          targetName: res.targetName,\n          target: \"\",\n        });\n      });\n    } else {\n      form.setFieldsValue({\n        targetName: \"\",\n        target: \"\",\n      });\n    }\n  };\n  const handleSubmit = (value: any) => {\n    let newVal = Object.assign({}, value);\n    if (typeof newVal.tags !== \"object\") {\n      newVal.tags = [];\n    }\n    if (typeof newVal.cats !== \"object\") {\n      newVal.cats = [];\n    }\n    if (newVal.target === \"\") {\n      newVal.target = \"default\";\n    }\n    if (initVal) {\n      // patch\n      updateSubscribe(groupNumber, newVal).then(() => {\n        setConfirmLoading(false);\n        setShowModal(false);\n        form.resetFields();\n        refresh();\n      });\n    } else {\n      addSubscribe(groupNumber, newVal).then(() => {\n        setConfirmLoading(false);\n        setShowModal(false);\n        form.resetFields();\n        refresh();\n      });\n    }\n  };\n  const handleModleFinish = () => {\n    form.submit();\n    setConfirmLoading(() => true);\n  };\n  useEffect(() => {\n    if (initVal && !inited) {\n      const platformName = initVal.platformName;\n      setHasTarget(platformConf[platformName].hasTarget);\n      setCategories(platformConf[platformName].categories);\n      setEnableTag(platformConf[platformName].enabledTag);\n      setInited(true);\n      form.setFieldsValue(initVal);\n    }\n  }, [initVal, form, platformConf, inited]);\n  return (\n    <Modal\n      title=\"添加订阅\"\n      visible={showModal}\n      confirmLoading={confirmLoading}\n      onCancel={() => setShowModal(false)}\n      onOk={handleModleFinish}\n    >\n      <Form form={form} labelCol={{ span: 6 }} name=\"b\" onFinish={handleSubmit}>\n        <Form.Item label=\"平台\" name=\"platformName\" rules={[]}>\n          <Select style={{ width: \"80%\" }} onChange={changePlatformSelect}>\n            {Object.keys(platformConf).map((platformName) => (\n              <Select.Option key={platformName} value={platformName}>\n                {platformConf[platformName].name}\n              </Select.Option>\n            ))}\n          </Select>\n        </Form.Item>\n        <Form.Item\n          label=\"账号\"\n          name=\"target\"\n          rules={[\n            { required: hasTarget, message: \"请输入账号\" },\n            {\n              validator: async (_, value) => {\n                try {\n                  const res = await getTargetName(\n                    form.getFieldValue(\"platformName\"),\n                    value\n                  );\n                  if (res.targetName) {\n                    form.setFieldsValue({\n                      targetName: res.targetName,\n                    });\n                    return Promise.resolve();\n                  } else {\n                    form.setFieldsValue({\n                      targetName: \"\",\n                    });\n                    return Promise.reject(\"账号不正确，请重新检查账号\");\n                  }\n                } catch {\n                  return Promise.reject(\"服务器错误，请稍后再试\");\n                }\n              },\n            },\n          ]}\n        >\n          <Input\n            placeholder={hasTarget ? \"获取方式见文档\" : \"此平台不需要账号\"}\n            disabled={!hasTarget}\n            style={{ width: \"80%\" }}\n          />\n        </Form.Item>\n        <Form.Item label=\"账号名称\" name=\"targetName\">\n          <Input style={{ width: \"80%\" }} disabled />\n        </Form.Item>\n        <Form.Item\n          label=\"订阅分类\"\n          name=\"cats\"\n          rules={[\n            {\n              required: Object.keys(categories).length > 0,\n              message: \"请至少选择一个分类进行订阅\",\n            },\n          ]}\n        >\n          <Select\n            style={{ width: \"80%\" }}\n            mode=\"multiple\"\n            disabled={Object.keys(categories).length === 0}\n            placeholder={\n              Object.keys(categories).length > 0\n                ? \"请选择要订阅的分类\"\n                : \"本平台不支持分类\"\n            }\n          >\n            {Object.keys(categories).length > 0 &&\n              Object.keys(categories).map((indexStr) => (\n                <Select.Option key={indexStr} value={parseInt(indexStr)}>\n                  {categories[parseInt(indexStr)]}\n                </Select.Option>\n              ))}\n          </Select>\n        </Form.Item>\n        <Form.Item label=\"订阅Tag\" name=\"tags\">\n          <InputTagCustom disabled={!enabledTag} />\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n}\n","import {\n  CaseReducer,\n  createAsyncThunk,\n  createSlice,\n  PayloadAction,\n} from \"@reduxjs/toolkit\";\nimport { SubscribeResp } from \"src/utils/type\";\nimport { getSubscribe } from \"src/api/config\";\nimport { RootState } from \".\";\nconst initialState: SubscribeResp = {};\n\nconst setSubs: CaseReducer<SubscribeResp, PayloadAction<SubscribeResp>> = (\n  _,\n  action\n) => {\n  return action.payload;\n};\n\nexport const updateGroupSubs = createAsyncThunk(\n  \"groupConfig/update\",\n  getSubscribe\n);\n\nexport const groupConfigSlice = createSlice({\n  name: \"groupConfig\",\n  initialState,\n  reducers: {\n    setSubs,\n  },\n  extraReducers: (reducer) => {\n    reducer.addCase(updateGroupSubs.fulfilled, setSubs);\n  },\n});\n\nexport const groupConfigSelector = (state: RootState) => state.groupConfig;\nexport default groupConfigSlice.reducer;\n","import { CopyOutlined, DeleteOutlined, EditOutlined } from \"@ant-design/icons\";\nimport {\n  Card,\n  Col,\n  Form,\n  message,\n  Popconfirm,\n  Select,\n  Tag,\n  Tooltip,\n} from \"antd\";\nimport Modal from \"antd/lib/modal/Modal\";\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addSubscribe, delSubscribe } from \"src/api/config\";\nimport { platformConfSelector } from \"src/store/globalConfSlice\";\nimport {\n  groupConfigSelector,\n  updateGroupSubs,\n} from \"src/store/groupConfigSlice\";\nimport { PlatformConfig, SubscribeConfig, SubscribeResp } from \"src/utils/type\";\nimport { AddModal } from \"./addSubsModal\";\n\ninterface CopyModalProp {\n  setShowModal: (modalShow: boolean) => void;\n  showModal: boolean;\n  config: SubscribeConfig;\n  groups: SubscribeResp;\n  currentGroupNumber: string;\n  reload: () => void;\n}\nfunction CopyModal({\n  setShowModal,\n  config,\n  currentGroupNumber,\n  groups,\n  showModal,\n  reload,\n}: CopyModalProp) {\n  const [confirmLoading, setConfirmLoading] = useState(false);\n  const [selectedGroups, setSelectGroups] = useState<Array<string>>([]);\n  const postReqs = async (\n    selectedGroups: Array<string>,\n    config: SubscribeConfig\n  ) => {\n    for (let selectedGroup of selectedGroups) {\n      await addSubscribe(selectedGroup, config);\n    }\n  };\n  const handleOk = () => {\n    if (selectedGroups.length === 0) {\n      message.error(\"请至少选择一个目标群\");\n    } else {\n      setConfirmLoading(true);\n      postReqs(selectedGroups, config).then(() => {\n        setConfirmLoading(false);\n        setShowModal(false);\n        return reload();\n      });\n    }\n  };\n  return (\n    <Modal\n      title=\"复制订阅\"\n      visible={showModal}\n      confirmLoading={confirmLoading}\n      onCancel={() => setShowModal(false)}\n      onOk={handleOk}\n    >\n      <Select\n        mode=\"multiple\"\n        onChange={(value: Array<string>) => setSelectGroups(value)}\n        style={{ width: \"80%\" }}\n      >\n        {Object.keys(groups)\n          .filter((groupNumber) => groupNumber !== currentGroupNumber)\n          .map((groupNumber) => (\n            <Select.Option value={groupNumber} key={groupNumber}>\n              {`${groupNumber} - ${groups[groupNumber].name}`}\n            </Select.Option>\n          ))}\n      </Select>\n    </Modal>\n  );\n}\ninterface SubscribeCardProp {\n  groupNumber: string;\n  config: SubscribeConfig;\n}\nexport function SubscribeCard({ groupNumber, config }: SubscribeCardProp) {\n  const platformConfs = useSelector(platformConfSelector);\n  const [showModal, setShowModal] = useState(false);\n  const [showEditModal, setShowEditModal] = useState(false);\n  const platformConf = platformConfs[config.platformName] as PlatformConfig;\n  const dispatcher = useDispatch();\n  const groupSubscribes = useSelector(groupConfigSelector);\n  const reload = () => dispatcher(updateGroupSubs());\n  const handleDelete =\n    (groupNumber: string, platformName: string, target: string) => () => {\n      delSubscribe(groupNumber, platformName, target).then(() => {\n        reload();\n      });\n    };\n  return (\n    <Col span={8} key={`${config.platformName}-${config.target}`}>\n      <Card\n        title={`${platformConf.name} - ${config.targetName}`}\n        actions={[\n          <Tooltip title=\"编辑\">\n            <EditOutlined\n              onClick={() => {\n                setShowEditModal((state) => !state);\n              }}\n            />\n          </Tooltip>,\n          <Tooltip title=\"添加到其他群\">\n            <CopyOutlined\n              onClick={() => {\n                setShowModal((state) => !state);\n              }}\n            />\n          </Tooltip>,\n          <Popconfirm\n            title={`确定要删除 ${platformConf.name} - ${config.targetName}`}\n            onConfirm={handleDelete(\n              groupNumber,\n              config.platformName,\n              config.target || \"default\"\n            )}\n          >\n            <Tooltip title=\"删除\">\n              <DeleteOutlined />\n            </Tooltip>\n          </Popconfirm>,\n        ]}\n      >\n        <Form labelCol={{ span: 4 }}>\n          <Form.Item label=\"订阅帐号\">\n            {platformConf.hasTarget ? (\n              config.target\n            ) : (\n              <Tag color=\"default\">无帐号</Tag>\n            )}\n          </Form.Item>\n          <Form.Item label=\"订阅类型\">\n            {Object.keys(platformConf.categories).length > 0 ? (\n              config.cats.map((catKey: number) => (\n                <Tag color=\"green\" key={catKey}>\n                  {platformConf.categories[catKey]}\n                </Tag>\n              ))\n            ) : (\n              <Tag color=\"default\">不支持类型</Tag>\n            )}\n          </Form.Item>\n          <Form.Item label=\"订阅Tag\">\n            {platformConf.enabledTag ? (\n              config.tags.length > 0 ? (\n                config.tags.map((tag) => (\n                  <Tag color=\"green\" key={tag}>\n                    {tag}\n                  </Tag>\n                ))\n              ) : (\n                <Tag color=\"blue\">全部标签</Tag>\n              )\n            ) : (\n              <Tag color=\"default\">不支持Tag</Tag>\n            )}\n          </Form.Item>\n        </Form>\n      </Card>\n      <CopyModal\n        setShowModal={setShowModal}\n        reload={reload}\n        currentGroupNumber={groupNumber}\n        showModal={showModal}\n        config={config}\n        groups={groupSubscribes}\n      />\n      <AddModal\n        showModal={showEditModal}\n        setShowModal={setShowEditModal}\n        groupNumber={groupNumber}\n        refresh={reload}\n        initVal={config}\n      />\n    </Col>\n  );\n}\n","import { Button, Collapse, Empty, Row } from \"antd\";\nimport React, { ReactElement, useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { AddModal } from \"src/component/addSubsModal\";\nimport { SubscribeCard } from \"src/component/subscribeCard\";\nimport {\n  groupConfigSelector,\n  updateGroupSubs,\n} from \"src/store/groupConfigSlice\";\n\ninterface ConfigPageProp {\n  tab: string;\n}\nexport function ConfigPage(prop: ConfigPageProp) {\n  const [showModal, setShowModal] = useState<boolean>(false);\n  const [currentAddingGroupNumber, setCurrentAddingGroupNumber] = useState(\"\");\n  const configData = useSelector(groupConfigSelector);\n  const dispatcher = useDispatch();\n  useEffect(() => {\n    dispatcher(updateGroupSubs());\n  }, [prop.tab, dispatcher]);\n  const clickNew =\n    (groupNumber: string) => (e: React.MouseEvent<HTMLButtonElement>) => {\n      setShowModal((_) => true);\n      setCurrentAddingGroupNumber(groupNumber);\n      e.stopPropagation();\n    };\n\n  if (Object.keys(configData).length === 0) {\n    return <Empty />;\n  } else {\n    let groups: Array<ReactElement> = [];\n    for (let key of Object.keys(configData)) {\n      let value = configData[key];\n      groups.push(\n        <Collapse.Panel\n          key={key}\n          header={\n            <span>\n              {`${key} - ${value.name}`}\n              <Button style={{ float: \"right\" }} onClick={clickNew(key)}>\n                添加\n              </Button>\n            </span>\n          }\n        >\n          <Row\n            gutter={[\n              { xs: 8, sm: 16, md: 24, lg: 32 },\n              { xs: 8, sm: 16, md: 24, lg: 32 },\n            ]}\n            align=\"middle\"\n          >\n            {value.subscribes.map((subs, idx) => (\n              <SubscribeCard key={idx} groupNumber={key} config={subs} />\n            ))}\n          </Row>\n        </Collapse.Panel>\n      );\n    }\n    return (\n      <div>\n        <Collapse>{groups}</Collapse>\n        <AddModal\n          groupNumber={currentAddingGroupNumber}\n          showModal={showModal}\n          refresh={() => dispatcher(updateGroupSubs())}\n          setShowModal={(s: boolean) => setShowModal((_) => s)}\n        />\n      </div>\n    );\n  }\n}\n","import { BugOutlined, SettingOutlined } from \"@ant-design/icons\";\nimport { Layout, Menu } from \"antd\";\nimport React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { loginSelector } from \"src/store/loginSlice\";\nimport \"./admin.css\";\nimport { ConfigPage } from \"./configPage\";\n\nexport function Admin() {\n  const login = useSelector(loginSelector);\n  const [tab, changeTab] = useState(\"manage\");\n  return (\n    <Layout style={{ minHeight: \"100vh\" }}>\n      <Layout.Sider className=\"layout-side\">\n        <div className=\"user\"></div>\n        <Menu\n          mode=\"inline\"\n          theme=\"dark\"\n          defaultSelectedKeys={[tab]}\n          onClick={({ key }) => changeTab(key)}\n        >\n          <Menu.Item key=\"manage\" icon={<SettingOutlined />}>\n            订阅管理\n          </Menu.Item>\n          {login.type === \"admin\" && (\n            <Menu.Item key=\"log\" icon={<BugOutlined />}>\n              查看日志\n            </Menu.Item>\n          )}\n        </Menu>\n      </Layout.Sider>\n      <Layout.Content>\n        <div style={{ margin: \"24px\", background: \"#fff\", minHeight: \"640px\" }}>\n          {tab === \"manage\" ? <ConfigPage tab={tab} /> : null}\n        </div>\n      </Layout.Content>\n    </Layout>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router\";\nimport { Redirect } from \"react-router-dom\";\nimport { login, loginSelector } from \"src/store/loginSlice\";\n\ninterface AuthParam {\n  code: string;\n}\nexport function Auth() {\n  const { code } = useParams<AuthParam>();\n  const dispatch = useDispatch();\n  const loginState = useSelector(loginSelector);\n  useEffect(() => {\n    const loginFun = async () => {\n      dispatch(login(code));\n    };\n    loginFun();\n  }, [code, dispatch]);\n  return (\n    <>\n      {loginState.login ? (\n        <Redirect to={{ pathname: \"/admin\" }} />\n      ) : loginState.failed ? (\n        <div>登录失败，请重新获取连接</div>\n      ) : (\n        <div>Logining...</div>\n      )}\n    </>\n  );\n}\n","import { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\nimport { AppDispatch, RootState } from \".\";\n\nexport const useAppDispacher = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import \"antd/dist/antd.css\";\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport { Admin } from \"./pages/admin\";\nimport { Auth } from \"./pages/auth\";\nimport { getGlobalConf } from \"./store/globalConfSlice\";\nimport { useAppSelector } from \"./store/hooks\";\nimport { loadLoginState, loginSelector } from \"./store/loginSlice\";\n\nfunction LoginSwitch() {\n  const login = useSelector(loginSelector);\n  if (login.login) {\n    return <Admin />;\n  } else {\n    return <div>not login</div>;\n  }\n}\n\nfunction App() {\n  const dispatch = useDispatch();\n  const globalConf = useAppSelector((state) => state.globalConf);\n  useEffect(() => {\n    dispatch(getGlobalConf());\n    dispatch(loadLoginState());\n  }, [dispatch]);\n  return (\n    <>\n      {globalConf.loaded && (\n        <Router basename=\"/bison\">\n          <Switch>\n            <Route path=\"/auth/:code\">\n              <Auth />\n            </Route>\n            <Route path=\"/admin/\">\n              <LoginSwitch />\n            </Route>\n          </Switch>\n        </Router>\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport loginSlice from \"./loginSlice\";\nimport globalConfSlice from \"./globalConfSlice\";\nimport groupConfigSlice from \"./groupConfigSlice\";\n\nconst store = configureStore({\n  reducer: {\n    login: loginSlice,\n    globalConf: globalConfSlice,\n    groupConfig: groupConfigSlice,\n  },\n});\n\nexport default store;\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\nexport type Store = typeof store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport store from \"./store\";\nimport { injectStore } from \"src/api/utils\";\n\ninjectStore(store);\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}