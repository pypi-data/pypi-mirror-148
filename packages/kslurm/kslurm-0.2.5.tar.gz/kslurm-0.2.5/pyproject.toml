[tool.poetry]
name = "kslurm"
version = "0.2.5"
description = "Helper scripts and wrappers for running commands on SLURM compute clusters."
license = "MIT"
readme = "README.md"
authors = ["Peter Van Dyken <pvandyk2@uwo.ca>"]
repository = "https://github.com/pvandyken/kslurm"
keywords = ["slurm", "compute cluster"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Topic :: Utilities",
    "Typing :: Typed"
]
packages = [
    { include = "kslurm" }
]

[tool.poetry.dependencies]
python = ">=3.7,<4.0"
attrs = "^21.2.0"
colorama = "^0.4.4"
typing-extensions = "^3.10"
rich = "^10.9.0"
tabulate = "^0.8.9"
semver = "^2.13.0"

[tool.poetry.dev-dependencies]
black = "^21.8b0"
pytest = "^6.2.5"
tox = "^3.24.3"
coverage = "^5.5"
tox-poetry-installer = {extras = ["poetry"], version = "^0.8.1"}
hypothesis = "^6.20.0"
isort = "^5.9.3"
flake8 = "^3.9.2"
mkinit = "^0.3.3"
poethepoet = "^0.10.0"
pyfakefs = "^4.5.1"
pytest-mock = "^3.6.1"
pre-commit = "^2.15.0"

[tool.poetry.scripts]
kbatch = 'kslurm.submission.kbatch:main'
krun = 'kslurm.submission.krun:main'
kjupyter = 'kslurm.submission.kjupyter:main'
kslurm = 'kslurm.kslurm:main'

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.isort]
profile = "black"
multi_line_output = 3
add_imports = ["from __future__ import absolute_import"]
# We ignore __init__ file so that mkinit and isort don't undo each other
extend_skip = ["__init__.py"]

[tool.pyright]
strict = ["kslurm/**"]
venv = ".venv"

[tool.black]
extend-exclude = ["typings/.*$"]

[tool.poe.tasks]
setup = "pre-commit install"
mkinit = "mkinit --recursive --nomods --black -i kslurm"
check_mkinit = "mkinit --recursive --nomods --black --diff kslurm"
test = "tox"

[tool.tox]
legacy_tox_ini = """
[tox]
envlist = py37, py38, py39
isolated_build = True

[gh-actions]
python =
    3.7: py37
    3.8: py38
    3.9: py39

[testenv]
require_locked_deps = true
locked_deps =
    pytest
    coverage
    hypothesis
    pyfakefs
    pytest-mock
commands =
    pytest
"""
