Metadata-Version: 2.1
Name: TermCmds
Version: 0.0.2
Summary: Make custom terminal commands in python.
Home-page: UNKNOWN
Author: Natejoestev
License: UNKNOWN
Description: 
        # TermCmds module
        
        Make custom terminal commands in python.
        
        ## how to make a basic command
        
        `example.py`:
        
        ```py
        import TermCmds
        
        cmd = TermCmds.Command()
        
        @cmd.main_command
        def main(args, kwargs, options):
            print(args)
            print(kwargs)
            print(options)
        
        @cmd.command("subcommand")
        def subcommand(args, kwargs, options):
            print("subcommand")
            print(args)
            print(kwargs)
            print(options)
        
        if __name__ == "__main__":
            cmd.run()
        ```
        
        `python example.py a b -k v --o` outputs:
        
        ```python
        ["a", "b"]
        {"k": "v"}
        ["o"]
        ```
        
        `python example.py subcommand c d -key value --option` outputs:
        
        ```python
        subcommand
        ["c", "d"]
        {"key": "value"}
        ["option"]
        ```
        
        ## documentation
        
        `TermCmds.Command()` is the class for the command  
        `@cmd.main_command` is the main command for `.. args kwars options`  
        `@cmd.command(name)` is the function link for `.. name args kwargs options`  
        `args` is a list of values that are not kwargs or options  
        `kwargs` is a dictionary of keys and values `-key value`  
        `options` is a list of options `--option`  
        
Keywords: terminal,TermCmds,commands,cmds,term,python
Platform: UNKNOWN
Classifier: Operating System :: Microsoft :: Windows
Classifier: Programming Language :: Python :: 3
Classifier: Intended Audience :: Developers
Description-Content-Type: text/markdown
