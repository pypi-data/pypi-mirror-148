{"version":3,"file":"b53ca995.js","mappings":";AAmCA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAvCA;;;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFA;AAoEA;;AApEA;;;;ACAA;;;;;;;;;;;;;;;;;AAAA;;ACuBA;;AAGA;AACA;AACA;;AAEA;AAGA;;AAEA;;;AAGA;;AAGA;AACA;;;;AAIA;;;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA7CA;;ACuBA;AACA;;AAEA;;;;AAIA;;;;;AAKA;;;;;AAOA;;AAEA;;;;AAQA;;;;AAIA;;;;AAIA;AACA;;;;;AAKA;;;;;;;AAOA;;;;AAIA;;;;;AAKA;;;;;;;AAOA;;;;;;;;;AASA;AAOA;;AAIA;AACA;;AAGA;AACA;;;;AAKA;;;;AAMA;;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA3HA;;ACoCA;;;;;;AAMA;;;AAKA;;;;AAIA;AAKA;;;AAQA;AAGA;;AAMA;;;AAGA;;AAIA;;;;;AASA;;;;;AAUA;AAKA;AACA;AAEA;AACA;AACA;;AAGA;AAGA;AACA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAlHA;;AC4DA;AAEA;;;AAKA;;;;AAIA;;AATA;AAeA;;;AAUA;;AAIA;;AAIA;;AAIA;AACA;AAGA;;AAEA;;;AALA;;AAeA;;AAEA;;AAnFA;;;;AAyFA;;;;AAIA;;;;;AAKA;;;;AAIA;;;;AAIA;;;AAGA;;;;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA7HA","sources":["webpack://home-assistant-frontend/./src/components/ha-button-menu.ts","webpack://home-assistant-frontend/./src/components/ha-card.ts","webpack://home-assistant-frontend/./src/components/ha-logo-svg.ts","webpack://home-assistant-frontend/./src/layouts/hass-subpage.ts","webpack://home-assistant-frontend/./src/panels/config/info/ha-config-info.ts","webpack://home-assistant-frontend/./src/panels/config/info/integrations-card.ts","webpack://home-assistant-frontend/./src/panels/config/info/system-health-card.ts"],"sourcesContent":["import \"@material/mwc-menu\";\nimport type { Corner, Menu, MenuCorner } from \"@material/mwc-menu\";\nimport { css, CSSResultGroup, html, LitElement, TemplateResult } from \"lit\";\nimport { customElement, property, query } from \"lit/decorators\";\n\n@customElement(\"ha-button-menu\")\nexport class HaButtonMenu extends LitElement {\n  @property() public corner: Corner = \"TOP_START\";\n\n  @property() public menuCorner: MenuCorner = \"START\";\n\n  @property({ type: Number }) public x?: number;\n\n  @property({ type: Number }) public y?: number;\n\n  @property({ type: Boolean }) public multi = false;\n\n  @property({ type: Boolean }) public activatable = false;\n\n  @property({ type: Boolean }) public disabled = false;\n\n  @property({ type: Boolean }) public fixed = false;\n\n  @query(\"mwc-menu\", true) private _menu?: Menu;\n\n  public get items() {\n    return this._menu?.items;\n  }\n\n  public get selected() {\n    return this._menu?.selected;\n  }\n\n  protected render(): TemplateResult {\n    return html`\n      <div @click=${this._handleClick}>\n        <slot name=\"trigger\"></slot>\n      </div>\n      <mwc-menu\n        .corner=${this.corner}\n        .menuCorner=${this.menuCorner}\n        .fixed=${this.fixed}\n        .multi=${this.multi}\n        .activatable=${this.activatable}\n        .y=${this.y}\n        .x=${this.x}\n      >\n        <slot></slot>\n      </mwc-menu>\n    `;\n  }\n\n  private _handleClick(): void {\n    if (this.disabled) {\n      return;\n    }\n    this._menu!.anchor = this;\n    this._menu!.show();\n  }\n\n  static get styles(): CSSResultGroup {\n    return css`\n      :host {\n        display: inline-block;\n        position: relative;\n      }\n      ::slotted([disabled]) {\n        color: var(--disabled-text-color);\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-button-menu\": HaButtonMenu;\n  }\n}\n","import { css, CSSResultGroup, html, LitElement, TemplateResult } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\n\n@customElement(\"ha-card\")\nexport class HaCard extends LitElement {\n  @property() public header?: string;\n\n  @property({ type: Boolean, reflect: true }) public outlined = false;\n\n  static get styles(): CSSResultGroup {\n    return css`\n      :host {\n        background: var(\n          --ha-card-background,\n          var(--card-background-color, white)\n        );\n        border-radius: var(--ha-card-border-radius, 4px);\n        box-shadow: var(\n          --ha-card-box-shadow,\n          0px 2px 1px -1px rgba(0, 0, 0, 0.2),\n          0px 1px 1px 0px rgba(0, 0, 0, 0.14),\n          0px 1px 3px 0px rgba(0, 0, 0, 0.12)\n        );\n        color: var(--primary-text-color);\n        display: block;\n        transition: all 0.3s ease-out;\n        position: relative;\n      }\n\n      :host([outlined]) {\n        box-shadow: none;\n        border-width: var(--ha-card-border-width, 1px);\n        border-style: solid;\n        border-color: var(\n          --ha-card-border-color,\n          var(--divider-color, #e0e0e0)\n        );\n      }\n\n      .card-header,\n      :host ::slotted(.card-header) {\n        color: var(--ha-card-header-color, --primary-text-color);\n        font-family: var(--ha-card-header-font-family, inherit);\n        font-size: var(--ha-card-header-font-size, 24px);\n        letter-spacing: -0.012em;\n        line-height: 48px;\n        padding: 12px 16px 16px;\n        display: block;\n        margin-block-start: 0px;\n        margin-block-end: 0px;\n        font-weight: normal;\n      }\n\n      :host ::slotted(.card-content:not(:first-child)),\n      slot:not(:first-child)::slotted(.card-content) {\n        padding-top: 0px;\n        margin-top: -8px;\n      }\n\n      :host ::slotted(.card-content) {\n        padding: 16px;\n      }\n\n      :host ::slotted(.card-actions) {\n        border-top: 1px solid var(--divider-color, #e8e8e8);\n        padding: 5px 16px;\n      }\n    `;\n  }\n\n  protected render(): TemplateResult {\n    return html`\n      ${this.header\n        ? html`<h1 class=\"card-header\">${this.header}</h1>`\n        : html``}\n      <slot></slot>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-card\": HaCard;\n  }\n}\n","import { css, CSSResultGroup, LitElement, svg, SVGTemplateResult } from \"lit\";\nimport { customElement } from \"lit/decorators\";\n\n@customElement(\"ha-logo-svg\")\nexport class HaLogoSvg extends LitElement {\n  protected render(): SVGTemplateResult {\n    return svg`\n      <svg version=\"1.1\" viewBox=\"0 0 200 200\" xmlns=\"http://www.w3.org/2000/svg\">\n        <rect fill=\"#41bdf5\" width=\"200\" height=\"200\" ry=\"16.4\"/>\n        <path fill=\"#fff\" d=\"m38.416 165.29v-53.456h-13.901a3.7332 3.7332 0 0 1-2.662-6.3504l74.804-76.084c1.8068-1.8376 4.7612-1.8628 6.5992-0.056l0.048 0.048 39.04 39.518v-7.3188a3.1112 3.1112 0 0 1 3.1112-3.1112h12.964a3.1112 3.1112 0 0 1 3.1116 3.1112v26.855l16.627 17.047a3.7332 3.7332 0 0 1-2.6728 6.34h-13.954v53.456a3.1112 3.1112 0 0 1-3.1112 3.1112h-116.89a3.1112 3.1112 0 0 1-3.1112-3.1112zm82.556-65.304a6.0116 6.0116 0 0 0 0.584-2.5944c0-3.3232-2.684-6.0172-5.9956-6.0172-3.3112 0-5.9956 2.694-5.9956 6.0172s2.6844 6.0176 5.996 6.0176c0.9256 0 1.802-0.2108 2.5848-0.5868l8.6072 8.6384v8.3672l-10.792 10.831v-7.936a6.0184 6.0184 0 0 0 3.9972-5.6748c0-3.3232-2.6844-6.0176-5.996-6.0176-3.3112 0-5.996 2.6944-5.996 6.0176 0 2.62 1.6688 4.8488 3.9976 5.6748v11.947l-9.9932 10.029v-58.912l8.2076-8.2368a5.9544 5.9544 0 0 0 2.5848 0.5864c3.3116 0 5.996-2.694 5.996-6.0176 0-3.3232-2.6844-6.0172-5.996-6.0172-3.3112 0-5.9956 2.694-5.9956 6.0172 0 0.9292 0.2096 1.8088 0.584 2.5944l-7.3792 7.406-7.3796-7.406a6.0116 6.0116 0 0 0 0.584-2.5944c0-3.3232-2.684-6.0172-5.9956-6.0172-3.3112 0-5.9956 2.694-5.9956 6.0172 0 3.3236 2.6844 6.0176 5.996 6.0176 0.9256 0 1.802-0.2108 2.5848-0.5864l8.2072 8.2368v42.064l-14.39-14.442v-11.546a6.0184 6.0184 0 0 0 3.9972-5.6748c0-3.3236-2.6844-6.0176-5.996-6.0176-3.3112 0-5.996 2.694-5.996 6.0176 0 2.62 1.6688 4.8488 3.9976 5.6748v7.5348l-11.192-11.232v-11.145a6.0184 6.0184 0 0 0 3.9972-5.6748c0-3.3232-2.6844-6.0176-5.996-6.0176-3.3112 0-5.996 2.6944-5.996 6.0176 0 2.62 1.6688 4.8488 3.9976 5.6748v12.807l12.363 12.407h-7.108c-0.8232-2.3372-3.044-4.0116-5.6548-4.0116-3.3112 0-5.996 2.694-5.996 6.0172 0 3.3236 2.6848 6.0176 5.996 6.0176 2.6108 0 4.832-1.6744 5.6548-4.012h11.105l17.216 17.278v30.03l-9.1932-9.2264v-11.546a6.0184 6.0184 0 0 0 3.9972-5.6748c0-3.3232-2.6844-6.0172-5.996-6.0172-3.3112 0-5.996 2.694-5.996 6.0172 0 2.62 1.6688 4.8488 3.9976 5.6748v7.5348l-13.376-13.423a6.0116 6.0116 0 0 0 0.5844-2.5944c0-3.3232-2.684-6.0172-5.996-6.0172-3.3112 0-5.9956 2.694-5.9956 6.0172s2.6844 6.0172 5.996 6.0172c0.9256 0 1.8024-0.2104 2.5848-0.5864l13.376 13.424h-7.108c-0.8232-2.3372-3.044-4.012-5.6548-4.012-3.3112 0-5.996 2.6944-5.996 6.0176s2.6848 6.0172 5.996 6.0172c2.6108 0 4.8316-1.6744 5.6548-4.0116h11.105l11.192 11.232h5.6528l11.592-11.633h10.705c0.8232 2.3368 3.044 4.0112 5.6548 4.0112 3.3112 0 5.996-2.694 5.996-6.0172s-2.6848-6.0172-5.996-6.0172c-2.6108 0-4.8316 1.6744-5.6548 4.0116h-12.361l-10.764 10.802v-13.18l12.82-12.866h20.698c0.8232 2.3372 3.044 4.0116 5.6544 4.0116 3.3116 0 5.996-2.694 5.996-6.0172 0-3.3236-2.6844-6.0176-5.996-6.0176-2.6104 0-4.8312 1.6744-5.6544 4.012h-16.702l11.963-12.006v-10.029l8.6068-8.6384a5.9544 5.9544 0 0 0 2.5852 0.5868c3.3112 0 5.996-2.6944 5.996-6.0176s-2.6848-6.0172-5.996-6.0172-5.996 2.694-5.996 6.0172c0 0.9292 0.21 1.8088 0.5844 2.5944l-5.7804 5.8016v-18.367a6.0184 6.0184 0 0 0 3.9972-5.6748c0-3.3236-2.6844-6.0176-5.996-6.0176-3.3112 0-5.996 2.694-5.996 6.0176 0 2.62 1.6688 4.8488 3.9976 5.6748v18.366l-5.7808-5.8016zm-51.78 57.58c-1.3244 0-2.3984-1.0776-2.3984-2.4068s1.074-2.4068 2.3984-2.4068c1.3248 0 2.3984 1.0776 2.3984 2.4068s-1.0736 2.4068-2.3984 2.4068zm17.588-18.052c-1.3248 0-2.3988-1.0776-2.3988-2.4068s1.074-2.4068 2.3984-2.4068c1.3248 0 2.3984 1.0776 2.3984 2.4068s-1.0736 2.4068-2.3984 2.4068zm-20.786-2.808c-1.3248 0-2.3984-1.0776-2.3984-2.4068s1.0736-2.4068 2.3984-2.4068c1.3244 0 2.3984 1.0776 2.3984 2.4068s-1.074 2.4068-2.3984 2.4068zm-1.9988-20.058c-1.3244 0-2.398-1.0776-2.398-2.4072 0-1.3292 1.0736-2.4068 2.398-2.4068 1.3248 0 2.3984 1.0776 2.3984 2.4068 0 1.3296-1.0736 2.4072-2.3984 2.4072zm49.964 2.808c-1.3244 0-2.398-1.0776-2.398-2.4068 0-1.3296 1.0736-2.4072 2.398-2.4072 1.3248 0 2.3984 1.0776 2.3984 2.4072 0 1.3292-1.0736 2.4068-2.3984 2.4068zm27.181 18.453c-1.324 0-2.398-1.0776-2.398-2.4068 0-1.3296 1.0736-2.4072 2.398-2.4072 1.3248 0 2.3984 1.0776 2.3984 2.4072 0 1.3292-1.0736 2.4068-2.3984 2.4068zm-10.392 19.255c-1.3248 0-2.3984-1.0776-2.3984-2.4068s1.0736-2.4068 2.3984-2.4068c1.3244 0 2.3984 1.0776 2.3984 2.4068s-1.074 2.4068-2.3984 2.4068zm11.192-57.364c-1.3244 0-2.3984-1.078-2.3984-2.4072s1.074-2.4068 2.3984-2.4068 2.3984 1.0776 2.3984 2.4068-1.074 2.4072-2.3984 2.4072zm-13.191-15.645c-1.3244 0-2.3984-1.0776-2.3984-2.4068 0-1.3296 1.074-2.4072 2.3984-2.4072 1.3248 0 2.3984 1.0776 2.3984 2.4072 0 1.3292-1.0736 2.4068-2.3984 2.4068zm-15.989-9.628c-1.3244 0-2.398-1.0772-2.398-2.4068 0-1.3292 1.0736-2.4068 2.398-2.4068 1.3248 0 2.3984 1.0776 2.3984 2.4068 0 1.3296-1.0736 2.4072-2.3984 2.4072zm-25.582 0c-1.324 0-2.398-1.0772-2.398-2.4068 0-1.3292 1.0736-2.4068 2.398-2.4068 1.3248 0 2.3984 1.0776 2.3984 2.4068 0 1.3296-1.0736 2.4072-2.3984 2.4072zm-20.785 9.2268c-1.3244 0-2.3984-1.0776-2.3984-2.4068 0-1.3296 1.074-2.4072 2.3984-2.4072s2.3984 1.0776 2.3984 2.4072c0 1.3292-1.074 2.4068-2.3984 2.4068zm15.189 14.843c-1.3244 0-2.398-1.0776-2.398-2.4068 0-1.3296 1.0736-2.4072 2.398-2.4072 1.3248 0 2.3984 1.0776 2.3984 2.4072 0 1.3292-1.0736 2.4068-2.3984 2.4068zm33.976 1.2036c-1.324 0-2.398-1.078-2.398-2.4072s1.0736-2.4068 2.398-2.4068c1.3248 0 2.3984 1.0776 2.3984 2.4068s-1.0736 2.4072-2.3984 2.4072z\"/>\n      </svg>`;\n  }\n\n  static get styles(): CSSResultGroup {\n    return css`\n      :host {\n        display: var(--ha-icon-display, inline-flex);\n        align-items: center;\n        justify-content: center;\n        position: relative;\n        vertical-align: middle;\n        fill: currentcolor;\n        width: var(--mdc-icon-size, 24px);\n        height: var(--mdc-icon-size, 24px);\n      }\n      svg {\n        width: 100%;\n        height: 100%;\n        pointer-events: none;\n        display: block;\n      }\n    `;\n  }\n}\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-logo-svg\": HaLogoSvg;\n  }\n}\n","import { css, CSSResultGroup, html, LitElement, TemplateResult } from \"lit\";\nimport { customElement, eventOptions, property } from \"lit/decorators\";\nimport { restoreScroll } from \"../common/decorators/restore-scroll\";\nimport \"../components/ha-icon-button-arrow-prev\";\nimport \"../components/ha-menu-button\";\nimport { HomeAssistant } from \"../types\";\n\n@customElement(\"hass-subpage\")\nclass HassSubpage extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property() public header?: string;\n\n  @property({ type: Boolean, attribute: \"main-page\" }) public mainPage = false;\n\n  @property({ type: String, attribute: \"back-path\" }) public backPath?: string;\n\n  @property({ type: Boolean, reflect: true }) public narrow = false;\n\n  @property({ type: Boolean }) public supervisor = false;\n\n  // @ts-ignore\n  @restoreScroll(\".content\") private _savedScrollPos?: number;\n\n  protected render(): TemplateResult {\n    return html`\n      <div class=\"toolbar\">\n        ${this.mainPage || history.state?.root\n          ? html`\n              <ha-menu-button\n                .hassio=${this.supervisor}\n                .hass=${this.hass}\n                .narrow=${this.narrow}\n              ></ha-menu-button>\n            `\n          : this.backPath\n          ? html`\n              <a href=${this.backPath}>\n                <ha-icon-button-arrow-prev\n                  .hass=${this.hass}\n                ></ha-icon-button-arrow-prev>\n              </a>\n            `\n          : html`\n              <ha-icon-button-arrow-prev\n                .hass=${this.hass}\n                @click=${this._backTapped}\n              ></ha-icon-button-arrow-prev>\n            `}\n\n        <div class=\"main-title\">${this.header}</div>\n        <slot name=\"toolbar-icon\"></slot>\n      </div>\n      <div class=\"content\" @scroll=${this._saveScrollPos}><slot></slot></div>\n    `;\n  }\n\n  @eventOptions({ passive: true })\n  private _saveScrollPos(e: Event) {\n    this._savedScrollPos = (e.target as HTMLDivElement).scrollTop;\n  }\n\n  private _backTapped(): void {\n    history.back();\n  }\n\n  static get styles(): CSSResultGroup {\n    return css`\n      :host {\n        display: block;\n        height: 100%;\n        background-color: var(--primary-background-color);\n      }\n\n      :host([narrow]) {\n        width: 100%;\n        position: fixed;\n      }\n\n      .toolbar {\n        display: flex;\n        align-items: center;\n        font-size: 20px;\n        height: var(--header-height);\n        padding: 0 16px;\n        pointer-events: none;\n        background-color: var(--app-header-background-color);\n        font-weight: 400;\n        color: var(--app-header-text-color, white);\n        border-bottom: var(--app-header-border-bottom, none);\n        box-sizing: border-box;\n      }\n      .toolbar a {\n        color: var(--sidebar-text-color);\n        text-decoration: none;\n      }\n\n      ha-menu-button,\n      ha-icon-button-arrow-prev,\n      ::slotted([slot=\"toolbar-icon\"]) {\n        pointer-events: auto;\n      }\n\n      .main-title {\n        margin: 0 0 0 24px;\n        line-height: 20px;\n        flex-grow: 1;\n      }\n\n      .content {\n        position: relative;\n        width: 100%;\n        height: calc(100% - 1px - var(--header-height));\n        overflow-y: auto;\n        overflow: auto;\n        -webkit-overflow-scrolling: touch;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hass-subpage\": HassSubpage;\n  }\n}\n","import { css, CSSResultGroup, html, LitElement, TemplateResult } from \"lit\";\nimport { property } from \"lit/decorators\";\nimport \"../../../components/ha-logo-svg\";\nimport \"../../../layouts/hass-subpage\";\nimport { haStyle } from \"../../../resources/styles\";\nimport { HomeAssistant, Route } from \"../../../types\";\nimport { documentationUrl } from \"../../../util/documentation-url\";\nimport \"./integrations-card\";\nimport \"./system-health-card\";\n\nconst JS_TYPE = __BUILD__;\nconst JS_VERSION = __VERSION__;\n\nclass HaConfigInfo extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property() public narrow!: boolean;\n\n  @property() public isWide!: boolean;\n\n  @property() public showAdvanced!: boolean;\n\n  @property() public route!: Route;\n\n  protected render(): TemplateResult {\n    const hass = this.hass;\n    const customUiList: Array<{ name: string; url: string; version: string }> =\n      (window as any).CUSTOM_UI_LIST || [];\n\n    return html`\n      <hass-subpage\n        .hass=${this.hass}\n        .narrow=${this.narrow}\n        back-path=\"/config\"\n        .header=${this.hass.localize(\"ui.panel.config.info.caption\")}\n      >\n        <div class=\"about\">\n          <a\n            href=${documentationUrl(this.hass, \"\")}\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            <ha-logo-svg\n              title=${this.hass.localize(\n                \"ui.panel.config.info.home_assistant_logo\"\n              )}\n            >\n            </ha-logo-svg>\n          </a>\n          <br />\n          <h2>Home Assistant ${hass.connection.haVersion}</h2>\n          <p>\n            ${this.hass.localize(\n              \"ui.panel.config.info.path_configuration\",\n              \"path\",\n              hass.config.config_dir\n            )}\n          </p>\n          <p class=\"develop\">\n            <a\n              href=${documentationUrl(this.hass, \"/developers/credits/\")}\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              ${this.hass.localize(\"ui.panel.config.info.developed_by\")}\n            </a>\n          </p>\n          <p>\n            ${this.hass.localize(\"ui.panel.config.info.license\")}<br />\n            ${this.hass.localize(\"ui.panel.config.info.source\")}\n            <a\n              href=\"https://github.com/home-assistant/core\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n              >${this.hass.localize(\"ui.panel.config.info.server\")}</a\n            >\n            &mdash;\n            <a\n              href=\"https://github.com/home-assistant/frontend\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n              >${this.hass.localize(\"ui.panel.config.info.frontend\")}</a\n            >\n          </p>\n          <p>\n            ${this.hass.localize(\"ui.panel.config.info.built_using\")}\n            <a href=\"https://www.python.org\" target=\"_blank\" rel=\"noreferrer\"\n              >Python 3</a\n            >,\n            <a href=\"https://lit.dev\" target=\"_blank\" rel=\"noreferrer\">Lit</a>,\n            ${this.hass.localize(\"ui.panel.config.info.icons_by\")}\n            <a\n              href=\"https://fonts.google.com/icons?selected=Material+Icons\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n              >Google</a\n            >\n            ${this.hass.localize(\"ui.common.and\")}\n            <a\n              href=\"https://materialdesignicons.com/\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n              >Material Design Icons</a\n            >.\n          </p>\n          <p>\n            ${this.hass.localize(\n              \"ui.panel.config.info.frontend_version\",\n              \"version\",\n              JS_VERSION,\n              \"type\",\n              JS_TYPE\n            )}\n            ${\n              customUiList.length > 0\n                ? html`\n                    <div>\n                      ${this.hass.localize(\"ui.panel.config.info.custom_uis\")}\n                      ${customUiList.map(\n                        (item) => html`\n                          <div>\n                            <a href=${item.url} target=\"_blank\"> ${item.name}</a\n                            >: ${item.version}\n                          </div>\n                        `\n                      )}\n                    </div>\n                  `\n                : \"\"\n            }\n          </p>\n        </div>\n        <div>\n          <system-health-card .hass=${this.hass}></system-health-card>\n          <integrations-card\n            .hass=${this.hass}\n            .narrow=${this.narrow}\n          ></integrations-card>\n        </div>\n      </hass-tabs-subpage>\n    `;\n  }\n\n  protected firstUpdated(changedProps): void {\n    super.firstUpdated(changedProps);\n\n    // Legacy custom UI can be slow to register, give them time.\n    const customUI = ((window as any).CUSTOM_UI_LIST || []).length;\n    setTimeout(() => {\n      if (((window as any).CUSTOM_UI_LIST || []).length !== customUI.length) {\n        this.requestUpdate();\n      }\n    }, 1000);\n  }\n\n  static get styles(): CSSResultGroup {\n    return [\n      haStyle,\n      css`\n        :host {\n          -ms-user-select: initial;\n          -webkit-user-select: initial;\n          -moz-user-select: initial;\n        }\n\n        .about {\n          text-align: center;\n          line-height: 2em;\n        }\n\n        .version {\n          @apply --paper-font-headline;\n        }\n\n        .develop {\n          @apply --paper-font-subhead;\n        }\n\n        .about a {\n          color: var(--primary-color);\n        }\n\n        system-health-card,\n        integrations-card {\n          display: block;\n          max-width: 600px;\n          margin: 0 auto;\n          padding-bottom: 16px;\n        }\n        ha-logo-svg {\n          padding: 12px;\n          height: 180px;\n          width: 180px;\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-config-info\": HaConfigInfo;\n  }\n}\n\ncustomElements.define(\"ha-config-info\", HaConfigInfo);\n","import { css, CSSResultGroup, html, LitElement, TemplateResult } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport memoizeOne from \"memoize-one\";\nimport \"../../../components/ha-card\";\nimport {\n  domainToName,\n  fetchIntegrationManifests,\n  fetchIntegrationSetups,\n  integrationIssuesUrl,\n  IntegrationManifest,\n  IntegrationSetup,\n} from \"../../../data/integration\";\nimport { HomeAssistant } from \"../../../types\";\nimport { brandsUrl } from \"../../../util/brands-url\";\nimport { documentationUrl } from \"../../../util/documentation-url\";\n\n@customElement(\"integrations-card\")\nclass IntegrationsCard extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ type: Boolean }) public narrow = false;\n\n  @state() private _manifests?: {\n    [domain: string]: IntegrationManifest;\n  };\n\n  @state() private _setups?: {\n    [domain: string]: IntegrationSetup;\n  };\n\n  private _sortedIntegrations = memoizeOne((components: string[]) =>\n    Array.from(\n      new Set(\n        components.map((comp) =>\n          comp.includes(\".\") ? comp.split(\".\")[1] : comp\n        )\n      )\n    ).sort()\n  );\n\n  firstUpdated(changedProps) {\n    super.firstUpdated(changedProps);\n    this._fetchManifests();\n    this._fetchSetups();\n  }\n\n  protected render(): TemplateResult {\n    return html`\n      <ha-card\n        .header=${this.hass.localize(\"ui.panel.config.info.integrations\")}\n      >\n        <table class=\"card-content\">\n          <thead>\n            <tr>\n              <th></th>\n              ${!this.narrow\n                ? html`<th></th>\n                    <th></th>\n                    <th></th>`\n                : \"\"}\n              <th>${this.hass.localize(\"ui.panel.config.info.setup_time\")}</th>\n            </tr>\n          </thead>\n          <tbody>\n            ${this._sortedIntegrations(this.hass!.config.components).map(\n              (domain) => {\n                const manifest = this._manifests && this._manifests[domain];\n                const docLink = manifest\n                  ? html`<a\n                      href=${manifest.is_built_in\n                        ? documentationUrl(\n                            this.hass,\n                            `/integrations/${manifest.domain}`\n                          )\n                        : manifest.documentation}\n                      target=\"_blank\"\n                      rel=\"noreferrer\"\n                      >${this.hass.localize(\n                        \"ui.panel.config.info.documentation\"\n                      )}</a\n                    >`\n                  : \"\";\n                const issueLink =\n                  manifest && (manifest.is_built_in || manifest.issue_tracker)\n                    ? html`\n                        <a\n                          href=${integrationIssuesUrl(domain, manifest)}\n                          target=\"_blank\"\n                          rel=\"noreferrer\"\n                          >${this.hass.localize(\n                            \"ui.panel.config.info.issues\"\n                          )}</a\n                        >\n                      `\n                    : \"\";\n                const setupSeconds =\n                  this._setups?.[domain]?.seconds?.toFixed(2);\n                return html`\n                  <tr>\n                    <td>\n                      <img\n                        loading=\"lazy\"\n                        src=${brandsUrl({\n                          domain: domain,\n                          type: \"icon\",\n                          useFallback: true,\n                          darkOptimized: this.hass.themes?.darkMode,\n                        })}\n                        referrerpolicy=\"no-referrer\"\n                      />\n                    </td>\n                    <td class=\"name\">\n                      ${domainToName(\n                        this.hass.localize,\n                        domain,\n                        manifest\n                      )}<br />\n                      <span class=\"domain\">${domain}</span>\n                      ${this.narrow\n                        ? html`<div class=\"mobile-row\">\n                            <div>${docLink} ${issueLink}</div>\n                            ${setupSeconds ? html`${setupSeconds} s` : \"\"}\n                          </div>`\n                        : \"\"}\n                    </td>\n                    ${this.narrow\n                      ? \"\"\n                      : html`\n                          <td>${docLink}</td>\n                          <td>${issueLink}</td>\n                          <td class=\"setup\">\n                            ${setupSeconds ? html`${setupSeconds} s` : \"\"}\n                          </td>\n                        `}\n                  </tr>\n                `;\n              }\n            )}\n          </tbody>\n        </table>\n      </ha-card>\n    `;\n  }\n\n  private async _fetchManifests() {\n    const manifests = {};\n    for (const manifest of await fetchIntegrationManifests(this.hass)) {\n      manifests[manifest.domain] = manifest;\n    }\n    this._manifests = manifests;\n  }\n\n  private async _fetchSetups() {\n    const setups = {};\n    for (const setup of await fetchIntegrationSetups(this.hass)) {\n      setups[setup.domain] = setup;\n    }\n    this._setups = setups;\n  }\n\n  static get styles(): CSSResultGroup {\n    return css`\n      table {\n        width: 100%;\n      }\n      td,\n      th {\n        padding: 0 8px;\n      }\n      td:first-child {\n        padding-left: 0;\n      }\n      td.name {\n        padding: 8px;\n      }\n      td.setup {\n        text-align: right;\n        white-space: nowrap;\n        direction: ltr;\n      }\n      th {\n        text-align: right;\n      }\n      .domain {\n        color: var(--secondary-text-color);\n      }\n      .mobile-row {\n        display: flex;\n        justify-content: space-between;\n      }\n      .mobile-row a:not(:last-of-type) {\n        margin-right: 4px;\n      }\n      img {\n        display: block;\n        max-height: 40px;\n        max-width: 40px;\n      }\n      a {\n        color: var(--primary-color);\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"integrations-card\": IntegrationsCard;\n  }\n}\n","import \"@material/mwc-button/mwc-button\";\nimport { ActionDetail } from \"@material/mwc-list/mwc-list-foundation\";\nimport \"@material/mwc-list/mwc-list-item\";\nimport { mdiContentCopy } from \"@mdi/js\";\nimport \"@polymer/paper-tooltip/paper-tooltip\";\nimport { css, CSSResultGroup, html, LitElement, TemplateResult } from \"lit\";\nimport { property, state } from \"lit/decorators\";\nimport { isComponentLoaded } from \"../../../common/config/is_component_loaded\";\nimport { formatDateTime } from \"../../../common/datetime/format_date_time\";\nimport { copyToClipboard } from \"../../../common/util/copy-clipboard\";\nimport \"../../../components/ha-button-menu\";\nimport \"../../../components/ha-card\";\nimport \"../../../components/ha-circular-progress\";\nimport \"../../../components/ha-icon-button\";\nimport { domainToName } from \"../../../data/integration\";\nimport {\n  subscribeSystemHealthInfo,\n  SystemCheckValueObject,\n  SystemHealthInfo,\n} from \"../../../data/system_health\";\nimport { HomeAssistant } from \"../../../types\";\nimport { showToast } from \"../../../util/toast\";\n\nconst sortKeys = (a: string, b: string) => {\n  if (a === \"homeassistant\") {\n    return -1;\n  }\n  if (b === \"homeassistant\") {\n    return 1;\n  }\n  if (a < b) {\n    return -1;\n  }\n  if (b < a) {\n    return 1;\n  }\n  return 0;\n};\n\nclass SystemHealthCard extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @state() private _info?: SystemHealthInfo;\n\n  protected render(): TemplateResult {\n    if (!this.hass) {\n      return html``;\n    }\n    const sections: TemplateResult[] = [];\n\n    if (!this._info) {\n      sections.push(\n        html`\n          <div class=\"loading-container\">\n            <ha-circular-progress active></ha-circular-progress>\n          </div>\n        `\n      );\n    } else {\n      const domains = Object.keys(this._info).sort(sortKeys);\n      for (const domain of domains) {\n        const domainInfo = this._info[domain];\n        const keys: TemplateResult[] = [];\n\n        for (const key of Object.keys(domainInfo.info)) {\n          let value: unknown;\n\n          if (\n            domainInfo.info[key] &&\n            typeof domainInfo.info[key] === \"object\"\n          ) {\n            const info = domainInfo.info[key] as SystemCheckValueObject;\n\n            if (info.type === \"pending\") {\n              value = html`\n                <ha-circular-progress active size=\"tiny\"></ha-circular-progress>\n              `;\n            } else if (info.type === \"failed\") {\n              value = html`\n                <span class=\"error\">${info.error}</span>${!info.more_info\n                  ? \"\"\n                  : html`\n                      –\n                      <a\n                        href=${info.more_info}\n                        target=\"_blank\"\n                        rel=\"noreferrer noopener\"\n                      >\n                        ${this.hass.localize(\n                          \"ui.panel.config.info.system_health.more_info\"\n                        )}\n                      </a>\n                    `}\n              `;\n            } else if (info.type === \"date\") {\n              value = formatDateTime(new Date(info.value), this.hass.locale);\n            }\n          } else {\n            value = domainInfo.info[key];\n          }\n\n          keys.push(html`\n            <tr>\n              <td>\n                ${this.hass.localize(\n                  `component.${domain}.system_health.info.${key}`\n                ) || key}\n              </td>\n              <td>${value}</td>\n            </tr>\n          `);\n        }\n        if (domain !== \"homeassistant\") {\n          sections.push(\n            html`\n              <div class=\"card-header\">\n                <h3>${domainToName(this.hass.localize, domain)}</h3>\n                ${!domainInfo.manage_url\n                  ? \"\"\n                  : html`\n                      <a class=\"manage\" href=${domainInfo.manage_url}>\n                        <mwc-button>\n                          ${this.hass.localize(\n                            \"ui.panel.config.info.system_health.manage\"\n                          )}\n                        </mwc-button>\n                      </a>\n                    `}\n              </div>\n            `\n          );\n        }\n        sections.push(html`\n          <table>\n            ${keys}\n          </table>\n        `);\n      }\n    }\n\n    return html`\n      <ha-card>\n        <h1 class=\"card-header\">\n          <div class=\"card-header-text\">\n            ${domainToName(this.hass.localize, \"system_health\")}\n          </div>\n          <ha-button-menu\n            corner=\"BOTTOM_START\"\n            slot=\"toolbar-icon\"\n            @action=${this._copyInfo}\n          >\n            <ha-icon-button\n              slot=\"trigger\"\n              .label=${this.hass.localize(\"ui.panel.config.info.copy_menu\")}\n              .path=${mdiContentCopy}\n            ></ha-icon-button>\n            <mwc-list-item>\n              ${this.hass.localize(\"ui.panel.config.info.copy_raw\")}\n            </mwc-list-item>\n            <mwc-list-item>\n              ${this.hass.localize(\"ui.panel.config.info.copy_github\")}\n            </mwc-list-item>\n          </ha-button-menu>\n        </h1>\n        <div class=\"card-content\">${sections}</div>\n      </ha-card>\n    `;\n  }\n\n  protected firstUpdated(changedProps) {\n    super.firstUpdated(changedProps);\n\n    this.hass!.loadBackendTranslation(\"system_health\");\n\n    if (!isComponentLoaded(this.hass!, \"system_health\")) {\n      this._info = {\n        system_health: {\n          info: {\n            error: this.hass.localize(\n              \"ui.panel.config.info.system_health_error\"\n            ),\n          },\n        },\n      };\n      return;\n    }\n\n    subscribeSystemHealthInfo(this.hass!, (info) => {\n      this._info = info;\n    });\n  }\n\n  private async _copyInfo(ev: CustomEvent<ActionDetail>): Promise<void> {\n    const github = ev.detail.index === 1;\n    let haContent: string | undefined;\n    const domainParts: string[] = [];\n\n    for (const domain of Object.keys(this._info!).sort(sortKeys)) {\n      const domainInfo = this._info![domain];\n      let first = true;\n      const parts = [\n        `${\n          github && domain !== \"homeassistant\"\n            ? `<details><summary>${domainToName(\n                this.hass.localize,\n                domain\n              )}</summary>\\n`\n            : \"\"\n        }`,\n      ];\n\n      for (const key of Object.keys(domainInfo.info)) {\n        let value: unknown;\n\n        if (typeof domainInfo.info[key] === \"object\") {\n          const info = domainInfo.info[key] as SystemCheckValueObject;\n\n          if (info.type === \"pending\") {\n            value = \"pending\";\n          } else if (info.type === \"failed\") {\n            value = `failed to load: ${info.error}`;\n          } else if (info.type === \"date\") {\n            value = formatDateTime(new Date(info.value), this.hass.locale);\n          }\n        } else {\n          value = domainInfo.info[key];\n        }\n        if (github && first) {\n          parts.push(`${key} | ${value}\\n-- | --`);\n          first = false;\n        } else {\n          parts.push(`${key}${github ? \" | \" : \": \"}${value}`);\n        }\n      }\n\n      if (domain === \"homeassistant\") {\n        haContent = parts.join(\"\\n\");\n      } else {\n        domainParts.push(parts.join(\"\\n\"));\n        if (github && domain !== \"homeassistant\") {\n          domainParts.push(\"</details>\");\n        }\n      }\n    }\n\n    await copyToClipboard(\n      `${github ? \"## \" : \"\"}System Health\\n${haContent}\\n\\n${domainParts.join(\n        \"\\n\\n\"\n      )}`\n    );\n\n    showToast(this, {\n      message: this.hass.localize(\"ui.common.copied_clipboard\"),\n    });\n  }\n\n  static get styles(): CSSResultGroup {\n    return css`\n      table {\n        width: 100%;\n      }\n\n      td:first-child {\n        width: 45%;\n      }\n\n      td:last-child {\n        direction: ltr;\n      }\n\n      .loading-container {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n      }\n\n      .card-header {\n        justify-content: space-between;\n        display: flex;\n        align-items: center;\n      }\n\n      .error {\n        color: var(--error-color);\n      }\n\n      a {\n        color: var(--primary-color);\n      }\n\n      a.manage {\n        text-decoration: none;\n      }\n    `;\n  }\n}\n\ncustomElements.define(\"system-health-card\", SystemHealthCard);\n"],"names":[],"sourceRoot":""}