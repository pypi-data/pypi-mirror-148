{"version":3,"file":"a017aadc.js","mappings":";;;AAgCA;AACA;AACA;;;;AAIA;;AAGA;AACA;AACA;;;AAGA;AAEA;;;;;;;;;;;;;;;;;;;;AA/BA","sources":["webpack://home-assistant-frontend/./src/panels/config/core/ha-config-section-updates.ts"],"sourcesContent":["import { HassEntities } from \"home-assistant-js-websocket\";\nimport { css, html, LitElement, PropertyValues, TemplateResult } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport memoizeOne from \"memoize-one\";\nimport { computeStateDomain } from \"../../../common/entity/compute_state_domain\";\nimport { caseInsensitiveStringCompare } from \"../../../common/string/compare\";\nimport \"../../../components/ha-alert\";\nimport \"../../../components/ha-bar\";\nimport \"../../../components/ha-metric\";\nimport { updateCanInstall, UpdateEntity } from \"../../../data/update\";\nimport \"../../../layouts/hass-subpage\";\nimport type { HomeAssistant } from \"../../../types\";\nimport { showToast } from \"../../../util/toast\";\nimport \"../dashboard/ha-config-updates\";\nimport \"./ha-config-analytics\";\n\n@customElement(\"ha-config-section-updates\")\nclass HaConfigSectionUpdates extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ type: Boolean }) public narrow!: boolean;\n\n  private _notifyUpdates = false;\n\n  protected render(): TemplateResult {\n    const canInstallUpdates = this._filterUpdateEntitiesWithInstall(\n      this.hass.states\n    );\n\n    return html`\n      <hass-subpage\n        back-path=\"/config/system\"\n        .hass=${this.hass}\n        .narrow=${this.narrow}\n        .header=${this.hass.localize(\"ui.panel.config.updates.caption\")}\n      >\n        <div class=\"content\">\n          <ha-card outlined>\n            ${canInstallUpdates.length\n              ? html`\n                  <ha-config-updates\n                    .hass=${this.hass}\n                    .narrow=${this.narrow}\n                    .updateEntities=${canInstallUpdates}\n                    showAll\n                  ></ha-config-updates>\n                `\n              : html`\n                  ${this.hass.localize(\"ui.panel.config.updates.no_updates\")}\n                `}\n          </ha-card>\n        </div>\n      </hass-subpage>\n    `;\n  }\n\n  protected override updated(changedProps: PropertyValues): void {\n    super.updated(changedProps);\n\n    if (!changedProps.has(\"hass\") || !this._notifyUpdates) {\n      return;\n    }\n    this._notifyUpdates = false;\n    if (this._filterUpdateEntitiesWithInstall(this.hass.states).length) {\n      showToast(this, {\n        message: this.hass.localize(\n          \"ui.panel.config.updates.updates_refreshed\"\n        ),\n      });\n    } else {\n      showToast(this, {\n        message: this.hass.localize(\"ui.panel.config.updates.no_new_updates\"),\n      });\n    }\n  }\n\n  private _filterUpdateEntities = memoizeOne((entities: HassEntities) =>\n    (\n      Object.values(entities).filter(\n        (entity) => computeStateDomain(entity) === \"update\"\n      ) as UpdateEntity[]\n    ).sort((a, b) => {\n      if (a.attributes.title === \"Home Assistant Core\") {\n        return -3;\n      }\n      if (b.attributes.title === \"Home Assistant Core\") {\n        return 3;\n      }\n      if (a.attributes.title === \"Home Assistant Operating System\") {\n        return -2;\n      }\n      if (b.attributes.title === \"Home Assistant Operating System\") {\n        return 2;\n      }\n      if (a.attributes.title === \"Home Assistant Supervisor\") {\n        return -1;\n      }\n      if (b.attributes.title === \"Home Assistant Supervisor\") {\n        return 1;\n      }\n      return caseInsensitiveStringCompare(\n        a.attributes.title || a.attributes.friendly_name || \"\",\n        b.attributes.title || b.attributes.friendly_name || \"\"\n      );\n    })\n  );\n\n  private _filterUpdateEntitiesWithInstall = memoizeOne(\n    (entities: HassEntities) =>\n      this._filterUpdateEntities(entities).filter((entity) =>\n        updateCanInstall(entity)\n      )\n  );\n\n  static styles = css`\n    .content {\n      padding: 28px 20px 0;\n      max-width: 1040px;\n      margin: 0 auto;\n    }\n    ha-card {\n      padding: 16px;\n      max-width: 500px;\n      margin: 0 auto;\n      height: 100%;\n      justify-content: space-between;\n      flex-direction: column;\n      display: flex;\n    }\n  `;\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-config-section-updates\": HaConfigSectionUpdates;\n  }\n}\n"],"names":[],"sourceRoot":""}